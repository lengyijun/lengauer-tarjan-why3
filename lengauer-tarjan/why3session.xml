<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.5.2" timelimit="120" steplimit="0" memlimit="10000"/>
<prover id="1" name="CVC5" version="1.0.8" timelimit="120" steplimit="0" memlimit="10000"/>
<prover id="2" name="Eprover" version="2.0" timelimit="120" steplimit="0" memlimit="10000"/>
<prover id="5" name="Alt-Ergo" version="2.5.2" alternative="BV" timelimit="120" steplimit="0" memlimit="10000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="lengauer-tarjan.mlw"/>
<theory name="DfsnumParent" proved="true">
 <goal name="concat_lemma" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="concat_lemma.0" proved="true">
  <proof prover="0"><result status="valid" time="0.030047" steps="15"/></proof>
  </goal>
  <goal name="concat_lemma.1" proved="true">
  <proof prover="0"><result status="valid" time="0.040031" steps="171"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="concat_lemma_b" proved="true">
 <proof prover="1"><result status="valid" time="0.238511" steps="29644"/></proof>
 </goal>
</theory>
<theory name="DfsnumParentStartMemHelper" proved="true">
 <goal name="InductionNodeMem.base" proved="true">
 <proof prover="0"><result status="valid" time="0.059711" steps="373"/></proof>
 </goal>
 <goal name="InductionNodeMem.induction_step" proved="true">
 <proof prover="0"><result status="valid" time="0.039271" steps="205"/></proof>
 </goal>
</theory>
<theory name="DfsnumParentStartMem" proved="true">
 <goal name="start_node_mem&#39;vc" expl="VC for start_node_mem" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="start_node_mem&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.029914" steps="15"/></proof>
  </goal>
  <goal name="start_node_mem&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.056846" steps="108"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="DfsnumParentSortedHelper" proved="true">
 <goal name="SimpleInduction.base" proved="true">
 <proof prover="0"><result status="valid" time="0.102695" steps="654"/></proof>
 </goal>
 <goal name="SimpleInduction.induction_step" proved="true">
 <proof prover="0"><result status="valid" time="1.895142" steps="11017"/></proof>
 </goal>
</theory>
<theory name="DfsnumParentSorted" proved="true">
 <goal name="unnamed_a&#39;vc" expl="VC for unnamed_a" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="unnamed_a&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.029211" steps="18"/></proof>
  </goal>
  <goal name="unnamed_a&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.413266" steps="2652"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="unnamed_e" proved="true">
 <transf name="split_goal_full" proved="true" >
  <goal name="unnamed_e.0" proved="true">
  <proof prover="0"><result status="valid" time="0.033776" steps="399"/></proof>
  </goal>
  <goal name="unnamed_e.1" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="unnamed_e.1.0" proved="true">
   <transf name="instantiate" proved="true" arg1="unnamed_a" arg2="dfsnum_parent, x, y, l">
    <goal name="unnamed_e.1.0.0" proved="true">
    <transf name="destruct_rec" proved="true" arg1="Hinst">
     <goal name="unnamed_e.1.0.0.0" expl="destruct premise" proved="true">
     <proof prover="0"><result status="valid" time="0.023268" steps="10"/></proof>
     </goal>
     <goal name="unnamed_e.1.0.0.1" expl="destruct premise" proved="true">
     <proof prover="0"><result status="valid" time="0.029427" steps="10"/></proof>
     </goal>
     <goal name="unnamed_e.1.0.0.2" proved="true">
     <proof prover="0"><result status="valid" time="0.118952" steps="730"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="unnamed_e.2" proved="true">
  <proof prover="0"><result status="valid" time="1.344318" steps="7142"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="DfsnumParentSimplelistHelper" proved="true">
 <goal name="InductionPathIsSimpleList.base" proved="true">
 <proof prover="1"><result status="valid" time="0.353533" steps="39361"/></proof>
 </goal>
 <goal name="InductionPathIsSimpleList.induction_step" proved="true">
 <proof prover="1"><result status="valid" time="1.534409" steps="118622"/></proof>
 </goal>
</theory>
<theory name="DfsnumParentSimplelist" proved="true">
 <goal name="is_simplelist&#39;vc" expl="VC for is_simplelist" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="is_simplelist&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.036983" steps="20"/></proof>
  </goal>
  <goal name="is_simplelist&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.052247" steps="210"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="DfsnumParentUniqueHelper" proved="true">
 <goal name="InductionUnique.base" proved="true">
 <proof prover="0"><result status="valid" time="0.284955" steps="1223"/></proof>
 <proof prover="1"><result status="valid" time="0.352554" steps="44451"/></proof>
 </goal>
 <goal name="InductionUnique.induction_step" proved="true">
 <proof prover="0"><result status="valid" time="0.190010" steps="931"/></proof>
 </goal>
</theory>
<theory name="DfsnumParentUnique" proved="true">
 <goal name="path_unique&#39;vc" expl="VC for path_unique" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_unique&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.034698" steps="23"/></proof>
  </goal>
  <goal name="path_unique&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.058750" steps="160"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="CutoffHelper" proved="true">
 <goal name="SimpleInduction.base" proved="true">
 <proof prover="0"><result status="valid" time="0.028399" steps="47"/></proof>
 </goal>
 <goal name="SimpleInduction.induction_step" proved="true">
 <transf name="inline_goal" proved="true" >
  <goal name="induction_step.0" proved="true">
  <transf name="intros_n" proved="true" arg1="8">
   <goal name="induction_step.0.0" proved="true">
   <transf name="induction_pr" proved="true" >
    <goal name="induction_step.0.0.0" proved="true">
    <proof prover="1"><result status="valid" time="0.063998" steps="15834"/></proof>
    </goal>
    <goal name="induction_step.0.0.1" proved="true">
    <proof prover="1"><result status="valid" time="1.838871" steps="109666"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cutoff" proved="true">
 <goal name="span_cutoff&#39;vc" expl="VC for span_cutoff" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="span_cutoff&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.028483" steps="16"/></proof>
  </goal>
  <goal name="span_cutoff&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.112326" steps="754"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="CutoffBHelper" proved="true">
 <goal name="SimpleInduction.base" proved="true">
 <proof prover="0"><result status="valid" time="0.063381" steps="591"/></proof>
 </goal>
 <goal name="SimpleInduction.induction_step" proved="true">
 <transf name="inline_goal" proved="true" >
  <goal name="induction_step.0" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="induction_step.0.0" proved="true">
   <transf name="assert" proved="true" arg1="(exists y l1. l2 = l1 ++ Cons y Nil)">
    <goal name="induction_step.0.0.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="0.168137"/></proof>
    </goal>
    <goal name="induction_step.0.0.1" proved="true">
    <proof prover="0"><result status="valid" time="0.107945" steps="609"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="CutoffB" proved="true">
 <goal name="span_cutoff_b&#39;vc" expl="VC for span_cutoff_b" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="span_cutoff_b&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.028552" steps="16"/></proof>
  </goal>
  <goal name="span_cutoff_b&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.028604" steps="39"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="DfsnumParentMustOnTree" proved="true">
 <goal name="must_on_tree" proved="true">
 <transf name="split_goal_full" proved="true" >
  <goal name="must_on_tree.0" proved="true">
  <proof prover="0"><result status="valid" time="0.072319" steps="98"/></proof>
  <proof prover="1"><result status="valid" time="0.115786" steps="23355"/></proof>
  <proof prover="2"><result status="valid" time="0.069921"/></proof>
  </goal>
  <goal name="must_on_tree.1" proved="true">
  <proof prover="0"><result status="valid" time="0.022607" steps="22"/></proof>
  </goal>
  <goal name="must_on_tree.2" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="must_on_tree.2.0" proved="true">
   <proof prover="1"><result status="valid" time="4.087698" steps="139489"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="DfsnumParentMutualParent" proved="true">
 <goal name="mutual_parent" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="mutual_parent.0" proved="true">
  <transf name="case" proved="true" arg1="(a1 = b)">
   <goal name="mutual_parent.0.0" expl="true case" proved="true">
   <proof prover="0"><result status="valid" time="0.026034" steps="22"/></proof>
   </goal>
   <goal name="mutual_parent.0.1" expl="false case" proved="true">
   <transf name="case" proved="true" arg1="(a2 = b)">
    <goal name="mutual_parent.0.1.0" expl="false case (true case)" proved="true">
    <proof prover="0"><result status="valid" time="0.034306" steps="24"/></proof>
    </goal>
    <goal name="mutual_parent.0.1.1" expl="false case" proved="true">
    <transf name="case" proved="true" arg1="(a1 = a2)">
     <goal name="mutual_parent.0.1.1.0" expl="false case (true case)" proved="true">
     <proof prover="0"><result status="valid" time="0.037257" steps="99"/></proof>
     </goal>
     <goal name="mutual_parent.0.1.1.1" expl="false case" proved="true">
     <transf name="assert" proved="true" arg1="(exists l. (--+-&gt;) dfsnum_parent root l b)">
      <goal name="mutual_parent.0.1.1.1.0" expl="asserted formula" proved="true">
      <proof prover="0"><result status="valid" time="0.077782" steps="283"/></proof>
      </goal>
      <goal name="mutual_parent.0.1.1.1.1" expl="false case" proved="true">
      <transf name="destruct_rec" proved="true" arg1="h">
       <goal name="mutual_parent.0.1.1.1.1.0" expl="false case" proved="true">
       <transf name="assert" proved="true" arg1="(mem2 a1 (Cons root l) /\ mem2 a2 (Cons root l))">
        <goal name="mutual_parent.0.1.1.1.1.0.0" expl="asserted formula" proved="true">
        <proof prover="0"><result status="valid" time="0.321848" steps="1723"/></proof>
        </goal>
        <goal name="mutual_parent.0.1.1.1.1.0.1" expl="false case" proved="true">
        <transf name="assert" proved="true" arg1="((exists l1 l2 l3. l1 ++ Cons a1 l2 ++ Cons a2 l3 = Cons root l) \/ (exists l1 l2 l3. l1 ++ Cons a2 l2 ++ Cons a1 l3 = Cons root l))">
         <goal name="mutual_parent.0.1.1.1.1.0.1.0" expl="asserted formula" proved="true">
         <proof prover="2"><result status="valid" time="19.354596"/></proof>
         </goal>
         <goal name="mutual_parent.0.1.1.1.1.0.1.1" expl="false case" proved="true">
         <transf name="destruct_rec" proved="true" arg1="h">
          <goal name="mutual_parent.0.1.1.1.1.0.1.1.0" expl="false case" proved="true">
          <transf name="destruct_term" proved="true" arg1="l1">
           <goal name="mutual_parent.0.1.1.1.1.0.1.1.0.0" expl="false case" proved="true">
           <proof prover="0"><result status="valid" time="19.513407" steps="54233"/></proof>
           </goal>
           <goal name="mutual_parent.0.1.1.1.1.0.1.1.0.1" expl="false case" proved="true">
           <proof prover="0"><result status="valid" time="2.040013" steps="12760"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="mutual_parent.0.1.1.1.1.0.1.1.1" expl="false case" proved="true">
          <transf name="destruct_term" proved="true" arg1="l1">
           <goal name="mutual_parent.0.1.1.1.1.0.1.1.1.0" expl="false case" proved="true">
           <proof prover="0"><result status="valid" time="16.782234" steps="54239"/></proof>
           </goal>
           <goal name="mutual_parent.0.1.1.1.1.0.1.1.1.1" expl="false case" proved="true">
           <proof prover="0"><result status="valid" time="2.203421" steps="12993"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="JustSpecialPathHelper" proved="true">
 <goal name="InductionJustSpecialPath.base" proved="true">
 <proof prover="0"><result status="valid" time="0.059643" steps="315"/></proof>
 </goal>
 <goal name="InductionJustSpecialPath.induction_step" proved="true">
 <proof prover="0"><result status="valid" time="0.071078" steps="173"/></proof>
 </goal>
</theory>
<theory name="JustSpecialPath" proved="true">
 <goal name="just_special_path&#39;vc" expl="VC for just_special_path" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="just_special_path&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.024687" steps="14"/></proof>
  </goal>
  <goal name="just_special_path&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.038441" steps="82"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="DfsnumParentSubset" proved="true">
 <goal name="subset_lemma" proved="true">
 <proof prover="0"><result status="valid" time="0.130830" steps="693"/></proof>
 </goal>
</theory>
<theory name="DfsnumParentPathSmall2LargeHelper" proved="true">
 <goal name="Inductionc.base" proved="true">
 <proof prover="0"><result status="valid" time="0.052751" steps="184"/></proof>
 </goal>
 <goal name="Inductionc.induction_step" proved="true">
 <proof prover="0"><result status="valid" time="0.061265" steps="159"/></proof>
 </goal>
</theory>
<theory name="DfsnumParentPathSmall2Large" proved="true">
 <goal name="unnamed_c&#39;vc" expl="VC for unnamed_c" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="unnamed_c&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.024639" steps="14"/></proof>
  </goal>
  <goal name="unnamed_c&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.045790" steps="176"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="DfsnumParentPathLarge2SmallHelper" proved="true">
 <goal name="Inductionb.base" proved="true">
 <proof prover="0"><result status="valid" time="0.150975" steps="917"/></proof>
 </goal>
 <goal name="Inductionb.induction_step" proved="true">
 <proof prover="0"><result status="valid" time="4.592704" steps="28632"/></proof>
 </goal>
</theory>
<theory name="DfsnumParentPathLarge2Small" proved="true">
 <goal name="unnamed_b&#39;vc" expl="VC for unnamed_b" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="unnamed_b&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.027082" steps="17"/></proof>
  </goal>
  <goal name="unnamed_b&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.038440" steps="93"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ReachableInDfsNumHelper" proved="true">
 <goal name="SimpleInduction.base" proved="true">
 <proof prover="0"><result status="valid" time="0.033034" steps="106"/></proof>
 </goal>
 <goal name="SimpleInduction.induction_step" proved="true">
 <proof prover="0"><result status="valid" time="0.082405" steps="537"/></proof>
 </goal>
</theory>
<theory name="ReachableInDfsNum" proved="true">
 <goal name="dfsnum_property_e&#39;vc" expl="VC for dfsnum_property_e" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="dfsnum_property_e&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.028087" steps="15"/></proof>
  </goal>
  <goal name="dfsnum_property_e&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.103055" steps="603"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Lemma2" proved="true">
 <goal name="lemma2&#39;vc" expl="VC for lemma2" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="lemma2&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.099943" steps="454"/></proof>
  </goal>
  <goal name="lemma2&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.180398" steps="1063"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Lemma1HelperAHelper" proved="true">
 <goal name="InductionLemma1Helper.base" proved="true">
 <proof prover="1"><result status="valid" time="2.040217" steps="137228"/></proof>
 </goal>
 <goal name="InductionLemma1Helper.induction_step" proved="true">
 <transf name="inline_goal" proved="true" >
  <goal name="induction_step.0" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="induction_step.0.0" proved="true">
   <transf name="assert" proved="true" arg1="(exists l1 z. l = l1 ++ Cons z Nil)">
    <goal name="induction_step.0.0.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="0.183576"/></proof>
    </goal>
    <goal name="induction_step.0.0.1" proved="true">
    <transf name="destruct_rec" proved="true" arg1="h">
     <goal name="induction_step.0.0.1.0" proved="true">
     <transf name="assert" proved="true" arg1="(exists iz pz . mapsto z (iz , pz) dfsnum_parent)">
      <goal name="induction_step.0.0.1.0.0" expl="asserted formula" proved="true">
      <proof prover="0"><result status="valid" time="7.394123" steps="40743"/></proof>
      </goal>
      <goal name="induction_step.0.0.1.0.1" proved="true">
      <transf name="destruct_rec" proved="true" arg1="h">
       <goal name="induction_step.0.0.1.0.1.0" proved="true">
       <transf name="instantiate" proved="true" arg1="H5" arg2="dfsnum_parent">
        <goal name="induction_step.0.0.1.0.1.0.0" proved="true">
        <transf name="assert" proved="true" arg1="((forall l2:list vertex, a1:vertex, ia1:int, pa1:vertex, t1:int. length l2 = n -&gt; (forall x:vertex. mem2 x l2 -&gt; mem x dfsnum_parent) -&gt; mapsto a1 (ia1, pa1) dfsnum_parent -&gt; ia1 &lt; t1 -&gt; (exists b:vertex, ib:int, pb:vertex, l11:list vertex, l21:list vertex. Cons a1 l2 = (l11 ++ Cons b l21) /\ mapsto b (ib, pb) dfsnum_parent /\ ib &lt; t1 /\ (forall x:vertex, ix:int, px:vertex. mem2 x l21 -&gt; mapsto x (ix, px) dfsnum_parent -&gt; ix &gt;= t1))))">
         <goal name="induction_step.0.0.1.0.1.0.0.0" expl="asserted formula" proved="true">
         <proof prover="1"><result status="valid" time="0.067764" steps="18295"/></proof>
         </goal>
         <goal name="induction_step.0.0.1.0.1.0.0.1" proved="true">
         <transf name="instantiate" proved="true" arg1="h" arg2="l1, a, ia, pa, t">
          <goal name="induction_step.0.0.1.0.1.0.0.1.0" proved="true">
          <transf name="assert" proved="true" arg1="(iz &lt; t \/ iz &gt;= t )">
           <goal name="induction_step.0.0.1.0.1.0.0.1.0.0" expl="asserted formula" proved="true">
           <proof prover="0"><result status="valid" time="0.016394" steps="18"/></proof>
           </goal>
           <goal name="induction_step.0.0.1.0.1.0.0.1.0.1" proved="true">
           <transf name="destruct_rec" proved="true" arg1="h">
            <goal name="induction_step.0.0.1.0.1.0.0.1.0.1.0" proved="true">
            <proof prover="0"><result status="valid" time="0.088639" steps="456"/></proof>
            </goal>
            <goal name="induction_step.0.0.1.0.1.0.0.1.0.1.1" proved="true">
            <transf name="assert" proved="true" arg1="((exists b:vertex, ib:int, pb:vertex, l11:list vertex, l21:list vertex. Cons a l1 = (l11 ++ Cons b l21) /\ mapsto b (ib, pb) dfsnum_parent /\ ib &lt; t /\ (forall x:vertex, ix:int, px:vertex. mem2 x l21 -&gt; mapsto x (ix, px) dfsnum_parent -&gt; ix &gt;= t)))">
             <goal name="induction_step.0.0.1.0.1.0.0.1.0.1.1.0" expl="asserted formula" proved="true">
             <proof prover="0"><result status="valid" time="0.080606" steps="416"/></proof>
             </goal>
             <goal name="induction_step.0.0.1.0.1.0.0.1.0.1.1.1" proved="true">
             <transf name="destruct_rec" proved="true" arg1="h">
              <goal name="induction_step.0.0.1.0.1.0.0.1.0.1.1.1.0" proved="true">
              <transf name="exists" proved="true" arg1="b">
               <goal name="induction_step.0.0.1.0.1.0.0.1.0.1.1.1.0.0" proved="true">
               <transf name="exists" proved="true" arg1="ib">
                <goal name="induction_step.0.0.1.0.1.0.0.1.0.1.1.1.0.0.0" proved="true">
                <transf name="exists" proved="true" arg1="pb">
                 <goal name="induction_step.0.0.1.0.1.0.0.1.0.1.1.1.0.0.0.0" proved="true">
                 <transf name="exists" proved="true" arg1="l11">
                  <goal name="induction_step.0.0.1.0.1.0.0.1.0.1.1.1.0.0.0.0.0" proved="true">
                  <transf name="exists" proved="true" arg1="(l21 ++ Cons z Nil)">
                   <goal name="induction_step.0.0.1.0.1.0.0.1.0.1.1.1.0.0.0.0.0.0" proved="true">
                   <proof prover="0"><result status="valid" time="0.176515" steps="1129"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Lemma1HelperA" proved="true">
 <goal name="lemma1_helper_a" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="lemma1_helper_a.0" proved="true">
  <transf name="assert" proved="true" arg1="(p_lemma1_helper (length l))">
   <goal name="lemma1_helper_a.0.0" expl="asserted formula" proved="true">
   <proof prover="0"><result status="valid" time="0.023344" steps="16"/></proof>
   </goal>
   <goal name="lemma1_helper_a.0.1" proved="true">
   <transf name="unfold" proved="true" arg1="p_lemma1_helper" arg2="in" arg3="h">
    <goal name="lemma1_helper_a.0.1.0" proved="true">
    <transf name="apply" proved="true" arg1="h" arg2="with" arg3="ia, pa">
     <goal name="lemma1_helper_a.0.1.0.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.023289" steps="10"/></proof>
     </goal>
     <goal name="lemma1_helper_a.0.1.0.1" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.024837" steps="10"/></proof>
     </goal>
     <goal name="lemma1_helper_a.0.1.0.2" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.030936" steps="16"/></proof>
     </goal>
     <goal name="lemma1_helper_a.0.1.0.3" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.020845" steps="10"/></proof>
     </goal>
     <goal name="lemma1_helper_a.0.1.0.4" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.025407" steps="10"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Lemma1HelperCHelper" proved="true">
 <goal name="InductionK.base" proved="true">
 <proof prover="0"><result status="valid" time="0.050108" steps="199"/></proof>
 </goal>
 <goal name="InductionK.induction_step" proved="true">
 <transf name="inline_goal" proved="true" >
  <goal name="induction_step.0" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="induction_step.0.0" proved="true">
   <transf name="assert" proved="true" arg1="(exists l1 z. l = l1 ++ Cons z Nil)">
    <goal name="induction_step.0.0.0" expl="asserted formula" proved="true">
    <proof prover="0"><result status="valid" time="0.037494" steps="113"/></proof>
    </goal>
    <goal name="induction_step.0.0.1" proved="true">
    <transf name="destruct_rec" proved="true" arg1="h">
     <goal name="induction_step.0.0.1.0" proved="true">
     <transf name="case" proved="true" arg1="(v = root)">
      <goal name="induction_step.0.0.1.0.0" expl="true case" proved="true">
      <proof prover="0"><result status="valid" time="0.583279" steps="1951"/></proof>
      </goal>
      <goal name="induction_step.0.0.1.0.1" expl="false case" proved="true">
      <transf name="assert" proved="true" arg1="(path v l1 z)">
       <goal name="induction_step.0.0.1.0.1.0" expl="asserted formula" proved="true">
       <proof prover="0"><result status="valid" time="0.030640" steps="32"/></proof>
       </goal>
       <goal name="induction_step.0.0.1.0.1.1" expl="false case" proved="true">
       <transf name="assert" proved="true" arg1="(exists l. path root l v)">
        <goal name="induction_step.0.0.1.0.1.1.0" expl="asserted formula" proved="true">
        <proof prover="0"><result status="valid" time="2.115547" steps="11504"/></proof>
        </goal>
        <goal name="induction_step.0.0.1.0.1.1.1" expl="false case" proved="true">
        <transf name="assert" proved="true" arg1="(exists l. path root l z)">
         <goal name="induction_step.0.0.1.0.1.1.1.0" expl="asserted formula" proved="true">
         <proof prover="1"><result status="valid" time="107.131708" steps="1218472"/></proof>
         <proof prover="2"><result status="valid" time="0.103592"/></proof>
         </goal>
         <goal name="induction_step.0.0.1.0.1.1.1.1" expl="false case" proved="true">
         <transf name="assert" proved="true" arg1="(exists iz pz. mapsto z (iz , pz) dfsnum_parent)">
          <goal name="induction_step.0.0.1.0.1.1.1.1.0" expl="asserted formula" proved="true">
          <proof prover="1"><result status="valid" time="0.557621" steps="51372"/></proof>
          <proof prover="2"><result status="valid" time="0.147164"/></proof>
          </goal>
          <goal name="induction_step.0.0.1.0.1.1.1.1.1" expl="false case" proved="true">
          <transf name="destruct_rec" proved="true" arg1="h">
           <goal name="induction_step.0.0.1.0.1.1.1.1.1.0" expl="false case" proved="true">
           <transf name="assert" proved="true" arg1="(iz &gt;= iv)">
            <goal name="induction_step.0.0.1.0.1.1.1.1.1.0.0" expl="asserted formula" proved="true">
            <proof prover="0"><result status="valid" time="0.069188" steps="293"/></proof>
            </goal>
            <goal name="induction_step.0.0.1.0.1.1.1.1.1.0.1" expl="false case" proved="true">
            <transf name="case" proved="true" arg1="(v = z)">
             <goal name="induction_step.0.0.1.0.1.1.1.1.1.0.1.0" expl="false case (true case)" proved="true">
             <proof prover="0"><result status="valid" time="0.109012" steps="304"/></proof>
             </goal>
             <goal name="induction_step.0.0.1.0.1.1.1.1.1.0.1.1" expl="false case" proved="true">
             <transf name="instantiate" proved="true" arg1="H8" arg2="dfsnum_parent, l1, v, iv, pv, z, iz, pz">
              <goal name="induction_step.0.0.1.0.1.1.1.1.1.0.1.1.0" expl="false case" proved="true">
              <transf name="assert" proved="true" arg1="((exists p:list vertex. (--+-&gt;) dfsnum_parent v p z))">
               <goal name="induction_step.0.0.1.0.1.1.1.1.1.0.1.1.0.0" expl="asserted formula" proved="true">
               <proof prover="0"><result status="valid" time="0.868930" steps="3549"/></proof>
               </goal>
               <goal name="induction_step.0.0.1.0.1.1.1.1.1.0.1.1.0.1" expl="false case" proved="true">
               <transf name="case" proved="true" arg1="(w  = z)">
                <goal name="induction_step.0.0.1.0.1.1.1.1.1.0.1.1.0.1.0" expl="false case (true case)" proved="true">
                <proof prover="0"><result status="valid" time="0.031109" steps="53"/></proof>
                </goal>
                <goal name="induction_step.0.0.1.0.1.1.1.1.1.0.1.1.0.1.1" expl="false case" proved="true">
                <transf name="assert" proved="true" arg1="(iw &lt; iz \/ iw &gt; iz )">
                 <goal name="induction_step.0.0.1.0.1.1.1.1.1.0.1.1.0.1.1.0" expl="asserted formula" proved="true">
                 <proof prover="0"><result status="valid" time="3.329305" steps="18665"/></proof>
                 </goal>
                 <goal name="induction_step.0.0.1.0.1.1.1.1.1.0.1.1.0.1.1.1" expl="false case" proved="true">
                 <transf name="destruct" proved="true" arg1="h">
                  <goal name="induction_step.0.0.1.0.1.1.1.1.1.0.1.1.0.1.1.1.0" expl="false case" proved="true">
                  <proof prover="0"><result status="valid" time="0.925102" steps="3349"/></proof>
                  </goal>
                  <goal name="induction_step.0.0.1.0.1.1.1.1.1.0.1.1.0.1.1.1.1" expl="false case" proved="true">
                  <transf name="assert" proved="true" arg1="(edge z w)">
                   <goal name="induction_step.0.0.1.0.1.1.1.1.1.0.1.1.0.1.1.1.1.0" expl="asserted formula" proved="true">
                   <proof prover="0"><result status="valid" time="0.030712" steps="52"/></proof>
                   </goal>
                   <goal name="induction_step.0.0.1.0.1.1.1.1.1.0.1.1.0.1.1.1.1.1" expl="false case" proved="true">
                   <transf name="unfold" proved="true" arg1="super_wf_dfsnum_parent" arg2="in" arg3="H6">
                    <goal name="induction_step.0.0.1.0.1.1.1.1.1.0.1.1.0.1.1.1.1.1.0" expl="false case" proved="true">
                    <transf name="destruct_rec" proved="true" arg1="H6">
                     <goal name="induction_step.0.0.1.0.1.1.1.1.1.0.1.1.0.1.1.1.1.1.0.0" expl="false case" proved="true">
                     <proof prover="2"><result status="valid" time="2.718938"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Lemma1HelperC" proved="true">
 <goal name="dfsnum_property_k&#39;vc" expl="VC for dfsnum_property_k" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="dfsnum_property_k&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.024282" steps="23"/></proof>
  </goal>
  <goal name="dfsnum_property_k&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.222567" steps="432"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Lemma1HelperB" proved="true">
 <goal name="InductionLemma1.base" proved="true">
 <transf name="inline_goal" proved="true" >
  <goal name="base.0" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="base.0.0" proved="true">
   <transf name="exists" proved="true" arg1="v">
    <goal name="base.0.0.0" proved="true">
    <proof prover="0"><result status="valid" time="0.069210" steps="441"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="InductionLemma1.induction_step" proved="true">
 <transf name="inline_goal" proved="true" >
  <goal name="induction_step.0" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="induction_step.0.0" proved="true">
   <transf name="case" proved="true" arg1="(v = root)">
    <goal name="induction_step.0.0.0" expl="true case" proved="true">
    <transf name="exists" proved="true" arg1="root">
     <goal name="induction_step.0.0.0.0" proved="true">
     <proof prover="0"><result status="valid" time="0.221986" steps="530"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="induction_step.0.0.1" expl="false case" proved="true">
    <transf name="case" proved="true" arg1="(length p = n + 1)">
     <goal name="induction_step.0.0.1.0" expl="false case (true case)" proved="true">
     <transf name="instantiate" proved="true" arg1="lemma1_helper_a" arg2="dfsnum_parent, p, v, iv, pv, iw">
      <goal name="induction_step.0.0.1.0.0" expl="false case (true case)" proved="true">
      <transf name="assert" proved="true" arg1="((exists b:vertex, ib:int, pb:vertex, l1:list vertex, l2:list vertex. Cons v p = (l1 ++ Cons b l2) /\ mapsto b (ib, pb) dfsnum_parent /\ ib &lt; iw /\ (forall x:vertex, ix:int, px:vertex. mem2 x l2 -&gt; mapsto x (ix, px) dfsnum_parent -&gt; ix &gt;= iw)))">
       <goal name="induction_step.0.0.1.0.0.0" expl="asserted formula" proved="true">
       <transf name="apply" proved="true" arg1="Hinst">
        <goal name="induction_step.0.0.1.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="0.024119" steps="28"/></proof>
        </goal>
        <goal name="induction_step.0.0.1.0.0.0.1" expl="apply premises" proved="true">
        <transf name="introduce_premises" proved="true" >
         <goal name="induction_step.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="assert" proved="true" arg1="(exists p. path v p x)">
          <goal name="induction_step.0.0.1.0.0.0.1.0.0" expl="asserted formula" proved="true">
          <proof prover="0"><result status="valid" time="0.264825" steps="712"/></proof>
          </goal>
          <goal name="induction_step.0.0.1.0.0.0.1.0.1" expl="apply premises" proved="true">
          <transf name="assert" proved="true" arg1="(exists p. path root p v)">
           <goal name="induction_step.0.0.1.0.0.0.1.0.1.0" expl="asserted formula" proved="true">
           <proof prover="0"><result status="valid" time="2.799046" steps="11782"/></proof>
           </goal>
           <goal name="induction_step.0.0.1.0.0.0.1.0.1.1" expl="apply premises" proved="true">
           <transf name="assert" proved="true" arg1="(exists p. path root p x)">
            <goal name="induction_step.0.0.1.0.0.0.1.0.1.1.0" expl="asserted formula" proved="true">
            <proof prover="1"><result status="valid" time="107.660108" steps="1484414"/></proof>
            <proof prover="2"><result status="valid" time="0.148148"/></proof>
            </goal>
            <goal name="induction_step.0.0.1.0.0.0.1.0.1.1.1" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="0.097247" steps="330"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="induction_step.0.0.1.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="0.031674" steps="28"/></proof>
        </goal>
        <goal name="induction_step.0.0.1.0.0.0.3" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="0.017855" steps="28"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="induction_step.0.0.1.0.0.1" expl="false case (true case)" proved="true">
       <transf name="destruct_rec" proved="true" arg1="h">
        <goal name="induction_step.0.0.1.0.0.1.0" expl="false case (true case)" proved="true">
        <transf name="assert" proved="true" arg1="(exists l. (--+-&gt;) dfsnum_parent b l w)">
         <goal name="induction_step.0.0.1.0.0.1.0.0" expl="asserted formula" proved="true">
         <transf name="apply" proved="true" arg1="dfsnum_property_k" arg2="with" arg3="ib, pb, iw, pw, l2">
          <goal name="induction_step.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="0.025920" steps="34"/></proof>
          </goal>
          <goal name="induction_step.0.0.1.0.0.1.0.0.1" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="0.039890" steps="34"/></proof>
          </goal>
          <goal name="induction_step.0.0.1.0.0.1.0.0.2" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="0.052489" steps="34"/></proof>
          </goal>
          <goal name="induction_step.0.0.1.0.0.1.0.0.3" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="0.029919" steps="34"/></proof>
          </goal>
          <goal name="induction_step.0.0.1.0.0.1.0.0.4" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="0.026413" steps="34"/></proof>
          </goal>
          <goal name="induction_step.0.0.1.0.0.1.0.0.5" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="0.136526" steps="23713"/></proof>
          </goal>
          <goal name="induction_step.0.0.1.0.0.1.0.0.6" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="0.033165" steps="72"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="induction_step.0.0.1.0.0.1.0.1" expl="false case (true case)" proved="true">
         <transf name="case" proved="true" arg1="(v = b)">
          <goal name="induction_step.0.0.1.0.0.1.0.1.0" expl="false case (true case)" proved="true">
          <transf name="exists" proved="true" arg1="b">
           <goal name="induction_step.0.0.1.0.0.1.0.1.0.0" proved="true">
           <proof prover="0"><result status="valid" time="0.073355" steps="329"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="induction_step.0.0.1.0.0.1.0.1.1" expl="false case (true case)" proved="true">
          <transf name="assert" proved="true" arg1="(iv &lt; ib \/ iv &gt; ib)">
           <goal name="induction_step.0.0.1.0.0.1.0.1.1.0" expl="asserted formula" proved="true">
           <proof prover="0"><result status="valid" time="0.800131" steps="2681"/></proof>
           </goal>
           <goal name="induction_step.0.0.1.0.0.1.0.1.1.1" expl="false case (true case)" proved="true">
           <transf name="destruct" proved="true" arg1="h">
            <goal name="induction_step.0.0.1.0.0.1.0.1.1.1.0" expl="false case (true case)" proved="true">
            <transf name="destruct_term" proved="true" arg1="l1">
             <goal name="induction_step.0.0.1.0.0.1.0.1.1.1.0.0" expl="false case (true case)" proved="true">
             <transf name="subst" proved="true" arg1="l1">
              <goal name="induction_step.0.0.1.0.0.1.0.1.1.1.0.0.0" expl="false case (true case)" proved="true">
              <transf name="assert" proved="true" arg1="(path v x b)">
               <goal name="induction_step.0.0.1.0.0.1.0.1.1.1.0.0.0.0" expl="asserted formula" proved="true">
               <proof prover="0"><result status="valid" time="0.202804" steps="417"/></proof>
               </goal>
               <goal name="induction_step.0.0.1.0.0.1.0.1.1.1.0.0.0.1" expl="false case (true case)" proved="true">
               <transf name="instantiate" proved="true" arg1="H7" arg2="dfsnum_parent, v, iv, pv, b, ib, pb, x">
                <goal name="induction_step.0.0.1.0.0.1.0.1.1.1.0.0.0.1.0" expl="false case (true case)" proved="true">
                <transf name="assert" proved="true" arg1="((exists x2:vertex. mem2 x2 (Cons v x) /\ (--*-&gt;) dfsnum_parent x2 v /\ (--*-&gt;) dfsnum_parent x2 b))">
                 <goal name="induction_step.0.0.1.0.0.1.0.1.1.1.0.0.0.1.0.0" expl="asserted formula" proved="true">
                 <proof prover="0"><result status="valid" time="0.069675" steps="424"/></proof>
                 </goal>
                 <goal name="induction_step.0.0.1.0.0.1.0.1.1.1.0.0.0.1.0.1" expl="false case (true case)" proved="true">
                 <transf name="destruct_rec" proved="true" arg1="h">
                  <goal name="induction_step.0.0.1.0.0.1.0.1.1.1.0.0.0.1.0.1.0" expl="false case (true case)" proved="true">
                  <transf name="exists" proved="true" arg1="x2">
                   <goal name="induction_step.0.0.1.0.0.1.0.1.1.1.0.0.0.1.0.1.0.0" proved="true">
                   <proof prover="2"><result status="valid" time="0.240376"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="induction_step.0.0.1.0.0.1.0.1.1.1.0.1" expl="false case (true case)" proved="true">
             <proof prover="0"><result status="valid" time="0.041704" steps="54"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="induction_step.0.0.1.0.0.1.0.1.1.1.1" expl="false case (true case)" proved="true">
            <transf name="exists" proved="true" arg1="b">
             <goal name="induction_step.0.0.1.0.0.1.0.1.1.1.1.0" proved="true">
             <proof prover="0"><result status="valid" time="1.053376" steps="4449"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="induction_step.0.0.1.1" expl="false case" proved="true">
     <proof prover="0"><result status="valid" time="0.033405" steps="83"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Lemma1" proved="true">
 <goal name="lemma1&#39;vc" expl="VC for lemma1" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="lemma1&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.030365" steps="27"/></proof>
  </goal>
  <goal name="lemma1&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.045748" steps="158"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="SetMinExists" proved="true">
 <goal name="min_exists_helper" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="min_exists_helper.0" proved="true">
  <transf name="apply" proved="true" arg1="Induction">
   <goal name="min_exists_helper.0.0" expl="apply premises" proved="true">
   <proof prover="0"><result status="valid" time="0.021654" steps="25"/></proof>
   </goal>
   <goal name="min_exists_helper.0.1" expl="apply premises" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="min_exists_helper.0.1.0" expl="apply premises" proved="true">
    <transf name="introduce_premises" proved="true" >
     <goal name="min_exists_helper.0.1.0.0" expl="apply premises" proved="true">
     <transf name="case" proved="true" arg1="(mem1 t s)">
      <goal name="min_exists_helper.0.1.0.0.0" expl="apply premises (true case)" proved="true">
      <proof prover="0"><result status="valid" time="0.058541" steps="305"/></proof>
      </goal>
      <goal name="min_exists_helper.0.1.0.0.1" expl="apply premises (false case)" proved="true">
      <transf name="case" proved="true" arg1="(is_empty s)">
       <goal name="min_exists_helper.0.1.0.0.1.0" expl="apply premises (false case. true case)" proved="true">
       <proof prover="0"><result status="valid" time="0.031058" steps="114"/></proof>
       </goal>
       <goal name="min_exists_helper.0.1.0.0.1.1" expl="apply premises (false case)" proved="true">
       <transf name="assert" proved="true" arg1="((exists v:vertex. mem1 v s /\ (forall x:vertex. mem1 x s -&gt; (f @ v) &lt;= (f @ x))))">
        <goal name="min_exists_helper.0.1.0.0.1.1.0" expl="asserted formula" proved="true">
        <proof prover="0"><result status="valid" time="0.038681" steps="191"/></proof>
        </goal>
        <goal name="min_exists_helper.0.1.0.0.1.1.1" expl="apply premises (false case)" proved="true">
        <transf name="destruct_rec" proved="true" arg1="h">
         <goal name="min_exists_helper.0.1.0.0.1.1.1.0" expl="apply premises (false case)" proved="true">
         <transf name="assert" proved="true" arg1="(f @ v &lt;= f @ t \/ f @ v &gt; f @ t)">
          <goal name="min_exists_helper.0.1.0.0.1.1.1.0.0" expl="asserted formula" proved="true">
          <proof prover="0"><result status="valid" time="0.009832" steps="12"/></proof>
          </goal>
          <goal name="min_exists_helper.0.1.0.0.1.1.1.0.1" expl="apply premises (false case)" proved="true">
          <proof prover="0"><result status="valid" time="0.029798" steps="201"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="min_exists" proved="true">
 <proof prover="0"><result status="valid" time="0.034741" steps="126"/></proof>
 </goal>
</theory>
<theory name="SemiDominate" proved="true">
 <goal name="parent_is_candidate_of_semi_dominator" proved="true">
 <proof prover="0"><result status="valid" time="1.163834" steps="3997"/></proof>
 </goal>
 <goal name="semi_em" proved="true">
 <proof prover="0"><result status="valid" time="0.020675" steps="10"/></proof>
 </goal>
 <goal name="min_semi_uniq" proved="true">
 <transf name="inline_goal" proved="true" >
  <goal name="min_semi_uniq.0" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="min_semi_uniq.0.0" proved="true">
   <transf name="destruct_rec" proved="true" arg1="H2">
    <goal name="min_semi_uniq.0.0.0" proved="true">
    <transf name="destruct_rec" proved="true" arg1="H">
     <goal name="min_semi_uniq.0.0.0.0" proved="true">
     <transf name="assert" proved="true" arg1="(iv = iv1)">
      <goal name="min_semi_uniq.0.0.0.0.0" expl="asserted formula" proved="true">
      <proof prover="0"><result status="valid" time="0.046645" steps="95"/></proof>
      </goal>
      <goal name="min_semi_uniq.0.0.0.0.1" proved="true">
      <proof prover="0"><result status="valid" time="0.120617" steps="371"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="semi_exists" proved="true">
 <proof prover="0"><result status="valid" time="0.181788" steps="920"/></proof>
 <proof prover="2"><result status="valid" time="0.865856"/></proof>
 <transf name="introduce_premises" proved="true" >
  <goal name="semi_exists.0" proved="true">
  <transf name="assert" proved="true" arg1="(exists y. (++&gt;) dfsnum_parent y x)">
   <goal name="semi_exists.0.0" expl="asserted formula" proved="true">
   <proof prover="0"><result status="valid" time="0.206018" steps="918"/></proof>
   </goal>
   <goal name="semi_exists.0.1" proved="true">
   <proof prover="0"><result status="valid" time="0.029709" steps="22"/></proof>
   <transf name="assert" proved="true" arg1="(forall y. (++&gt;) dfsnum_parent y x -&gt; mem y dfsnum_parent)">
    <goal name="semi_exists.0.1.0" expl="asserted formula" proved="true">
    <proof prover="0"><result status="valid" time="0.028104" steps="28"/></proof>
    </goal>
    <goal name="semi_exists.0.1.1" proved="true">
    <proof prover="0"><result status="valid" time="0.036877" steps="22"/></proof>
    <proof prover="1"><result status="valid" time="0.068281" steps="21568"/></proof>
    <proof prover="2"><result status="valid" time="0.032861"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="semi_exists_helper_a" proved="true">
 <proof prover="1"><result status="valid" time="0.737202" steps="68605"/></proof>
 <proof prover="2"><result status="valid" time="0.338540"/></proof>
 </goal>
 <goal name="min_semi_exists" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="min_semi_exists.0" proved="true">
  <transf name="assert" proved="true" arg1="((exists s:fset vertex. not is_empty1 s /\ (forall a:vertex. mem1 a s &lt;-&gt; (++&gt;) dfsnum_parent a x)))">
   <goal name="min_semi_exists.0.0" expl="asserted formula" proved="true">
   <proof prover="0"><result status="valid" time="0.731322" steps="2854"/></proof>
   </goal>
   <goal name="min_semi_exists.0.1" proved="true">
   <transf name="destruct_rec" proved="true" arg1="h">
    <goal name="min_semi_exists.0.1.0" proved="true">
    <transf name="pose" proved="true" arg1="f" arg2="(fun x -&gt; let (ix, _) = find x dfsnum_parent in ix)">
     <goal name="min_semi_exists.0.1.0.0" proved="true">
     <transf name="assert" proved="true" arg1="((exists v:vertex. mem1 v s /\ (forall x1:vertex. mem1 x1 s -&gt; (f @ v) &lt;= (f @ x1))))">
      <goal name="min_semi_exists.0.1.0.0.0" expl="asserted formula" proved="true">
      <proof prover="0"><result status="valid" time="2.294439" steps="5267"/></proof>
      </goal>
      <goal name="min_semi_exists.0.1.0.0.1" proved="true">
      <transf name="destruct_rec" proved="true" arg1="h">
       <goal name="min_semi_exists.0.1.0.0.1.0" proved="true">
       <transf name="exists" proved="true" arg1="v">
        <goal name="min_semi_exists.0.1.0.0.1.0.0" proved="true">
        <proof prover="0"><result status="valid" time="0.234073" steps="701"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="semi_dominator_less_equal_than_parent" proved="true">
 <proof prover="0"><result status="valid" time="0.217917" steps="574"/></proof>
 </goal>
 <goal name="semi_dominator_less_than_self" proved="true">
 <proof prover="0"><result status="valid" time="0.729757" steps="1881"/></proof>
 </goal>
 <goal name="lemma3" proved="true">
 <transf name="inline_goal" proved="true" >
  <goal name="lemma3.0" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="lemma3.0.0" proved="true">
   <transf name="unfold" proved="true" arg1="(++&gt;)" arg2="in" arg3="H1">
    <goal name="lemma3.0.0.0" proved="true">
    <transf name="destruct_rec" proved="true" arg1="H1">
     <goal name="lemma3.0.0.0.0" proved="true">
     <transf name="assert" proved="true" arg1="(exists i_semi_w p_semi_w. mapsto semi_w (i_semi_w , p_semi_w) dfsnum_parent)">
      <goal name="lemma3.0.0.0.0.0" expl="asserted formula" proved="true">
      <proof prover="0"><result status="valid" time="0.791937" steps="2404"/></proof>
      </goal>
      <goal name="lemma3.0.0.0.0.1" proved="true">
      <transf name="assert" proved="true" arg1="(exists iw pw. mapsto w (iw , pw) dfsnum_parent)">
       <goal name="lemma3.0.0.0.0.1.0" expl="asserted formula" proved="true">
       <proof prover="1"><result status="valid" time="68.354872" steps="990675"/></proof>
       <proof prover="2"><result status="valid" time="142.155923"/></proof>
       </goal>
       <goal name="lemma3.0.0.0.0.1.1" proved="true">
       <proof prover="0"><result status="valid" time="1.509435" steps="4925"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="lemma4" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="lemma4.0" proved="true">
  <transf name="assert" proved="true" arg1="(mem w dfsnum_parent /\ mem semi_w dfsnum_parent /\ mem idom_w dfsnum_parent )">
   <goal name="lemma4.0.0" expl="asserted formula" proved="true">
   <proof prover="0"><result status="timeout" time="120.000000" steps="256650"/></proof>
   <proof prover="1"><result status="valid" time="0.196935" steps="40377"/></proof>
   </goal>
   <goal name="lemma4.0.1" proved="true">
   <transf name="assert" proved="true" arg1="(exists l. (--+-&gt;) dfsnum_parent root l w)">
    <goal name="lemma4.0.1.0" expl="asserted formula" proved="true">
    <proof prover="0"><result status="valid" time="0.397503" steps="1399"/></proof>
    </goal>
    <goal name="lemma4.0.1.1" proved="true">
    <transf name="destruct_rec" proved="true" arg1="h">
     <goal name="lemma4.0.1.1.0" proved="true">
     <transf name="assert" proved="true" arg1="((idom_w = root \/ mem2 idom_w l))">
      <goal name="lemma4.0.1.1.0.0" expl="asserted formula" proved="true">
      <proof prover="0"><result status="valid" time="0.515633" steps="1150"/></proof>
      </goal>
      <goal name="lemma4.0.1.1.0.1" proved="true">
      <transf name="assert" proved="true" arg1="((semi_w = root \/ mem2 semi_w l))">
       <goal name="lemma4.0.1.1.0.1.0" expl="asserted formula" proved="true">
       <proof prover="0"><result status="valid" time="2.855396" steps="6286"/></proof>
       </goal>
       <goal name="lemma4.0.1.1.0.1.1" proved="true">
       <transf name="destruct" proved="true" arg1="h1">
        <goal name="lemma4.0.1.1.0.1.1.0" proved="true">
        <proof prover="0"><result status="valid" time="0.397161" steps="1068"/></proof>
        </goal>
        <goal name="lemma4.0.1.1.0.1.1.1" proved="true">
        <transf name="assert" proved="true" arg1="(exists i_idom_w p_idom_w . mapsto idom_w (i_idom_w, p_idom_w) dfsnum_parent)">
         <goal name="lemma4.0.1.1.0.1.1.1.0" expl="asserted formula" proved="true">
         <proof prover="0"><result status="valid" time="12.405048" steps="27544"/></proof>
         </goal>
         <goal name="lemma4.0.1.1.0.1.1.1.1" proved="true">
         <transf name="destruct_rec" proved="true" arg1="h">
          <goal name="lemma4.0.1.1.0.1.1.1.1.0" proved="true">
          <transf name="assert" proved="true" arg1="(exists iw pw. mapsto w (iw , pw) dfsnum_parent )">
           <goal name="lemma4.0.1.1.0.1.1.1.1.0.0" expl="asserted formula" proved="true">
           <proof prover="0"><result status="valid" time="0.498553" steps="1172"/></proof>
           </goal>
           <goal name="lemma4.0.1.1.0.1.1.1.1.0.1" proved="true">
           <transf name="destruct_rec" proved="true" arg1="h">
            <goal name="lemma4.0.1.1.0.1.1.1.1.0.1.0" proved="true">
            <transf name="assert" proved="true" arg1="(i_idom_w &lt; iw )">
             <goal name="lemma4.0.1.1.0.1.1.1.1.0.1.0.0" expl="asserted formula" proved="true">
             <proof prover="0"><result status="valid" time="1.185274" steps="3527"/></proof>
             </goal>
             <goal name="lemma4.0.1.1.0.1.1.1.1.0.1.0.1" proved="true">
             <transf name="destruct_rec" proved="true" arg1="h3">
              <goal name="lemma4.0.1.1.0.1.1.1.1.0.1.0.1.0" proved="true">
              <proof prover="0"><result status="valid" time="16.752756" steps="38911"/></proof>
              </goal>
              <goal name="lemma4.0.1.1.0.1.1.1.1.0.1.0.1.1" proved="true">
              <transf name="instantiate" proved="true" arg1="span_cutoff" arg2="dfsnum_parent, root, l, w, semi_w">
               <goal name="lemma4.0.1.1.0.1.1.1.1.0.1.0.1.1.0" proved="true">
               <transf name="destruct_rec" proved="true" arg1="Hinst">
                <goal name="lemma4.0.1.1.0.1.1.1.1.0.1.0.1.1.0.0" expl="destruct premise" proved="true">
                <proof prover="0"><result status="valid" time="0.036623" steps="50"/></proof>
                </goal>
                <goal name="lemma4.0.1.1.0.1.1.1.1.0.1.0.1.1.0.1" expl="destruct premise" proved="true">
                <proof prover="0"><result status="valid" time="0.034134" steps="50"/></proof>
                </goal>
                <goal name="lemma4.0.1.1.0.1.1.1.1.0.1.0.1.1.0.2" proved="true">
                <transf name="assert" proved="true" arg1="((mem2 idom_w (l1 ++ Cons semi_w Nil)) \/ (mem2 idom_w l2 /\ not mem2 idom_w (l1 ++ Cons semi_w Nil)))">
                 <goal name="lemma4.0.1.1.0.1.1.1.1.0.1.0.1.1.0.2.0" expl="asserted formula" proved="true">
                 <proof prover="0"><result status="valid" time="0.258051" steps="368"/></proof>
                 </goal>
                 <goal name="lemma4.0.1.1.0.1.1.1.1.0.1.0.1.1.0.2.1" proved="true">
                 <transf name="destruct_rec" proved="true" arg1="h">
                  <goal name="lemma4.0.1.1.0.1.1.1.1.0.1.0.1.1.0.2.1.0" proved="true">
                  <proof prover="0"><result status="valid" time="2.762683" steps="7022"/></proof>
                  </goal>
                  <goal name="lemma4.0.1.1.0.1.1.1.1.0.1.0.1.1.0.2.1.1" proved="true">
                  <transf name="unfold" proved="true" arg1="(+&gt;)" arg2="in" arg3="H">
                   <goal name="lemma4.0.1.1.0.1.1.1.1.0.1.0.1.1.0.2.1.1.0" proved="true">
                   <transf name="destruct_rec" proved="true" arg1="H">
                    <goal name="lemma4.0.1.1.0.1.1.1.1.0.1.0.1.1.0.2.1.1.0.0" proved="true">
                    <transf name="unfold" proved="true" arg1="(++&gt;)" arg2="in" arg3="H1">
                     <goal name="lemma4.0.1.1.0.1.1.1.1.0.1.0.1.1.0.2.1.1.0.0.0" proved="true">
                     <transf name="destruct_rec" proved="true" arg1="H1">
                      <goal name="lemma4.0.1.1.0.1.1.1.1.0.1.0.1.1.0.2.1.1.0.0.0.0" proved="true">
                      <transf name="assert" proved="true" arg1="(path root (l1 ++ Cons semi_w p) w)">
                       <goal name="lemma4.0.1.1.0.1.1.1.1.0.1.0.1.1.0.2.1.1.0.0.0.0.0" expl="asserted formula" proved="true">
                       <proof prover="0"><result status="valid" time="0.106452" steps="70"/></proof>
                       </goal>
                       <goal name="lemma4.0.1.1.0.1.1.1.1.0.1.0.1.1.0.2.1.1.0.0.0.0.1" proved="true">
                       <transf name="assert" proved="true" arg1="False">
                        <goal name="lemma4.0.1.1.0.1.1.1.1.0.1.0.1.1.0.2.1.1.0.0.0.0.1.0" expl="asserted formula" proved="true">
                        <proof prover="0"><result status="valid" time="155.366256" steps="337456"/></proof>
                        <proof prover="1"><result status="valid" time="116.470985" steps="1824158"/></proof>
                        </goal>
                        <goal name="lemma4.0.1.1.0.1.1.1.1.0.1.0.1.1.0.2.1.1.0.0.0.0.1.1" proved="true">
                        <proof prover="0"><result status="valid" time="0.037177" steps="64"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="IdomInDfsnumParent" proved="true">
 <goal name="idom_in_dfsnum_parent" proved="true">
 <proof prover="0"><result status="valid" time="3.255282" steps="8313"/></proof>
 </goal>
</theory>
<theory name="Lemma5" proved="true">
 <goal name="lemma5" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="lemma5.0" proved="true">
  <transf name="assert" proved="true" arg1="(mem w dfsnum_parent)">
   <goal name="lemma5.0.0" expl="asserted formula" proved="true">
   <proof prover="0"><result status="valid" time="0.058489" steps="30"/></proof>
   </goal>
   <goal name="lemma5.0.1" proved="true">
   <transf name="assert" proved="true" arg1="(mem idom_w dfsnum_parent)">
    <goal name="lemma5.0.1.0" expl="asserted formula" proved="true">
    <proof prover="0"><result status="valid" time="0.084450" steps="124"/></proof>
    </goal>
    <goal name="lemma5.0.1.1" proved="true">
    <transf name="assert" proved="true" arg1="(mem v dfsnum_parent)">
     <goal name="lemma5.0.1.1.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.052305" steps="34"/></proof>
     </goal>
     <goal name="lemma5.0.1.1.1" proved="true">
     <transf name="assert" proved="true" arg1="(mem idom_v dfsnum_parent)">
      <goal name="lemma5.0.1.1.1.0" expl="asserted formula" proved="true">
      <proof prover="0"><result status="valid" time="0.047986" steps="130"/></proof>
      <proof prover="1"><result status="valid" time="0.253885" steps="27504"/></proof>
      <proof prover="2"><result status="valid" time="0.131867"/></proof>
      </goal>
      <goal name="lemma5.0.1.1.1.1" proved="true">
      <transf name="assert" proved="true" arg1="(exists l. (--+-&gt;) dfsnum_parent root l w)">
       <goal name="lemma5.0.1.1.1.1.0" expl="asserted formula" proved="true">
       <proof prover="0"><result status="valid" time="1.468318" steps="3049"/></proof>
       </goal>
       <goal name="lemma5.0.1.1.1.1.1" proved="true">
       <transf name="destruct_rec" proved="true" arg1="h">
        <goal name="lemma5.0.1.1.1.1.1.0" proved="true">
        <transf name="instantiate" proved="true" arg1="span_cutoff" arg2="dfsnum_parent, root, l, w, v">
         <goal name="lemma5.0.1.1.1.1.1.0.0" proved="true">
         <transf name="destruct_rec" proved="true" arg1="Hinst">
          <goal name="lemma5.0.1.1.1.1.1.0.0.0" expl="destruct premise" proved="true">
          <proof prover="0"><result status="valid" time="0.023402" steps="38"/></proof>
          </goal>
          <goal name="lemma5.0.1.1.1.1.1.0.0.1" expl="destruct premise" proved="true">
          <proof prover="0"><result status="valid" time="2.704758" steps="5597"/></proof>
          </goal>
          <goal name="lemma5.0.1.1.1.1.1.0.0.2" proved="true">
          <transf name="assert" proved="true" arg1="(mem2 idom_w (Cons root l1) \/ mem2 idom_w (Cons v l2))">
           <goal name="lemma5.0.1.1.1.1.1.0.0.2.0" expl="asserted formula" proved="true">
           <proof prover="0"><result status="valid" time="7.444819" steps="14537"/></proof>
           <proof prover="1"><result status="valid" time="4.464117" steps="135738"/></proof>
           <proof prover="2"><result status="valid" time="0.239352"/></proof>
           </goal>
           <goal name="lemma5.0.1.1.1.1.1.0.0.2.1" proved="true">
           <transf name="destruct_rec" proved="true" arg1="h">
            <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0" proved="true">
            <transf name="assert" proved="true" arg1="(idom_w = root \/ mem2 idom_w l1)">
             <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.0" expl="asserted formula" proved="true">
             <proof prover="0"><result status="valid" time="0.032999" steps="50"/></proof>
             </goal>
             <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1" proved="true">
             <transf name="destruct_rec" proved="true" arg1="h">
              <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.0" proved="true">
              <proof prover="0"><result status="valid" time="6.172329" steps="15776"/></proof>
              </goal>
              <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1" proved="true">
              <transf name="instantiate" proved="true" arg1="span_cutoff" arg2="dfsnum_parent, root, l1, v, idom_w">
               <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0" proved="true">
               <transf name="destruct_rec" proved="true" arg1="Hinst">
                <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.0" expl="destruct premise" proved="true">
                <proof prover="0"><result status="valid" time="0.020863" steps="48"/></proof>
                </goal>
                <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.1" expl="destruct premise" proved="true">
                <proof prover="0"><result status="valid" time="0.032064" steps="48"/></proof>
                </goal>
                <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.2" proved="true">
                <transf name="assert" proved="true" arg1="(mem2 idom_v (Cons root l1) \/ mem2 idom_v (Cons idom_w l2))">
                 <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.2.0" expl="asserted formula" proved="true">
                 <proof prover="0"><result status="valid" time="4.121345" steps="8956"/></proof>
                 </goal>
                 <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.2.1" proved="true">
                 <transf name="destruct_rec" proved="true" arg1="h">
                  <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.2.1.0" proved="true">
                  <transf name="case" proved="true" arg1="(idom_w = idom_v)">
                   <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.2.1.0.0" expl="true case" proved="true">
                   <proof prover="0"><result status="valid" time="0.039186" steps="67"/></proof>
                   </goal>
                   <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.2.1.0.1" expl="false case" proved="true">
                   <transf name="assert" proved="true" arg1="(not idom_w ~~&gt; v)">
                    <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.2.1.0.1.0" expl="asserted formula" proved="true">
                    <transf name="assert" proved="true" arg1="(exists l3 l4. Cons root l1 = l3 ++ Cons idom_v l4 /\ not mem2 idom_v l4)">
                     <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.2.1.0.1.0.0" expl="asserted formula" proved="true">
                     <proof prover="0"><result status="valid" time="74.119933" steps="148462"/></proof>
                     </goal>
                     <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.2.1.0.1.0.1" expl="asserted formula" proved="true">
                     <transf name="destruct_rec" proved="true" arg1="h1">
                      <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.2.1.0.1.0.1.0" expl="asserted formula" proved="true">
                      <transf name="subst_all" proved="true" >
                       <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.2.1.0.1.0.1.0.0" expl="asserted formula" proved="true">
                       <transf name="apply" proved="true" arg1="idom_is_the_last" arg2="with" arg3="idom_v, (l1 ++ Cons idom_w l2), l3, (l4 ++ Cons idom_w l2)">
                        <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.2.1.0.1.0.1.0.0.0" expl="apply premises" proved="true">
                        <proof prover="0"><result status="valid" time="0.036100" steps="58"/></proof>
                        </goal>
                        <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.2.1.0.1.0.1.0.0.1" expl="apply premises" proved="true">
                        <proof prover="0"><result status="valid" time="0.107301" steps="64"/></proof>
                        </goal>
                        <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.2.1.0.1.0.1.0.0.2" expl="apply premises" proved="true">
                        <proof prover="0"><result status="valid" time="0.277574" steps="448"/></proof>
                        </goal>
                        <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.2.1.0.1.0.1.0.0.3" expl="apply premises" proved="true">
                        <proof prover="2"><result status="valid" time="3.412850"/></proof>
                        </goal>
                        <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.2.1.0.1.0.1.0.0.4" expl="apply premises" proved="true">
                        <proof prover="0"><result status="valid" time="0.229409" steps="424"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.2.1.0.1.1" expl="false case" proved="true">
                    <transf name="assert" proved="true" arg1="(exists p. path root p v /\ not mem2 idom_w p)">
                     <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.2.1.0.1.1.0" expl="asserted formula" proved="true">
                     <proof prover="0"><result status="valid" time="1.034979" steps="2389"/></proof>
                     </goal>
                     <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.2.1.0.1.1.1" expl="false case" proved="true">
                     <transf name="destruct_rec" proved="true" arg1="h">
                      <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.2.1.0.1.1.1.0" expl="false case" proved="true">
                      <transf name="assert" proved="true" arg1="(path root (p ++ Cons v l21) w)">
                       <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.2.1.0.1.1.1.0.0" expl="asserted formula" proved="true">
                       <proof prover="0"><result status="valid" time="0.095480" steps="70"/></proof>
                       </goal>
                       <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.2.1.0.1.1.1.0.1" expl="false case" proved="true">
                       <transf name="case" proved="true" arg1="(idom_w = v)">
                        <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.2.1.0.1.1.1.0.1.0" expl="false case (true case)" proved="true">
                        <proof prover="0"><result status="valid" time="0.049627" steps="96"/></proof>
                        </goal>
                        <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.2.1.0.1.1.1.0.1.1" expl="false case" proved="true">
                        <proof prover="0"><undone/></proof>
                        <proof prover="1"><undone/></proof>
                        <proof prover="2"><undone/></proof>
                        <transf name="assert" proved="true" arg1="(not mem2 idom_w (p ++ Cons v l21))">
                         <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.2.1.0.1.1.1.0.1.1.0" expl="asserted formula" proved="true">
                         <proof prover="0"><undone/></proof>
                         <proof prover="1"><undone/></proof>
                         <proof prover="2"><result status="valid" time="7.677056"/></proof>
                         </goal>
                         <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.2.1.0.1.1.1.0.1.1.1" expl="false case" proved="true">
                         <proof prover="0"><result status="valid" time="2.856428" steps="11990"/></proof>
                         <proof prover="1"><undone/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.0.1.1.0.2.1.1" proved="true">
                  <proof prover="0"><result status="valid" time="5.223891" steps="10063"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="lemma5.0.1.1.1.1.1.0.0.2.1.1" proved="true">
            <proof prover="0"><result status="valid" time="1.433165" steps="3137"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Theorem2B" proved="true">
 <goal name="theorem2_b" proved="true">
 <proof prover="2"><result status="valid" time="5.266879"/></proof>
 </goal>
</theory>
<theory name="Theorem23Helper" proved="true">
 <goal name="theorem23helper" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="theorem23helper.0" proved="true">
  <transf name="case" proved="true" arg1="(v = root)">
   <goal name="theorem23helper.0.0" expl="true case" proved="true">
   <proof prover="0"><result status="valid" time="0.061239" steps="132"/></proof>
   </goal>
   <goal name="theorem23helper.0.1" expl="false case" proved="true">
   <transf name="instantiate" proved="true" arg1="ggg" arg2="(Cons root p), (fun x -&gt; (dfsnum @ x ) &lt; (dfsnum @ v))">
    <goal name="theorem23helper.0.1.0" expl="false case" proved="true">
    <transf name="destruct_rec" proved="true" arg1="Hinst">
     <goal name="theorem23helper.0.1.0.0" expl="destruct premise" proved="true">
     <transf name="exists" proved="true" arg1="root">
      <goal name="theorem23helper.0.1.0.0.0" proved="true">
      <proof prover="1"><result status="valid" time="2.857915" steps="146922"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="theorem23helper.0.1.0.1" expl="false case" proved="true">
     <transf name="right" proved="true" >
      <goal name="theorem23helper.0.1.0.1.0" expl="right case" proved="true">
      <transf name="exists" proved="true" arg1="x">
       <goal name="theorem23helper.0.1.0.1.0.0" proved="true">
       <transf name="exists" proved="true" arg1="l1">
        <goal name="theorem23helper.0.1.0.1.0.0.0" proved="true">
        <transf name="instantiate" proved="true" arg1="hhh" arg2="(l2 ++ Cons w Nil), (fun a -&gt; (--*-&gt;) dfsnum_parent v a /\ (--*-&gt;) dfsnum_parent a w)">
         <goal name="theorem23helper.0.1.0.1.0.0.0.0" proved="true">
         <transf name="destruct_rec" proved="true" arg1="Hinst">
          <goal name="theorem23helper.0.1.0.1.0.0.0.0.0" expl="destruct premise" proved="true">
          <transf name="exists" proved="true" arg1="w">
           <goal name="theorem23helper.0.1.0.1.0.0.0.0.0.0" proved="true">
           <proof prover="1"><result status="valid" time="0.656535" steps="51606"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="theorem23helper.0.1.0.1.0.0.0.0.1" proved="true">
          <transf name="exists" proved="true" arg1="y">
           <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0" proved="true">
           <transf name="exists" proved="true" arg1="l1">
            <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0" proved="true">
            <transf name="exists" proved="true" arg1="l2">
             <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.0" proved="true">
              <proof prover="0"><result status="valid" time="0.078769" steps="79"/></proof>
              </goal>
              <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.1" proved="true">
              <transf name="destruct_term" proved="true" arg1="l11">
               <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.1.0" proved="true">
               <transf name="destruct_term" proved="true" arg1="l2">
                <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.1.0.0" proved="true">
                <transf name="assert" proved="true" arg1="(exists z l9. l2 = l9 ++ Cons z Nil)">
                 <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
                 <proof prover="0"><result status="valid" time="0.927951" steps="2567"/></proof>
                 </goal>
                 <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.1.0.0.1" proved="true">
                 <proof prover="0"><result status="valid" time="11.588253" steps="32621"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.1.0.1" proved="true">
                <proof prover="0"><result status="valid" time="0.654573" steps="1989"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.1.1" proved="true">
               <transf name="destruct_term" proved="true" arg1="l2">
                <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.1.1.0" proved="true">
                <transf name="assert" proved="true" arg1="(exists z l9. l2 = l9 ++ Cons z Nil)">
                 <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.1.1.0.0" expl="asserted formula" proved="true">
                 <proof prover="0"><result status="valid" time="0.896636" steps="4436"/></proof>
                 </goal>
                 <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.1.1.0.1" proved="true">
                 <proof prover="0"><result status="valid" time="12.376013" steps="40165"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.1.1.1" proved="true">
                <proof prover="0"><result status="valid" time="0.088930" steps="257"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.2" proved="true">
              <transf name="destruct_term" proved="true" arg1="l11">
               <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.2.0" proved="true">
               <proof prover="0"><result status="valid" time="1.301089" steps="4392"/></proof>
               </goal>
               <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.2.1" proved="true">
               <proof prover="0"><result status="valid" time="0.356401" steps="843"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.3" proved="true">
              <proof prover="0"><result status="valid" time="0.805702" steps="1853"/></proof>
              </goal>
              <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.4" proved="true">
              <proof prover="0"><result status="valid" time="0.051680" steps="57"/></proof>
              </goal>
              <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.5" proved="true">
              <transf name="assert" proved="true" arg1="(a = w \/ mem2 a l21)">
               <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.5.0" expl="asserted formula" proved="true">
               <proof prover="0"><result status="valid" time="0.191300" steps="260"/></proof>
               </goal>
               <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.5.1" proved="true">
               <transf name="destruct_rec" proved="true" arg1="h">
                <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.5.1.0" proved="true">
                <proof prover="1"><result status="valid" time="0.480467" steps="47468"/></proof>
                </goal>
                <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.5.1.1" proved="true">
                <transf name="assert" proved="true" arg1="(mem v dfsnum_parent )">
                 <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.5.1.1.0" expl="asserted formula" proved="true">
                 <proof prover="0"><result status="valid" time="0.120575" steps="63"/></proof>
                 </goal>
                 <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.5.1.1.1" proved="true">
                 <transf name="assert" proved="true" arg1="(mem w dfsnum_parent )">
                  <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.5.1.1.1.0" expl="asserted formula" proved="true">
                  <proof prover="0"><result status="valid" time="0.110562" steps="64"/></proof>
                  </goal>
                  <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.5.1.1.1.1" proved="true">
                  <transf name="instantiate" proved="true" arg1="unnamed_a" arg2="dfsnum_parent, v, w, l">
                   <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.5.1.1.1.1.0" proved="true">
                   <proof prover="0"><result status="valid" time="0.049932" steps="70"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.6" proved="true">
              <proof prover="0"><result status="valid" time="0.053063" steps="62"/></proof>
              </goal>
              <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.7" proved="true">
              <proof prover="0"><result status="valid" time="0.048882" steps="57"/></proof>
              </goal>
              <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.8" proved="true">
              <proof prover="0"><result status="valid" time="0.052054" steps="57"/></proof>
              </goal>
              <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9" proved="true">
              <transf name="assert" proved="true" arg1="((forall a. mem2 a l1 -&gt; (dfsnum @ a) &gt; (dfsnum @ y) ) \/ (exists a. mem2 a l1 /\ (dfsnum @ a) &lt;= (dfsnum @ y)))">
               <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.0" expl="asserted formula" proved="true">
               <proof prover="0"><result status="valid" time="0.043834" steps="66"/></proof>
               </goal>
               <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1" proved="true">
               <transf name="destruct_rec" proved="true" arg1="h">
                <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.0" proved="true">
                <proof prover="0"><result status="valid" time="0.051184" steps="63"/></proof>
                </goal>
                <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1" proved="true">
                <transf name="assert" proved="true" arg1="False">
                 <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0" expl="asserted formula" proved="true">
                 <transf name="assert" proved="true" arg1="(exists lxa lay. lxa ++ Cons a lay = l1 )">
                  <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.0" expl="asserted formula" proved="true">
                  <proof prover="0"><result status="valid" time="0.220696" steps="275"/></proof>
                  </goal>
                  <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1" expl="asserted formula" proved="true">
                  <transf name="destruct_rec" proved="true" arg1="h1">
                   <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0" expl="asserted formula" proved="true">
                   <transf name="assert" proved="true" arg1="(path x l21 w)">
                    <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.0" expl="asserted formula" proved="true">
                    <transf name="destruct_term" proved="true" arg1="l11">
                     <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.0.0" expl="asserted formula" proved="true">
                     <proof prover="0"><result status="valid" time="1.168895" steps="4367"/></proof>
                     </goal>
                     <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.0.1" expl="asserted formula" proved="true">
                     <proof prover="0"><result status="valid" time="0.096663" steps="90"/></proof>
                     <proof prover="1"><result status="valid" time="2.548533" steps="76353"/></proof>
                     <proof prover="2"><result status="valid" time="0.069444"/></proof>
                     <proof prover="5"><result status="valid" time="0.105704" steps="90"/></proof>
                     <transf name="assert" proved="true" arg1="(root = x)">
                      <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.0.1.0" expl="asserted formula" proved="true">
                      <proof prover="0"><result status="valid" time="0.087745" steps="90"/></proof>
                      </goal>
                      <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.0.1.1" expl="asserted formula" proved="true">
                      <transf name="assert" proved="true" arg1="(l21 = p)">
                       <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.0.1.1.0" expl="asserted formula" proved="true">
                       <proof prover="0"><result status="valid" time="0.103306" steps="91"/></proof>
                       </goal>
                       <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.0.1.1.1" expl="asserted formula" proved="true">
                       <proof prover="0"><result status="valid" time="0.080976" steps="62"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1" expl="asserted formula" proved="true">
                    <transf name="assert" proved="true" arg1="(path x l1 y)">
                     <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.0" expl="asserted formula" proved="true">
                     <transf name="destruct_term" proved="true" arg1="l2">
                      <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.0.0" expl="asserted formula" proved="true">
                      <transf name="assert" proved="true" arg1="(exists z l9. l2 = l9 ++ Cons z Nil)">
                       <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.0.0.0" expl="asserted formula" proved="true">
                       <proof prover="0"><result status="valid" time="3.381747" steps="7469"/></proof>
                       </goal>
                       <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.0.0.1" expl="asserted formula" proved="true">
                       <transf name="destruct_rec" proved="true" arg1="h1">
                        <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.0.0.1.0" expl="asserted formula" proved="true">
                        <transf name="assert" proved="true" arg1="(z = w)">
                         <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.0.0.1.0.0" expl="asserted formula" proved="true">
                         <proof prover="0"><result status="valid" time="3.980947" steps="9219"/></proof>
                         </goal>
                         <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.0.0.1.0.1" expl="asserted formula" proved="true">
                         <proof prover="0"><result status="valid" time="22.988862" steps="52315"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.0.1" expl="asserted formula" proved="true">
                      <proof prover="0"><result status="valid" time="0.262482" steps="420"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1" expl="asserted formula" proved="true">
                     <transf name="assert" proved="true" arg1="(path x lxa a /\ path a lay y)">
                      <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.0" expl="asserted formula" proved="true">
                      <proof prover="0"><result status="valid" time="0.056190" steps="76"/></proof>
                      </goal>
                      <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1" expl="asserted formula" proved="true">
                      <transf name="assert" proved="true" arg1="(mem y dfsnum_parent )">
                       <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.0" expl="asserted formula" proved="true">
                       <proof prover="0"><result status="valid" time="3.394756" steps="6544"/></proof>
                       </goal>
                       <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1" expl="asserted formula" proved="true">
                       <transf name="assert" proved="true" arg1="(exists iy py. mapsto y (iy, py) dfsnum_parent )">
                        <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.0" expl="asserted formula" proved="true">
                        <proof prover="1"><result status="valid" time="0.399293" steps="38084"/></proof>
                        </goal>
                        <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1" expl="asserted formula" proved="true">
                        <transf name="assert" proved="true" arg1="(mem a dfsnum_parent )">
                         <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.0" expl="asserted formula" proved="true">
                         <proof prover="2"><result status="valid" time="3.230027"/></proof>
                         </goal>
                         <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1" expl="asserted formula" proved="true">
                         <transf name="assert" proved="true" arg1="(exists ia pa. mapsto a (ia, pa) dfsnum_parent )">
                          <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.0" expl="asserted formula" proved="true">
                          <proof prover="1"><result status="valid" time="0.387152" steps="38399"/></proof>
                          </goal>
                          <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1" expl="asserted formula" proved="true">
                          <transf name="destruct_rec" proved="true" arg1="h1">
                           <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0" expl="asserted formula" proved="true">
                           <transf name="destruct_rec" proved="true" arg1="h3">
                            <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0" expl="asserted formula" proved="true">
                            <transf name="instantiate" proved="true" arg1="lemma1" arg2="dfsnum_parent, a, ia, pa, y, iy, py, lay">
                             <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0" expl="asserted formula" proved="true">
                             <transf name="destruct_rec" proved="true" arg1="Hinst">
                              <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.0" expl="destruct premise" proved="true">
                              <proof prover="0"><result status="valid" time="0.056325" steps="72"/></proof>
                              </goal>
                              <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.1" expl="destruct premise" proved="true">
                              <proof prover="0"><result status="valid" time="0.060981" steps="72"/></proof>
                              </goal>
                              <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.2" expl="destruct premise" proved="true">
                              <proof prover="0"><result status="valid" time="0.044209" steps="72"/></proof>
                              </goal>
                              <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.3" expl="destruct premise" proved="true">
                              <proof prover="0"><result status="valid" time="0.046885" steps="72"/></proof>
                              </goal>
                              <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.4" expl="destruct premise" proved="true">
                              <proof prover="0"><result status="valid" time="25.578114" steps="57100"/></proof>
                              </goal>
                              <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.5" expl="destruct premise" proved="true">
                              <proof prover="0"><result status="valid" time="0.040194" steps="72"/></proof>
                              </goal>
                              <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6" expl="asserted formula" proved="true">
                              <transf name="assert" proved="true" arg1="((--*-&gt;) dfsnum_parent x y)">
                               <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.0" expl="asserted formula" proved="true">
                               <proof prover="0"><result status="valid" time="0.047411" steps="78"/></proof>
                               </goal>
                               <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1" expl="asserted formula" proved="true">
                               <transf name="assert" proved="true" arg1="((--*-&gt;) dfsnum_parent x w)">
                                <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1.0" expl="asserted formula" proved="true">
                                <proof prover="0"><result status="valid" time="0.155844" steps="94"/></proof>
                                </goal>
                                <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1.1" expl="asserted formula" proved="true">
                                <transf name="assert" proved="true" arg1="((--*-&gt;) dfsnum_parent v x)">
                                 <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1.1.0" expl="asserted formula" proved="true">
                                 <transf name="assert" proved="true" arg1="(dfsnum x &gt;= dfsnum v)">
                                  <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1.1.0.0" expl="asserted formula" proved="true">
                                  <transf name="assert" proved="true" arg1="(mem2 x l21)">
                                   <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1.1.0.0.0" expl="asserted formula" proved="true">
                                   <transf name="destruct_term" proved="true" arg1="l2">
                                    <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1.1.0.0.0.0" expl="asserted formula" proved="true">
                                    <transf name="assert" proved="true" arg1="(exists z l9. l2 = l9 ++ Cons z Nil)">
                                     <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1.1.0.0.0.0.0" expl="asserted formula" proved="true">
                                     <proof prover="0"><result status="valid" time="6.298140" steps="10503"/></proof>
                                     </goal>
                                     <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1.1.0.0.0.0.1" expl="asserted formula" proved="true">
                                     <proof prover="2"><result status="valid" time="5.919752"/></proof>
                                     </goal>
                                    </transf>
                                    </goal>
                                    <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1.1.0.0.0.1" expl="asserted formula" proved="true">
                                    <proof prover="0"><result status="valid" time="1.461632" steps="2697"/></proof>
                                    </goal>
                                   </transf>
                                   </goal>
                                   <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1.1.0.0.1" expl="asserted formula" proved="true">
                                   <proof prover="0"><result status="valid" time="0.075049" steps="99"/></proof>
                                   </goal>
                                  </transf>
                                  </goal>
                                  <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1.1.0.1" expl="asserted formula" proved="true">
                                  <transf name="instantiate" proved="true" arg1="mutual_parent" arg2="dfsnum_parent, v, x, w">
                                   <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1.1.0.1.0" expl="asserted formula" proved="true">
                                   <transf name="destruct_rec" proved="true" arg1="Hinst">
                                    <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1.1.0.1.0.0" expl="destruct premise" proved="true">
                                    <proof prover="0"><result status="valid" time="0.062754" steps="99"/></proof>
                                    </goal>
                                    <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1.1.0.1.0.1" expl="destruct premise" proved="true">
                                    <proof prover="0"><result status="valid" time="0.309347" steps="461"/></proof>
                                    </goal>
                                    <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1.1.0.1.0.2" expl="destruct premise" proved="true">
                                    <proof prover="0"><result status="valid" time="0.074030" steps="82"/></proof>
                                    </goal>
                                    <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1.1.0.1.0.3" expl="asserted formula" proved="true">
                                    <proof prover="0"><result status="valid" time="0.046585" steps="84"/></proof>
                                    </goal>
                                    <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1.1.0.1.0.4" expl="asserted formula" proved="true">
                                    <transf name="unfold" proved="true" arg1="(--*-&gt;)" arg2="in" arg3="Hinst">
                                     <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1.1.0.1.0.4.0" expl="asserted formula" proved="true">
                                     <transf name="destruct_rec" proved="true" arg1="Hinst">
                                      <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1.1.0.1.0.4.0.0" expl="asserted formula" proved="true">
                                      <proof prover="0"><result status="valid" time="0.072146" steps="110"/></proof>
                                      </goal>
                                      <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1.1.0.1.0.4.0.1" expl="asserted formula" proved="true">
                                      <transf name="assert" proved="true" arg1="(exists iv pv. mapsto v (iv , pv) dfsnum_parent )">
                                       <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1.1.0.1.0.4.0.1.0" expl="asserted formula" proved="true">
                                       <proof prover="0"><result status="valid" time="1.481358" steps="3386"/></proof>
                                       </goal>
                                       <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1.1.0.1.0.4.0.1.1" expl="asserted formula" proved="true">
                                       <transf name="assert" proved="true" arg1="(exists ix px. mapsto x (ix , px) dfsnum_parent )">
                                        <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1.1.0.1.0.4.0.1.1.0" expl="asserted formula" proved="true">
                                        <proof prover="1"><result status="valid" time="1.198071" steps="81422"/></proof>
                                        </goal>
                                        <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1.1.0.1.0.4.0.1.1.1" expl="asserted formula" proved="true">
                                        <transf name="destruct_rec" proved="true" arg1="h1">
                                         <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1.1.0.1.0.4.0.1.1.1.0" expl="asserted formula" proved="true">
                                         <transf name="destruct_rec" proved="true" arg1="h2">
                                          <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1.1.0.1.0.4.0.1.1.1.0.0" expl="asserted formula" proved="true">
                                          <proof prover="1"><result status="valid" time="0.906913" steps="66389"/></proof>
                                          </goal>
                                         </transf>
                                         </goal>
                                        </transf>
                                        </goal>
                                       </transf>
                                       </goal>
                                      </transf>
                                      </goal>
                                     </transf>
                                     </goal>
                                    </transf>
                                    </goal>
                                   </transf>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                 <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.0.1.0.1.1.1.1.1.1.1.0.0.0.6.1.1.1" expl="asserted formula" proved="true">
                                 <proof prover="0"><result status="valid" time="1.098498" steps="1803"/></proof>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="theorem23helper.0.1.0.1.0.0.0.0.1.0.0.0.9.1.1.1" proved="true">
                 <proof prover="0"><result status="valid" time="0.043984" steps="54"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Theorem2A" proved="true">
 <goal name="theorem2_a" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="theorem2_a.0" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="theorem2_a.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="theorem2_a.0.0.0" proved="true">
    <proof prover="1"><result status="valid" time="0.644921" steps="51603"/></proof>
    </goal>
    <goal name="theorem2_a.0.0.1" proved="true">
    <proof prover="0"><result status="valid" time="0.056736" steps="128"/></proof>
    </goal>
    <goal name="theorem2_a.0.0.2" proved="true">
    <transf name="instantiate" proved="true" arg1="lemma3" arg2="dfsnum_parent, w, semi_w">
     <goal name="theorem2_a.0.0.2.0" proved="true">
     <transf name="destruct_rec" proved="true" arg1="Hinst">
      <goal name="theorem2_a.0.0.2.0.0" expl="destruct premise" proved="true">
      <proof prover="0"><result status="valid" time="0.047326" steps="40"/></proof>
      </goal>
      <goal name="theorem2_a.0.0.2.0.1" expl="destruct premise" proved="true">
      <proof prover="0"><result status="valid" time="0.036503" steps="40"/></proof>
      </goal>
      <goal name="theorem2_a.0.0.2.0.2" expl="destruct premise" proved="true">
      <proof prover="0"><result status="valid" time="0.040245" steps="40"/></proof>
      </goal>
      <goal name="theorem2_a.0.0.2.0.3" proved="true">
      <transf name="instantiate" proved="true" arg1="theorem23helper" arg2="dfsnum_parent, semi_w, w, p">
       <goal name="theorem2_a.0.0.2.0.3.0" proved="true">
       <transf name="destruct_rec" proved="true" arg1="Hinst">
        <goal name="theorem2_a.0.0.2.0.3.0.0" expl="destruct premise" proved="true">
        <proof prover="0"><result status="valid" time="0.043078" steps="42"/></proof>
        </goal>
        <goal name="theorem2_a.0.0.2.0.3.0.1" expl="destruct premise" proved="true">
        <proof prover="0"><result status="valid" time="0.044825" steps="42"/></proof>
        </goal>
        <goal name="theorem2_a.0.0.2.0.3.0.2" expl="destruct premise" proved="true">
        <proof prover="0"><result status="valid" time="0.052981" steps="43"/></proof>
        </goal>
        <goal name="theorem2_a.0.0.2.0.3.0.3" expl="destruct premise" proved="true">
        <proof prover="0"><result status="valid" time="0.040179" steps="42"/></proof>
        </goal>
        <goal name="theorem2_a.0.0.2.0.3.0.4" proved="true">
        <transf name="eliminate_let" proved="true" >
         <goal name="theorem2_a.0.0.2.0.3.0.4.0" proved="true">
         <transf name="destruct_rec" proved="true" arg1="Hinst">
          <goal name="theorem2_a.0.0.2.0.3.0.4.0.0" proved="true">
          <proof prover="0"><result status="valid" time="0.191947" steps="190"/></proof>
          </goal>
          <goal name="theorem2_a.0.0.2.0.3.0.4.0.1" proved="true">
          <transf name="assert" proved="true" arg1="(y = semi_w)">
           <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0" expl="asserted formula" proved="true">
           <transf name="case" proved="true" arg1="(y = root)">
            <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.0" expl="true case (asserted formula)" proved="true">
            <transf name="assert" proved="true" arg1="(semi_w = root)">
             <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.0.0" expl="asserted formula" proved="true">
             <proof prover="0"><result status="valid" time="0.246753" steps="497"/></proof>
             <proof prover="1"><result status="valid" time="0.399317" steps="40553"/></proof>
             </goal>
             <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.0.1" expl="true case (asserted formula)" proved="true">
             <proof prover="0"><result status="valid" time="0.046235" steps="60"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1" expl="false case (asserted formula)" proved="true">
            <transf name="instantiate" proved="true" arg1="min_semi_exists" arg2="dfsnum_parent, y">
             <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0" expl="false case (asserted formula)" proved="true">
             <transf name="destruct_rec" proved="true" arg1="Hinst">
              <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.0" expl="destruct premise" proved="true">
              <proof prover="0"><result status="valid" time="0.053040" steps="58"/></proof>
              </goal>
              <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.1" expl="destruct premise" proved="true">
              <proof prover="0"><result status="valid" time="0.039782" steps="58"/></proof>
              </goal>
              <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.2" expl="destruct premise" proved="true">
              <proof prover="0"><result status="valid" time="0.046245" steps="58"/></proof>
              </goal>
              <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.3" expl="destruct premise" proved="true">
              <proof prover="0"><result status="valid" time="0.051250" steps="58"/></proof>
              </goal>
              <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4" expl="false case (asserted formula)" proved="true">
              <transf name="assert" proved="true" arg1="((++&gt;) dfsnum_parent x y)">
               <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.0" expl="asserted formula" proved="true">
               <transf name="unfold" proved="true" arg1="(++&gt;)">
                <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.0.0" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.0.0.0" proved="true">
                 <proof prover="0"><result status="valid" time="0.049692" steps="60"/></proof>
                 </goal>
                 <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.0.0.1" proved="true">
                 <proof prover="0"><result status="valid" time="0.045535" steps="60"/></proof>
                 </goal>
                 <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.0.0.2" proved="true">
                 <proof prover="0"><result status="valid" time="0.046535" steps="60"/></proof>
                 </goal>
                 <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.0.0.3" proved="true">
                 <proof prover="0"><result status="valid" time="0.047814" steps="60"/></proof>
                 <proof prover="1"><result status="valid" time="0.074555" steps="28732"/></proof>
                 <proof prover="2"><result status="valid" time="0.045207"/></proof>
                 </goal>
                 <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.0.0.4" proved="true">
                 <proof prover="0"><result status="valid" time="0.212737" steps="307"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.1" expl="false case (asserted formula)" proved="true">
               <transf name="assert" proved="true" arg1="(exists i_semi_y p_semi_y. mapsto semi_x (i_semi_y, p_semi_y) dfsnum_parent )">
                <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.1.0" expl="asserted formula" proved="true">
                <proof prover="1"><result status="valid" time="4.290505" steps="252265"/></proof>
                <proof prover="2"><result status="valid" time="0.801925"/></proof>
                </goal>
                <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.1.1" expl="false case (asserted formula)" proved="true">
                <transf name="destruct_rec" proved="true" arg1="h1">
                 <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.1.1.0" expl="false case (asserted formula)" proved="true">
                 <transf name="assert" proved="true" arg1="(exists ix, px. mapsto x (ix ,px ) dfsnum_parent )">
                  <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.1.1.0.0" expl="asserted formula" proved="true">
                  <proof prover="1"><result status="valid" time="0.389201" steps="38581"/></proof>
                  </goal>
                  <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.1.1.0.1" expl="false case (asserted formula)" proved="true">
                  <transf name="destruct_rec" proved="true" arg1="h1">
                   <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.1.1.0.1.0" expl="false case (asserted formula)" proved="true">
                   <transf name="assert" proved="true" arg1="(i_semi_y &lt;= ix)">
                    <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.1.1.0.1.0.0" expl="asserted formula" proved="true">
                    <proof prover="0"><result status="valid" time="2.790979" steps="5066"/></proof>
                    </goal>
                    <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.1.1.0.1.0.1" expl="false case (asserted formula)" proved="true">
                    <transf name="assert" proved="true" arg1="(ix &lt; i_semi_w)">
                     <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.1.1.0.1.0.1.0" expl="asserted formula" proved="true">
                     <proof prover="0"><result status="valid" time="0.638499" steps="1263"/></proof>
                     </goal>
                     <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.1.1.0.1.0.1.1" expl="false case (asserted formula)" proved="true">
                     <transf name="case" proved="true" arg1="(y = semi_w)">
                      <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.1.1.0.1.0.1.1.0" expl="false case (true case. asserted formula)" proved="true">
                      <proof prover="0"><result status="valid" time="0.049391" steps="72"/></proof>
                      </goal>
                      <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.1.1.0.1.0.1.1.1" expl="false case (asserted formula)" proved="true">
                      <transf name="instantiate" proved="true" arg1="H1" arg2="y, semi_x">
                       <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.1.1.0.1.0.1.1.1.0" expl="false case (asserted formula)" proved="true">
                       <transf name="destruct_rec" proved="true" arg1="Hinst">
                        <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.1.1.0.1.0.1.1.1.0.0" expl="destruct premise" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.1.1.0.1.0.1.1.1.0.0.0" proved="true">
                         <proof prover="0"><result status="valid" time="0.240994" steps="303"/></proof>
                         <proof prover="1"><result status="valid" time="0.335713" steps="37126"/></proof>
                         <proof prover="2"><result status="valid" time="0.781301"/></proof>
                         <transf name="unfold" proved="true" arg1="(--*-&gt;)" arg2="in" arg3="Hinst3">
                          <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.1.1.0.1.0.1.1.1.0.0.0.0" proved="true">
                          <transf name="destruct_rec" proved="true" arg1="Hinst3">
                           <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.1.1.0.1.0.1.1.1.0.0.0.0.0" proved="true">
                           <proof prover="0"><result status="valid" time="0.050017" steps="71"/></proof>
                           <proof prover="1"><result status="valid" time="0.072675" steps="28804"/></proof>
                           <proof prover="2"><result status="valid" time="0.042164"/></proof>
                           </goal>
                           <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.1.1.0.1.0.1.1.1.0.0.0.0.1" proved="true">
                           <proof prover="0"><result status="valid" time="0.100293" steps="76"/></proof>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.1.1.0.1.0.1.1.1.0.0.1" proved="true">
                         <proof prover="0"><result status="valid" time="0.086698" steps="72"/></proof>
                         <proof prover="1"><result status="valid" time="0.079421" steps="28777"/></proof>
                         <proof prover="2"><result status="valid" time="0.039067"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.1.1.0.1.0.1.1.1.0.1" expl="destruct premise" proved="true">
                        <proof prover="0"><result status="valid" time="0.054158" steps="72"/></proof>
                        </goal>
                        <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.0.1.0.4.1.1.0.1.0.1.1.1.0.2" expl="false case (asserted formula)" proved="true">
                        <proof prover="0"><result status="valid" time="0.083404" steps="146"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="theorem2_a.0.0.2.0.3.0.4.0.1.1" proved="true">
           <proof prover="2"><result status="valid" time="6.712397"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Theorem2" proved="true">
 <goal name="theorem2" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="theorem2.0" proved="true">
  <transf name="assert" proved="true" arg1="(semi_w ~~&gt; w)">
   <goal name="theorem2.0.0" expl="asserted formula" proved="true">
   <proof prover="1"><result status="valid" time="1.454513" steps="90801"/></proof>
   </goal>
   <goal name="theorem2.0.1" proved="true">
   <transf name="assert" proved="true" arg1="(forall idom_w. idom_w ~&gt; w -&gt; (--*-&gt;) dfsnum_parent idom_w semi_w)">
    <goal name="theorem2.0.1.0" expl="asserted formula" proved="true">
    <proof prover="0"><result status="valid" time="0.042860" steps="47"/></proof>
    </goal>
    <goal name="theorem2.0.1.1" proved="true">
    <transf name="assert" proved="true" arg1="(exists idom_w. idom_w ~&gt; w)">
     <goal name="theorem2.0.1.1.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.632942" steps="1710"/></proof>
     </goal>
     <goal name="theorem2.0.1.1.1" proved="true">
     <transf name="destruct_rec" proved="true" arg1="h">
      <goal name="theorem2.0.1.1.1.0" proved="true">
      <transf name="instantiate" proved="true" arg1="h1" arg2="idom_w">
       <goal name="theorem2.0.1.1.1.0.0" proved="true">
       <transf name="destruct_rec" proved="true" arg1="Hinst">
        <goal name="theorem2.0.1.1.1.0.0.0" expl="destruct premise" proved="true">
        <proof prover="0"><result status="valid" time="0.040618" steps="42"/></proof>
        </goal>
        <goal name="theorem2.0.1.1.1.0.0.1" proved="true">
        <transf name="unfold" proved="true" arg1="(--*-&gt;)" arg2="in" arg3="Hinst">
         <goal name="theorem2.0.1.1.1.0.0.1.0" proved="true">
         <transf name="destruct_rec" proved="true" arg1="Hinst">
          <goal name="theorem2.0.1.1.1.0.0.1.0.0" proved="true">
          <proof prover="0"><result status="valid" time="0.037041" steps="46"/></proof>
          </goal>
          <goal name="theorem2.0.1.1.1.0.0.1.0.1" proved="true">
          <transf name="assert" proved="true" arg1="(exists l2. (--+-&gt;) dfsnum_parent semi_w l2 w)">
           <goal name="theorem2.0.1.1.1.0.0.1.0.1.0" expl="asserted formula" proved="true">
           <proof prover="0"><result status="valid" time="0.173430" steps="172"/></proof>
           </goal>
           <goal name="theorem2.0.1.1.1.0.0.1.0.1.1" proved="true">
           <transf name="destruct_rec" proved="true" arg1="h">
            <goal name="theorem2.0.1.1.1.0.0.1.0.1.1.0" proved="true">
            <transf name="case" proved="true" arg1="(idom_w = root )">
             <goal name="theorem2.0.1.1.1.0.0.1.0.1.1.0.0" expl="true case" proved="true">
             <transf name="instantiate" proved="true" arg1="idom_is_the_last" arg2="w, idom_w, (l ++ Cons semi_w l2), (Nil : list vertex), (l ++ Cons semi_w l2), semi_w">
              <goal name="theorem2.0.1.1.1.0.0.1.0.1.1.0.0.0" expl="true case" proved="true">
              <transf name="destruct_rec" proved="true" arg1="Hinst">
               <goal name="theorem2.0.1.1.1.0.0.1.0.1.1.0.0.0.0" expl="destruct premise" proved="true">
               <proof prover="0"><result status="valid" time="0.051283" steps="48"/></proof>
               </goal>
               <goal name="theorem2.0.1.1.1.0.0.1.0.1.1.0.0.0.1" expl="destruct premise" proved="true">
               <proof prover="0"><result status="valid" time="0.081728" steps="59"/></proof>
               </goal>
               <goal name="theorem2.0.1.1.1.0.0.1.0.1.1.0.0.0.2" expl="destruct premise" proved="true">
               <proof prover="0"><result status="valid" time="0.086467" steps="59"/></proof>
               </goal>
               <goal name="theorem2.0.1.1.1.0.0.1.0.1.1.0.0.0.3" expl="destruct premise" proved="true">
               <proof prover="1"><result status="valid" time="2.786625" steps="157800"/></proof>
               <proof prover="2"><result status="valid" time="0.887444"/></proof>
               </goal>
               <goal name="theorem2.0.1.1.1.0.0.1.0.1.1.0.0.0.4" expl="destruct premise" proved="true">
               <proof prover="0"><result status="valid" time="0.102014" steps="211"/></proof>
               </goal>
               <goal name="theorem2.0.1.1.1.0.0.1.0.1.1.0.0.0.5" expl="destruct premise" proved="true">
               <proof prover="0"><result status="valid" time="0.036362" steps="48"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="theorem2.0.1.1.1.0.0.1.0.1.1.0.1" expl="false case" proved="true">
             <transf name="assert" proved="true" arg1="(exists l1. (--+-&gt;) dfsnum_parent root l1 idom_w)">
              <goal name="theorem2.0.1.1.1.0.0.1.0.1.1.0.1.0" expl="asserted formula" proved="true">
              <proof prover="0"><result status="valid" time="3.368531" steps="4685"/></proof>
              <proof prover="1"><result status="valid" time="0.965830" steps="75506"/></proof>
              </goal>
              <goal name="theorem2.0.1.1.1.0.0.1.0.1.1.0.1.1" expl="false case" proved="true">
              <transf name="destruct_rec" proved="true" arg1="h">
               <goal name="theorem2.0.1.1.1.0.0.1.0.1.1.0.1.1.0" expl="false case" proved="true">
               <transf name="instantiate" proved="true" arg1="idom_is_the_last" arg2="w, idom_w, (l1 ++ Cons idom_w l ++ Cons semi_w l2), (Cons root l1), (l ++ Cons semi_w l2), semi_w">
                <goal name="theorem2.0.1.1.1.0.0.1.0.1.1.0.1.1.0.0" expl="false case" proved="true">
                <transf name="destruct_rec" proved="true" arg1="Hinst">
                 <goal name="theorem2.0.1.1.1.0.0.1.0.1.1.0.1.1.0.0.0" expl="destruct premise" proved="true">
                 <proof prover="0"><result status="valid" time="0.046603" steps="50"/></proof>
                 </goal>
                 <goal name="theorem2.0.1.1.1.0.0.1.0.1.1.0.1.1.0.0.1" expl="destruct premise" proved="true">
                 <proof prover="0"><result status="valid" time="0.257999" steps="230"/></proof>
                 </goal>
                 <goal name="theorem2.0.1.1.1.0.0.1.0.1.1.0.1.1.0.0.2" expl="destruct premise" proved="true">
                 <proof prover="0"><result status="valid" time="0.052108" steps="78"/></proof>
                 </goal>
                 <goal name="theorem2.0.1.1.1.0.0.1.0.1.1.0.1.1.0.0.3" expl="destruct premise" proved="true">
                 <proof prover="0"><result status="valid" time="29.076742" steps="56179"/></proof>
                 <proof prover="1"><result status="valid" time="2.307574" steps="134046"/></proof>
                 <proof prover="2"><result status="valid" time="39.858813"/></proof>
                 </goal>
                 <goal name="theorem2.0.1.1.1.0.0.1.0.1.1.0.1.1.0.0.4" expl="destruct premise" proved="true">
                 <proof prover="0"><result status="valid" time="0.191701" steps="225"/></proof>
                 </goal>
                 <goal name="theorem2.0.1.1.1.0.0.1.0.1.1.0.1.1.0.0.5" expl="destruct premise" proved="true">
                 <proof prover="0"><result status="valid" time="0.043883" steps="50"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Theorem3" proved="true">
 <goal name="theorem3" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="theorem3.0" proved="true">
  <transf name="assert" proved="true" arg1="((dfsnum @ semi_u) &lt;= (dfsnum @ semi_w))">
   <goal name="theorem3.0.0" expl="asserted formula" proved="true">
   <transf name="instantiate" proved="true" arg1="H" arg2="u">
    <goal name="theorem3.0.0.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.427821" steps="41688"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="theorem3.0.1" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="theorem3.0.1.0" proved="true">
    <proof prover="0"><result status="valid" time="0.039644" steps="46"/></proof>
    </goal>
    <goal name="theorem3.0.1.1" proved="true">
    <transf name="unfold" proved="true" arg1="(--*-&gt;)" arg2="in" arg3="H3">
     <goal name="theorem3.0.1.1.0" proved="true">
     <transf name="destruct_rec" proved="true" arg1="H3">
      <goal name="theorem3.0.1.1.0.0" proved="true">
      <proof prover="0"><result status="valid" time="0.043512" steps="55"/></proof>
      </goal>
      <goal name="theorem3.0.1.1.0.1" proved="true">
      <transf name="instantiate" proved="true" arg1="lemma5" arg2="dfsnum_parent, u, w, idom_w, idom_u, l">
       <goal name="theorem3.0.1.1.0.1.0" proved="true">
       <transf name="destruct_rec" proved="true" arg1="Hinst">
        <goal name="theorem3.0.1.1.0.1.0.0" expl="destruct premise" proved="true">
        <proof prover="0"><result status="valid" time="0.052762" steps="50"/></proof>
        </goal>
        <goal name="theorem3.0.1.1.0.1.0.1" expl="destruct premise" proved="true">
        <proof prover="0"><result status="valid" time="0.049983" steps="50"/></proof>
        </goal>
        <goal name="theorem3.0.1.1.0.1.0.2" expl="destruct premise" proved="true">
        <proof prover="0"><result status="valid" time="0.037944" steps="50"/></proof>
        </goal>
        <goal name="theorem3.0.1.1.0.1.0.3" expl="destruct premise" proved="true">
        <proof prover="0"><result status="valid" time="0.049082" steps="50"/></proof>
        </goal>
        <goal name="theorem3.0.1.1.0.1.0.4" expl="destruct premise" proved="true">
        <proof prover="0"><result status="valid" time="0.039612" steps="50"/></proof>
        </goal>
        <goal name="theorem3.0.1.1.0.1.0.5" proved="true">
        <transf name="assert" proved="true" arg1="False">
         <goal name="theorem3.0.1.1.0.1.0.5.0" expl="asserted formula" proved="true">
         <transf name="assert" proved="true" arg1="(exists l. (--+-&gt;) dfsnum_parent idom_w l u)">
          <goal name="theorem3.0.1.1.0.1.0.5.0.0" expl="asserted formula" proved="true">
          <proof prover="1"><result status="valid" time="97.264714" steps="801041"/></proof>
          <proof prover="2"><result status="valid" time="10.043044"/></proof>
          </goal>
          <goal name="theorem3.0.1.1.0.1.0.5.0.1" expl="asserted formula" proved="true">
          <proof prover="1"><result status="valid" time="0.469268" steps="47297"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="theorem3.0.1.1.0.1.0.5.1" proved="true">
         <proof prover="0"><result status="valid" time="0.047378" steps="52"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="theorem3.0.1.1.0.1.0.6" proved="true">
        <transf name="unfold" proved="true" arg1="(--*-&gt;)" arg2="in" arg3="Hinst">
         <goal name="theorem3.0.1.1.0.1.0.6.0" proved="true">
         <transf name="destruct_rec" proved="true" arg1="Hinst">
          <goal name="theorem3.0.1.1.0.1.0.6.0.0" proved="true">
          <proof prover="0"><result status="valid" time="0.066931" steps="54"/></proof>
          </goal>
          <goal name="theorem3.0.1.1.0.1.0.6.0.1" proved="true">
          <transf name="assert" proved="true" arg1="(idom_u ~~&gt; w)">
           <goal name="theorem3.0.1.1.0.1.0.6.0.1.0" expl="asserted formula" proved="true">
           <transf name="inline_goal" proved="true" >
            <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0" expl="asserted formula" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.0" proved="true">
             <proof prover="0"><result status="valid" time="0.181962" steps="220"/></proof>
             </goal>
             <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.1" proved="true">
             <proof prover="0"><result status="valid" time="0.044938" steps="52"/></proof>
             </goal>
             <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2" proved="true">
             <transf name="instantiate" proved="true" arg1="theorem23helper" arg2="dfsnum_parent, idom_u, w, p">
              <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0" proved="true">
              <transf name="destruct_rec" proved="true" arg1="Hinst">
               <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.0" expl="destruct premise" proved="true">
               <proof prover="0"><result status="valid" time="0.042308" steps="54"/></proof>
               </goal>
               <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.1" expl="destruct premise" proved="true">
               <proof prover="0"><result status="valid" time="0.068247" steps="54"/></proof>
               </goal>
               <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.2" expl="destruct premise" proved="true">
               <proof prover="2"><result status="valid" time="3.527844"/></proof>
               </goal>
               <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.3" expl="destruct premise" proved="true">
               <proof prover="0"><result status="valid" time="0.040864" steps="54"/></proof>
               </goal>
               <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4" proved="true">
               <transf name="eliminate_let" proved="true" >
                <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0" proved="true">
                <transf name="destruct_rec" proved="true" arg1="Hinst">
                 <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.0" proved="true">
                 <proof prover="0"><result status="valid" time="0.225832" steps="267"/></proof>
                 </goal>
                 <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1" proved="true">
                 <transf name="instantiate" proved="true" arg1="min_semi_exists" arg2="dfsnum_parent, y">
                  <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0" proved="true">
                  <transf name="destruct_rec" proved="true" arg1="Hinst">
                   <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.0" expl="destruct premise" proved="true">
                   <proof prover="0"><result status="valid" time="0.048590" steps="68"/></proof>
                   </goal>
                   <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.1" expl="destruct premise" proved="true">
                   <proof prover="0"><result status="valid" time="0.037587" steps="68"/></proof>
                   </goal>
                   <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.2" expl="destruct premise" proved="true">
                   <proof prover="0"><result status="valid" time="0.046830" steps="68"/></proof>
                   </goal>
                   <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.3" expl="destruct premise" proved="true">
                   <proof prover="0"><result status="valid" time="3.096482" steps="5708"/></proof>
                   </goal>
                   <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4" proved="true">
                   <transf name="pose" proved="true" arg1="semi_y" arg2="semi_x">
                    <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0" proved="true">
                    <transf name="subst" proved="true" arg1="semi_x">
                     <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0" proved="true">
                     <transf name="assert" proved="true" arg1="(exists i_semi_y p_semi_y. mapsto semi_y (i_semi_y, p_semi_y) dfsnum_parent)">
                      <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.0" expl="asserted formula" proved="true">
                      <proof prover="1"><result status="valid" time="63.576541" steps="796099"/></proof>
                      <proof prover="2"><result status="valid" time="1.042395"/></proof>
                      </goal>
                      <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1" proved="true">
                      <transf name="destruct_rec" proved="true" arg1="h1">
                       <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0" proved="true">
                       <transf name="assert" proved="true" arg1="(exists i_idom_u p_idom_u. mapsto idom_u (i_idom_u , p_idom_u) dfsnum_parent)">
                        <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.0" expl="asserted formula" proved="true">
                        <proof prover="0"><result status="valid" time="1.079811" steps="2824"/></proof>
                        </goal>
                        <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1" proved="true">
                        <transf name="destruct_rec" proved="true" arg1="h1">
                         <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0" proved="true">
                         <transf name="assert" proved="true" arg1="(i_semi_y &lt; i_idom_u)">
                          <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.0" expl="asserted formula" proved="true">
                          <transf name="assert" proved="true" arg1="((++&gt;) dfsnum_parent x y)">
                           <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.0.0" expl="asserted formula" proved="true">
                           <proof prover="1"><result status="valid" time="7.082083" steps="214449"/></proof>
                           </goal>
                           <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.0.1" expl="asserted formula" proved="true">
                           <proof prover="1"><result status="valid" time="3.877763" steps="139603"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1" proved="true">
                          <transf name="assert" proved="true" arg1="((not mem2 y (l2 ++ Cons w Nil)) )">
                           <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.0" expl="asserted formula" proved="true">
                           <transf name="assert" proved="true" arg1="((not mem2 y (l2 ++ Cons w Nil)) \/ (mem2 y (l2 ++ Cons w Nil)))">
                            <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.0.0" expl="asserted formula" proved="true">
                            <proof prover="0"><result status="valid" time="0.051624" steps="76"/></proof>
                            </goal>
                            <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.0.1" expl="asserted formula" proved="true">
                            <transf name="destruct_rec" proved="true" arg1="h1">
                             <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.0.1.0" expl="asserted formula" proved="true">
                             <proof prover="0"><result status="valid" time="0.048951" steps="78"/></proof>
                             </goal>
                             <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.0.1.1" expl="asserted formula" proved="true">
                             <transf name="assert" proved="true" arg1="False">
                              <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.0.1.1.0" expl="asserted formula" proved="true">
                              <transf name="instantiate" proved="true" arg1="H3" arg2="y">
                               <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.0.1.1.0.0" expl="asserted formula" proved="true">
                               <transf name="destruct_rec" proved="true" arg1="Hinst">
                                <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.0.1.1.0.0.0" expl="destruct premise" proved="true">
                                <transf name="split_vc" proved="true" >
                                 <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.0.1.1.0.0.0.0" proved="true">
                                 <transf name="assert" proved="true" arg1="((mem2 y l2) \/ y = w)">
                                  <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.0.1.1.0.0.0.0.0" expl="asserted formula" proved="true">
                                  <proof prover="0"><result status="valid" time="0.292850" steps="433"/></proof>
                                  </goal>
                                  <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.0.1.1.0.0.0.0.1" proved="true">
                                  <transf name="destruct_rec" proved="true" arg1="h">
                                   <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.0.1.1.0.0.0.0.1.0" proved="true">
                                   <transf name="assert" proved="true" arg1="(exists l. (--+-&gt;) dfsnum_parent u l y)">
                                    <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.0.1.1.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
                                    <proof prover="0"><result status="valid" time="0.303873" steps="472"/></proof>
                                    </goal>
                                    <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.0.1.1.0.0.0.0.1.0.1" proved="true">
                                    <proof prover="2"><result status="valid" time="12.752248"/></proof>
                                    </goal>
                                   </transf>
                                   </goal>
                                   <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.0.1.1.0.0.0.0.1.1" proved="true">
                                   <proof prover="0"><result status="valid" time="0.274743" steps="511"/></proof>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                 <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.0.1.1.0.0.0.1" proved="true">
                                 <proof prover="0"><result status="valid" time="0.091830" steps="78"/></proof>
                                 </goal>
                                </transf>
                                </goal>
                                <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.0.1.1.0.0.1" expl="asserted formula" proved="true">
                                <transf name="instantiate" proved="true" arg1="Hinst" arg2="semi_y">
                                 <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.0.1.1.0.0.1.0" expl="asserted formula" proved="true">
                                 <transf name="destruct_rec" proved="true" arg1="Hinst">
                                  <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.0.1.1.0.0.1.0.0" expl="destruct premise" proved="true">
                                  <proof prover="0"><result status="valid" time="0.076678" steps="78"/></proof>
                                  </goal>
                                  <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.0.1.1.0.0.1.0.1" expl="asserted formula" proved="true">
                                  <transf name="assert" proved="true" arg1="((semi_u = idom_u) \/ (exists l. (--+-&gt;) dfsnum_parent idom_u l semi_u))">
                                   <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.0.1.1.0.0.1.0.1.0" expl="asserted formula" proved="true">
                                   <proof prover="0"><result status="valid" time="6.000507" steps="8987"/></proof>
                                   <proof prover="1"><result status="valid" time="0.998397" steps="76761"/></proof>
                                   </goal>
                                   <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.0.1.1.0.0.1.0.1.1" expl="asserted formula" proved="true">
                                   <proof prover="2" obsolete="true"><result status="timeout" time="120.000000"/></proof>
                                   <transf name="destruct_rec" proved="true" arg1="h1">
                                    <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.0.1.1.0.0.1.0.1.1.0" expl="asserted formula" proved="true">
                                    <proof prover="1"><result status="valid" time="0.645272" steps="51803"/></proof>
                                    </goal>
                                    <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.0.1.1.0.0.1.0.1.1.1" expl="asserted formula" proved="true">
                                    <proof prover="0"><result status="valid" time="3.274678" steps="7483"/></proof>
                                    <proof prover="1"><result status="valid" time="0.686228" steps="53685"/></proof>
                                    <proof prover="2" obsolete="true"><result status="timeout" time="120.000000"/></proof>
                                    </goal>
                                   </transf>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.0.1.1.1" expl="asserted formula" proved="true">
                              <proof prover="0"><result status="valid" time="0.047740" steps="78"/></proof>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1" proved="true">
                           <transf name="case" proved="true" arg1="(idom_u = y)">
                            <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.0" expl="true case" proved="true">
                            <transf name="subst" proved="true" arg1="idom_u">
                             <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.0.0" expl="true case" proved="true">
                             <transf name="clear_but" proved="true" arg1="h1, Hinst10">
                              <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.0.0.0" expl="true case" proved="true">
                              <proof prover="1"><result status="valid" time="45.951173" steps="604313"/></proof>
                              <proof prover="2"><result status="valid" time="18.880946"/></proof>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1" expl="false case" proved="true">
                            <transf name="case" proved="true" arg1="(y = u)">
                             <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.0" expl="false case (true case)" proved="true">
                             <transf name="subst" proved="true" arg1="y">
                              <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.0.0" expl="false case (true case)" proved="true">
                              <transf name="assert" proved="true" arg1="(i_semi_y &gt;= i_idom_u)">
                               <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.0.0.0" expl="asserted formula" proved="true">
                               <transf name="instantiate" proved="true" arg1="lemma4" arg2="dfsnum_parent, u, idom_u, semi_y">
                                <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.0.0.0.0" expl="asserted formula" proved="true">
                                <transf name="destruct_rec" proved="true" arg1="Hinst">
                                 <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.0.0.0.0.0" expl="destruct premise" proved="true">
                                 <proof prover="0"><result status="valid" time="0.052244" steps="80"/></proof>
                                 </goal>
                                 <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.0.0.0.0.1" expl="destruct premise" proved="true">
                                 <proof prover="0"><result status="valid" time="0.044984" steps="80"/></proof>
                                 </goal>
                                 <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.0.0.0.0.2" expl="destruct premise" proved="true">
                                 <proof prover="0"><result status="valid" time="0.044327" steps="80"/></proof>
                                 </goal>
                                 <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.0.0.0.0.3" expl="destruct premise" proved="true">
                                 <proof prover="0"><result status="valid" time="0.040280" steps="80"/></proof>
                                 </goal>
                                 <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.0.0.0.0.4" expl="asserted formula" proved="true">
                                 <proof prover="0"><result status="valid" time="54.855995" steps="93813"/></proof>
                                 <proof prover="1"><result status="valid" time="5.796460" steps="229528"/></proof>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                               <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.0.0.1" expl="false case (true case)" proved="true">
                               <proof prover="0"><result status="valid" time="0.049751" steps="80"/></proof>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                             <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1" expl="false case" proved="true">
                             <transf name="assert" proved="true" arg1="(exists l. (--+-&gt;) dfsnum_parent idom_u l y)">
                              <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.0" expl="asserted formula" proved="true">
                              <proof prover="0"><result status="valid" time="0.289305" steps="411"/></proof>
                              </goal>
                              <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1" expl="false case" proved="true">
                              <transf name="destruct_rec" proved="true" arg1="h1">
                               <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0" expl="false case" proved="true">
                               <transf name="remove" proved="true" arg1="Hinst3">
                                <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0" expl="false case" proved="true">
                                <transf name="assert" proved="true" arg1="(exists l. (--+-&gt;) dfsnum_parent semi_y l idom_u)">
                                 <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.0" expl="asserted formula" proved="true">
                                 <transf name="instantiate" proved="true" arg1="mutual_parent" arg2="dfsnum_parent, idom_u, semi_y, y">
                                  <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.0.0" expl="asserted formula" proved="true">
                                  <transf name="destruct_rec" proved="true" arg1="Hinst">
                                   <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.0.0.0" expl="destruct premise" proved="true">
                                   <proof prover="0"><result status="valid" time="0.068975" steps="89"/></proof>
                                   </goal>
                                   <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.0.0.1" expl="destruct premise" proved="true">
                                   <proof prover="0"><result status="valid" time="0.272757" steps="415"/></proof>
                                   </goal>
                                   <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.0.0.2" expl="destruct premise" proved="true">
                                   <proof prover="0"><result status="valid" time="0.281518" steps="419"/></proof>
                                   </goal>
                                   <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.0.0.3" expl="asserted formula" proved="true">
                                   <proof prover="0"><result status="valid" time="81.195168" steps="155584"/></proof>
                                   </goal>
                                   <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.0.0.4" expl="asserted formula" proved="true">
                                   <proof prover="0"><result status="valid" time="1.235801" steps="1933"/></proof>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                 <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1" expl="false case" proved="true">
                                 <transf name="assert" proved="true" arg1="(exists l. (--+-&gt;) dfsnum_parent idom_u l u)">
                                  <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.0" expl="asserted formula" proved="true">
                                  <proof prover="1"><result status="valid" time="0.995433" steps="75460"/></proof>
                                  </goal>
                                  <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1" expl="false case" proved="true">
                                  <transf name="destruct_rec" proved="true" arg1="h1">
                                   <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0" expl="false case" proved="true">
                                   <transf name="assert" proved="true" arg1="(not mem2 y l)">
                                    <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0" expl="asserted formula" proved="true">
                                    <transf name="assert" proved="true" arg1="(mem2 y l \/ not mem2 y l)">
                                     <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.0" expl="asserted formula" proved="true">
                                     <proof prover="0"><result status="valid" time="0.037570" steps="88"/></proof>
                                     </goal>
                                     <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1" expl="asserted formula" proved="true">
                                     <transf name="destruct_rec" proved="true" arg1="h1">
                                      <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0" expl="asserted formula" proved="true">
                                      <transf name="assert" proved="true" arg1="False">
                                       <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0" expl="asserted formula" proved="true">
                                       <transf name="assert" proved="true" arg1="(exists l6 lyu. l6 ++ Cons y lyu = l)">
                                        <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0.0" expl="asserted formula" proved="true">
                                        <proof prover="0"><result status="valid" time="0.307249" steps="492"/></proof>
                                        </goal>
                                        <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0.1" expl="asserted formula" proved="true">
                                        <transf name="destruct_rec" proved="true" arg1="h1">
                                         <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0.1.0" expl="asserted formula" proved="true">
                                         <transf name="unfold" proved="true" arg1="(+&gt;)" arg2="in" arg3="Hinst">
                                          <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0.1.0.0" expl="asserted formula" proved="true">
                                          <transf name="destruct" proved="true" arg1="Hinst">
                                           <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0.1.0.0.0" expl="asserted formula" proved="true">
                                           <transf name="unfold" proved="true" arg1="(++&gt;)" arg2="in" arg3="Hinst1">
                                            <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
                                            <transf name="destruct_rec" proved="true" arg1="Hinst1">
                                             <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
                                             <transf name="case" proved="true" arg1="(semi_y = root )">
                                              <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0.1.0.0.0.0.0.0" expl="true case (asserted formula)" proved="true">
                                              <transf name="assert" proved="true" arg1="(path root (p ++ Cons y lyu) u)">
                                               <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0.1.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                                               <proof prover="0"><result status="valid" time="0.310373" steps="597"/></proof>
                                               </goal>
                                               <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0.1.0.0.0.0.0.0.1" expl="true case (asserted formula)" proved="true">
                                               <proof prover="1"><result status="valid" time="56.080959" steps="724916"/></proof>
                                               <transf name="assert" proved="true" arg1="(not mem2 idom_u (p ++ Cons y lyu))">
                                                <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0.1.0.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
                                                <proof prover="1"><result status="valid" time="1.220784" steps="89890"/></proof>
                                                </goal>
                                                <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0.1.0.0.0.0.0.0.1.1" expl="true case (asserted formula)" proved="true">
                                                <proof prover="0"><result status="valid" time="10.272478" steps="18835"/></proof>
                                                <proof prover="1"><result status="valid" time="19.846639" steps="466543"/></proof>
                                                </goal>
                                               </transf>
                                               </goal>
                                              </transf>
                                              </goal>
                                              <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0.1.0.0.0.0.0.1" expl="false case (asserted formula)" proved="true">
                                              <transf name="assert" proved="true" arg1="(exists l. (--+-&gt;) dfsnum_parent root l semi_y)">
                                               <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0.1.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
                                               <proof prover="1"><result status="valid" time="1.183505" steps="86087"/></proof>
                                               <proof prover="2"><result status="valid" time="0.777556"/></proof>
                                               </goal>
                                               <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0.1.0.0.0.0.0.1.1" expl="false case (asserted formula)" proved="true">
                                               <transf name="destruct_rec" proved="true" arg1="h1">
                                                <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0.1.0.0.0.0.0.1.1.0" expl="false case (asserted formula)" proved="true">
                                                <transf name="assert" proved="true" arg1="(path root (l ++ Cons semi_y p ++ Cons y lyu) u)">
                                                 <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0.1.0.0.0.0.0.1.1.0.0" expl="asserted formula" proved="true">
                                                 <proof prover="0"><result status="valid" time="0.402527" steps="1490"/></proof>
                                                 </goal>
                                                 <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0.1.0.0.0.0.0.1.1.0.1" expl="false case (asserted formula)" proved="true">
                                                 <transf name="assert" proved="true" arg1="(not mem2 idom_u ((l ++ Cons semi_y p) ++ Cons y lyu))">
                                                  <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0.1.0.0.0.0.0.1.1.0.1.0" expl="asserted formula" proved="true">
                                                  <transf name="assert" proved="true" arg1="(not mem2 idom_u p)">
                                                   <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0.1.0.0.0.0.0.1.1.0.1.0.0" expl="asserted formula" proved="true">
                                                   <transf name="assert" proved="true" arg1="(exists iy py. mapsto y (iy, py) dfsnum_parent)">
                                                    <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0.1.0.0.0.0.0.1.1.0.1.0.0.0" expl="asserted formula" proved="true">
                                                    <proof prover="0"><result status="valid" time="3.012005" steps="6327"/></proof>
                                                    </goal>
                                                    <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0.1.0.0.0.0.0.1.1.0.1.0.0.1" expl="asserted formula" proved="true">
                                                    <transf name="destruct_rec" proved="true" arg1="h1">
                                                     <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0.1.0.0.0.0.0.1.1.0.1.0.0.1.0" expl="asserted formula" proved="true">
                                                     <transf name="assert" proved="true" arg1="(iy &gt;= i_idom_u)">
                                                      <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0.1.0.0.0.0.0.1.1.0.1.0.0.1.0.0" expl="asserted formula" proved="true">
                                                      <proof prover="0"><result status="valid" time="2.113536" steps="3646"/></proof>
                                                      </goal>
                                                      <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0.1.0.0.0.0.0.1.1.0.1.0.0.1.0.1" expl="asserted formula" proved="true">
                                                      <proof prover="0"><result status="valid" time="2.856274" steps="3879"/></proof>
                                                      </goal>
                                                     </transf>
                                                     </goal>
                                                    </transf>
                                                    </goal>
                                                   </transf>
                                                   </goal>
                                                   <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0.1.0.0.0.0.0.1.1.0.1.0.1" expl="asserted formula" proved="true">
                                                   <proof prover="2"><result status="valid" time="2.889286"/></proof>
                                                   </goal>
                                                  </transf>
                                                  </goal>
                                                  <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.0.1.0.0.0.0.0.1.1.0.1.1" expl="false case (asserted formula)" proved="true">
                                                  <proof prover="0"><result status="valid" time="9.878344" steps="21010"/></proof>
                                                  </goal>
                                                 </transf>
                                                 </goal>
                                                </transf>
                                                </goal>
                                               </transf>
                                               </goal>
                                              </transf>
                                              </goal>
                                             </transf>
                                             </goal>
                                            </transf>
                                            </goal>
                                           </transf>
                                           </goal>
                                          </transf>
                                          </goal>
                                         </transf>
                                         </goal>
                                        </transf>
                                        </goal>
                                       </transf>
                                       </goal>
                                       <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.0.1" expl="asserted formula" proved="true">
                                       <proof prover="0"><result status="valid" time="0.056737" steps="90"/></proof>
                                       </goal>
                                      </transf>
                                      </goal>
                                      <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.0.1.1" expl="asserted formula" proved="true">
                                      <proof prover="0"><result status="valid" time="0.045700" steps="90"/></proof>
                                      </goal>
                                     </transf>
                                     </goal>
                                    </transf>
                                    </goal>
                                    <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.1" expl="false case" proved="true">
                                    <transf name="unfold" proved="true" arg1="(--*-&gt;)" arg2="in" arg3="Hinst2">
                                     <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.1.0" expl="false case" proved="true">
                                     <transf name="destruct_rec" proved="true" arg1="Hinst2">
                                      <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.1.0.0" expl="false case" proved="true">
                                      <proof prover="0"><result status="valid" time="0.363801" steps="528"/></proof>
                                      </goal>
                                      <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.1.0.1" expl="false case" proved="true">
                                      <transf name="assert" proved="true" arg1="((--+-&gt;) dfsnum_parent idom_u (l1 ++ Cons y l2) w)">
                                       <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.1.0.1.0" expl="asserted formula" proved="true">
                                       <proof prover="0"><result status="valid" time="0.066011" steps="102"/></proof>
                                       </goal>
                                       <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.1.0.1.1" expl="false case" proved="true">
                                       <transf name="assert" proved="true" arg1="((--+-&gt;) dfsnum_parent idom_u (l ++ Cons u l5) w)">
                                        <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.1.0.1.1.0" expl="asserted formula" proved="true">
                                        <proof prover="0"><result status="valid" time="0.069825" steps="108"/></proof>
                                        </goal>
                                        <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.1.0.1.1.1" expl="false case" proved="true">
                                        <transf name="assert" proved="true" arg1="((l1 ++ Cons y l2) = (l ++ Cons u l5))">
                                         <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.1.0.1.1.1.0" expl="asserted formula" proved="true">
                                         <proof prover="0"><result status="valid" time="0.165711" steps="108"/></proof>
                                         </goal>
                                         <goal name="theorem3.0.1.1.0.1.0.6.0.1.0.0.2.0.4.0.1.0.4.0.0.1.0.1.0.1.1.1.1.1.0.0.1.1.0.1.0.1.1.1.1" expl="false case" proved="true">
                                         <proof prover="1"><result status="valid" time="58.288169" steps="649228"/></proof>
                                         <proof prover="2"><result status="valid" time="2.363910"/></proof>
                                         </goal>
                                        </transf>
                                        </goal>
                                       </transf>
                                       </goal>
                                      </transf>
                                      </goal>
                                     </transf>
                                     </goal>
                                    </transf>
                                    </goal>
                                   </transf>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="theorem3.0.1.1.0.1.0.6.0.1.1" proved="true">
           <transf name="assert" proved="true" arg1="(exists l. (--+-&gt;) dfsnum_parent idom_w l w)">
            <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.0" expl="asserted formula" proved="true">
            <proof prover="1"><result status="valid" time="1.634724" steps="108597"/></proof>
            </goal>
            <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1" proved="true">
            <transf name="destruct_rec" proved="true" arg1="h">
             <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0" proved="true">
             <transf name="assert" proved="true" arg1="((exists l. (--+-&gt;) dfsnum_parent idom_u l w) \/ (exists l. (--+-&gt;) dfsnum_parent w l idom_u))">
              <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.0" expl="asserted formula" proved="true">
              <proof prover="2"><result status="valid" time="1.657966"/></proof>
              </goal>
              <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1" proved="true">
              <transf name="destruct_rec" proved="true" arg1="h">
               <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.0" proved="true">
               <transf name="remove" proved="true" arg1="h1">
                <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.0.0" proved="true">
                <transf name="case" proved="true" arg1="(idom_w  = root)">
                 <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.0.0.0" expl="true case" proved="true">
                 <transf name="subst" proved="true" arg1="idom_w">
                  <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.0.0.0.0" expl="true case" proved="true">
                  <transf name="instantiate" proved="true" arg1="idom_is_the_last" arg2="w, root, (l2 ++ Cons idom_u l), (Nil: list vertex), (Cons idom_u l), idom_u">
                   <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.0.0.0.0.0" expl="true case" proved="true">
                   <transf name="destruct_rec" proved="true" arg1="Hinst">
                    <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.0.0.0.0.0.0" expl="destruct premise" proved="true">
                    <proof prover="0"><result status="valid" time="0.050400" steps="56"/></proof>
                    </goal>
                    <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.0.0.0.0.0.1" expl="destruct premise" proved="true">
                    <proof prover="0"><result status="valid" time="0.140146" steps="59"/></proof>
                    </goal>
                    <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.0.0.0.0.0.2" expl="destruct premise" proved="true">
                    <proof prover="1"><result status="valid" time="11.179160" steps="271399"/></proof>
                    </goal>
                    <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.0.0.0.0.0.3" expl="destruct premise" proved="true">
                    <proof prover="0"><result status="valid" time="1.876044" steps="2711"/></proof>
                    </goal>
                    <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.0.0.0.0.0.4" expl="destruct premise" proved="true">
                    <proof prover="0"><result status="valid" time="0.069583" steps="59"/></proof>
                    </goal>
                    <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.0.0.0.0.0.5" expl="destruct premise" proved="true">
                    <proof prover="0"><result status="valid" time="0.043552" steps="56"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.0.0.1" expl="false case" proved="true">
                 <transf name="assert" proved="true" arg1="(exists l. (--+-&gt;) dfsnum_parent root l idom_w)">
                  <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.0.0.1.0" expl="asserted formula" proved="true">
                  <proof prover="0"><result status="valid" time="7.728324" steps="10422"/></proof>
                  <proof prover="1"><result status="valid" time="1.919197" steps="117277"/></proof>
                  </goal>
                  <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.0.0.1.1" expl="false case" proved="true">
                  <transf name="destruct_rec" proved="true" arg1="h">
                   <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.0.0.1.1.0" expl="false case" proved="true">
                   <transf name="instantiate" proved="true" arg1="idom_is_the_last" arg2="w, idom_w, (l ++ Cons idom_w l3 ++ Cons idom_u l1), (Cons root l), (l3 ++ Cons idom_u l1), idom_u">
                    <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.0.0.1.1.0.0" expl="false case" proved="true">
                    <transf name="destruct_rec" proved="true" arg1="Hinst">
                     <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.0.0.1.1.0.0.0" expl="destruct premise" proved="true">
                     <proof prover="0"><result status="valid" time="0.076172" steps="60"/></proof>
                     </goal>
                     <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.0.0.1.1.0.0.1" expl="destruct premise" proved="true">
                     <proof prover="0"><result status="valid" time="0.242888" steps="284"/></proof>
                     </goal>
                     <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.0.0.1.1.0.0.2" expl="destruct premise" proved="true">
                     <proof prover="0"><result status="valid" time="0.065263" steps="86"/></proof>
                     </goal>
                     <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.0.0.1.1.0.0.3" expl="destruct premise" proved="true">
                     <proof prover="1"><result status="valid" time="9.559487" steps="279615"/></proof>
                     <proof prover="2"><result status="valid" time="26.984671"/></proof>
                     </goal>
                     <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.0.0.1.1.0.0.4" expl="destruct premise" proved="true">
                     <proof prover="0"><result status="valid" time="0.221071" steps="279"/></proof>
                     </goal>
                     <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.0.0.1.1.0.0.5" expl="destruct premise" proved="true">
                     <proof prover="0"><result status="valid" time="0.078650" steps="60"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.1" proved="true">
               <transf name="remove" proved="true" arg1="Hinst">
                <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.1.0" proved="true">
                <transf name="assert" proved="true" arg1="(exists l. (--+-&gt;) dfsnum_parent root l w)">
                 <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.1.0.0" expl="asserted formula" proved="true">
                 <proof prover="0"><result status="valid" time="8.006665" steps="13346"/></proof>
                 </goal>
                 <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.1.0.1" proved="true">
                 <transf name="destruct_rec" proved="true" arg1="h">
                  <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.1.0.1.0" proved="true">
                  <transf name="assert" proved="true" arg1="(not mem2 idom_u l)">
                   <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.1.0.1.0.0" expl="asserted formula" proved="true">
                   <proof prover="0"><result status="valid" time="16.626029" steps="35689"/></proof>
                   </goal>
                   <goal name="theorem3.0.1.1.0.1.0.6.0.1.1.1.0.1.1.0.1.0.1" proved="true">
                   <proof prover="0"><result status="valid" time="0.486690" steps="849"/></proof>
                   <proof prover="2"><result status="valid" time="0.731693"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Corollary1" proved="true">
 <goal name="corollary1" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="corollary1.0" proved="true">
  <transf name="instantiate" proved="true" arg1="theorem3" arg2="dfsnum_parent, w, semi_w, u, semi_u">
   <goal name="corollary1.0.0" proved="true">
   <transf name="destruct_rec" proved="true" arg1="Hinst">
    <goal name="corollary1.0.0.0" expl="destruct premise" proved="true">
    <proof prover="0"><result status="valid" time="0.049984" steps="46"/></proof>
    </goal>
    <goal name="corollary1.0.0.1" expl="destruct premise" proved="true">
    <proof prover="0"><result status="valid" time="0.040557" steps="46"/></proof>
    </goal>
    <goal name="corollary1.0.0.2" expl="destruct premise" proved="true">
    <proof prover="0"><result status="valid" time="0.044854" steps="46"/></proof>
    </goal>
    <goal name="corollary1.0.0.3" expl="destruct premise" proved="true">
    <proof prover="0"><result status="valid" time="0.037967" steps="46"/></proof>
    </goal>
    <goal name="corollary1.0.0.4" expl="destruct premise" proved="true">
    <proof prover="0"><result status="valid" time="0.046582" steps="46"/></proof>
    </goal>
    <goal name="corollary1.0.0.5" expl="destruct premise" proved="true">
    <proof prover="0"><result status="valid" time="0.053124" steps="49"/></proof>
    </goal>
    <goal name="corollary1.0.0.6" proved="true">
    <transf name="assert" proved="true" arg1="(exists i_semi_w p_semi_w. mapsto semi_w (i_semi_w, p_semi_w) dfsnum_parent )">
     <goal name="corollary1.0.0.6.0" expl="asserted formula" proved="true">
     <proof prover="1"><result status="valid" time="0.429037" steps="46919"/></proof>
     </goal>
     <goal name="corollary1.0.0.6.1" proved="true">
     <transf name="destruct_rec" proved="true" arg1="h">
      <goal name="corollary1.0.0.6.1.0" proved="true">
      <transf name="eliminate_if" proved="true" >
       <goal name="corollary1.0.0.6.1.0.0" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="corollary1.0.0.6.1.0.0.0" proved="true">
        <transf name="instantiate" proved="true" arg1="theorem2" arg2="dfsnum_parent, w, semi_w, i_semi_w, p_semi_w">
         <goal name="corollary1.0.0.6.1.0.0.0.0" proved="true">
         <transf name="destruct_rec" proved="true" arg1="Hinst">
          <goal name="corollary1.0.0.6.1.0.0.0.0.0" expl="destruct premise" proved="true">
          <proof prover="0"><result status="valid" time="0.073112" steps="50"/></proof>
          </goal>
          <goal name="corollary1.0.0.6.1.0.0.0.0.1" expl="destruct premise" proved="true">
          <proof prover="0"><result status="valid" time="0.043090" steps="50"/></proof>
          </goal>
          <goal name="corollary1.0.0.6.1.0.0.0.0.2" expl="destruct premise" proved="true">
          <proof prover="0"><result status="valid" time="0.054267" steps="50"/></proof>
          </goal>
          <goal name="corollary1.0.0.6.1.0.0.0.0.3" expl="destruct premise" proved="true">
          <proof prover="0"><result status="valid" time="0.046551" steps="50"/></proof>
          </goal>
          <goal name="corollary1.0.0.6.1.0.0.0.0.4" expl="destruct premise" proved="true">
          <proof prover="0"><result status="valid" time="1.051868" steps="1905"/></proof>
          </goal>
          <goal name="corollary1.0.0.6.1.0.0.0.0.5" proved="true">
          <proof prover="0"><result status="valid" time="0.051273" steps="52"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="corollary1.0.0.6.1.0.0.1" proved="true">
        <transf name="eliminate_let" proved="true" >
         <goal name="corollary1.0.0.6.1.0.0.1.0" proved="true">
         <transf name="destruct_rec" proved="true" arg1="Hinst">
          <goal name="corollary1.0.0.6.1.0.0.1.0.0" expl="destruct premise" proved="true">
          <proof prover="0"><result status="valid" time="0.755509" steps="1892"/></proof>
          </goal>
          <goal name="corollary1.0.0.6.1.0.0.1.0.1" proved="true">
          <proof prover="1"><result status="valid" time="20.127344" steps="413821"/></proof>
          <proof prover="2"><result status="valid" time="1.024104"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Theorem4_B" proved="true">
 <goal name="theorem4_a" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="theorem4_a.0" proved="true">
  <transf name="unfold" proved="true" arg1="t4" arg2="in" arg3="H2">
   <goal name="theorem4_a.0.0" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="theorem4_a.0.0.0" proved="true">
    <transf name="destruct_rec" proved="true" arg1="H2">
     <goal name="theorem4_a.0.0.0.0" proved="true">
     <proof prover="1"><result status="valid" time="27.824299" steps="555853"/></proof>
     </goal>
     <goal name="theorem4_a.0.0.0.1" proved="true">
     <transf name="assert" proved="true" arg1="((++&gt;) dfsnum_parent x w)">
      <goal name="theorem4_a.0.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="unfold" proved="true" arg1="(+&gt;)" arg2="in" arg3="H5">
       <goal name="theorem4_a.0.0.0.1.0.0" expl="asserted formula" proved="true">
       <transf name="unfold" proved="true" arg1="(++&gt;)" arg2="in" arg3="H5">
        <goal name="theorem4_a.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
        <transf name="destruct_rec" proved="true" arg1="H5">
         <goal name="theorem4_a.0.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
         <transf name="inline_goal" proved="true" >
          <goal name="theorem4_a.0.0.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="theorem4_a.0.0.0.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
           <proof prover="0"><result status="valid" time="0.063331" steps="52"/></proof>
           </goal>
           <goal name="theorem4_a.0.0.0.1.0.0.0.0.0.1" expl="asserted formula" proved="true">
           <proof prover="0"><result status="valid" time="0.060806" steps="52"/></proof>
           </goal>
           <goal name="theorem4_a.0.0.0.1.0.0.0.0.0.2" expl="asserted formula" proved="true">
           <proof prover="0"><result status="valid" time="0.071216" steps="52"/></proof>
           </goal>
           <goal name="theorem4_a.0.0.0.1.0.0.0.0.0.3" expl="asserted formula" proved="true">
           <proof prover="0"><result status="valid" time="0.044816" steps="52"/></proof>
           </goal>
           <goal name="theorem4_a.0.0.0.1.0.0.0.0.0.4" expl="asserted formula" proved="true">
           <transf name="unfold" proved="true" arg1="(--*-&gt;)" arg2="in" arg3="H2">
            <goal name="theorem4_a.0.0.0.1.0.0.0.0.0.4.0" expl="asserted formula" proved="true">
            <transf name="destruct_rec" proved="true" arg1="H2">
             <goal name="theorem4_a.0.0.0.1.0.0.0.0.0.4.0.0" expl="asserted formula" proved="true">
             <transf name="subst" proved="true" arg1="v1">
              <goal name="theorem4_a.0.0.0.1.0.0.0.0.0.4.0.0.0" expl="asserted formula" proved="true">
              <transf name="exists" proved="true" arg1="(p ++ Cons u Nil)">
               <goal name="theorem4_a.0.0.0.1.0.0.0.0.0.4.0.0.0.0" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="theorem4_a.0.0.0.1.0.0.0.0.0.4.0.0.0.0.0" proved="true">
                <proof prover="0"><result status="valid" time="0.063433" steps="55"/></proof>
                </goal>
                <goal name="theorem4_a.0.0.0.1.0.0.0.0.0.4.0.0.0.0.1" proved="true">
                <proof prover="1"><result status="valid" time="0.685814" steps="56817"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="theorem4_a.0.0.0.1.0.0.0.0.0.4.0.1" expl="asserted formula" proved="true">
             <transf name="exists" proved="true" arg1="(p ++ Cons u l ++ Cons v1 Nil)">
              <goal name="theorem4_a.0.0.0.1.0.0.0.0.0.4.0.1.0" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="theorem4_a.0.0.0.1.0.0.0.0.0.4.0.1.0.0" proved="true">
               <proof prover="0"><result status="valid" time="0.087195" steps="208"/></proof>
               </goal>
               <goal name="theorem4_a.0.0.0.1.0.0.0.0.0.4.0.1.0.1" proved="true">
               <transf name="assert" proved="true" arg1="(mem2 x2 p \/ x2 = u \/ x2 = v1 \/ mem2 x2 l)">
                <goal name="theorem4_a.0.0.0.1.0.0.0.0.0.4.0.1.0.1.0" expl="asserted formula" proved="true">
                <proof prover="0"><result status="valid" time="0.541350" steps="1225"/></proof>
                </goal>
                <goal name="theorem4_a.0.0.0.1.0.0.0.0.0.4.0.1.0.1.1" proved="true">
                <transf name="destruct_rec" proved="true" arg1="h">
                 <goal name="theorem4_a.0.0.0.1.0.0.0.0.0.4.0.1.0.1.1.0" proved="true">
                 <proof prover="1"><result status="valid" time="0.269517" steps="39110"/></proof>
                 <proof prover="2"><result status="valid" time="1.095760"/></proof>
                 </goal>
                 <goal name="theorem4_a.0.0.0.1.0.0.0.0.0.4.0.1.0.1.1.1" proved="true">
                 <proof prover="0"><result status="valid" time="0.064582" steps="107"/></proof>
                 <proof prover="1"><result status="valid" time="0.265281" steps="39109"/></proof>
                 <proof prover="2"><result status="valid" time="0.415431"/></proof>
                 </goal>
                 <goal name="theorem4_a.0.0.0.1.0.0.0.0.0.4.0.1.0.1.1.2" proved="true">
                 <proof prover="1"><result status="valid" time="0.639897" steps="56394"/></proof>
                 </goal>
                 <goal name="theorem4_a.0.0.0.1.0.0.0.0.0.4.0.1.0.1.1.3" proved="true">
                 <proof prover="1"><result status="valid" time="0.367534" steps="39262"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="theorem4_a.0.0.0.1.1" proved="true">
      <proof prover="1"><result status="valid" time="0.465249" steps="46487"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="theorem4_b" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="theorem4_b.0" proved="true">
  <transf name="unfold" proved="true" arg1="(+&gt;)" arg2="in" arg3="H">
   <goal name="theorem4_b.0.0" proved="true">
   <transf name="unfold" proved="true" arg1="(++&gt;)" arg2="in" arg3="H">
    <goal name="theorem4_b.0.0.0" proved="true">
    <transf name="destruct_rec" proved="true" arg1="H">
     <goal name="theorem4_b.0.0.0.0" proved="true">
     <transf name="destruct_term" proved="true" arg1="p">
      <goal name="theorem4_b.0.0.0.0.0" proved="true">
      <transf name="assert" proved="true" arg1="(exists pz p0. p = p0 ++ Cons pz Nil)">
       <goal name="theorem4_b.0.0.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="0"><result status="valid" time="0.233793" steps="542"/></proof>
       </goal>
       <goal name="theorem4_b.0.0.0.0.0.1" proved="true">
       <transf name="remove" proved="true" arg1="h1">
        <goal name="theorem4_b.0.0.0.0.0.1.0" proved="true">
        <transf name="destruct_rec" proved="true" arg1="h">
         <goal name="theorem4_b.0.0.0.0.0.1.0.0" proved="true">
         <transf name="instantiate" proved="true" arg1="hhh" arg2="p, (fun b -&gt; (--*-&gt;) dfsnum_parent b pz)">
          <goal name="theorem4_b.0.0.0.0.0.1.0.0.0" proved="true">
          <transf name="destruct_rec" proved="true" arg1="Hinst">
           <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.0" expl="destruct premise" proved="true">
           <transf name="exists" proved="true" arg1="pz">
            <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.0.0" proved="true">
            <proof prover="0"><result status="valid" time="0.128609" steps="406"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1" proved="true">
           <transf name="assert" proved="true" arg1="(forall b. mem2 b l1 -&gt; (dfsnum @ b) &gt; (dfsnum @ y))">
            <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.0" expl="asserted formula" proved="true">
            <transf name="assert" proved="true" arg1="((forall b. mem2 b l1 -&gt; (dfsnum @ b) &gt; (dfsnum @ y)) \/ (exists b. mem2 b l1 /\ (dfsnum @ b) &lt;= (dfsnum @ y)))">
             <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.0.0" expl="asserted formula" proved="true">
             <proof prover="0"><result status="valid" time="0.083726" steps="61"/></proof>
             </goal>
             <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.0.1" expl="asserted formula" proved="true">
             <transf name="destruct_rec" proved="true" arg1="h1">
              <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.0.1.0" expl="asserted formula" proved="true">
              <proof prover="0"><result status="valid" time="0.057813" steps="61"/></proof>
              </goal>
              <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.0.1.1" expl="asserted formula" proved="true">
              <transf name="assert" proved="true" arg1="(b = y \/ (dfsnum @ b) &lt; (dfsnum @ y))">
               <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.0.1.1.0" expl="asserted formula" proved="true">
               <proof prover="0" obsolete="true"><result status="timeout" time="120.000000" steps="268921"/></proof>
               <proof prover="1"><result status="valid" time="1.051025" steps="59585"/></proof>
               </goal>
               <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.0.1.1.1" expl="asserted formula" proved="true">
               <transf name="destruct_rec" proved="true" arg1="h1">
                <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.0.1.1.1.0" expl="asserted formula" proved="true">
                <proof prover="0"><result status="valid" time="0.095887" steps="255"/></proof>
                </goal>
                <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.0.1.1.1.1" expl="asserted formula" proved="true">
                <transf name="assert" proved="true" arg1="(exists lby l0. l0 ++ Cons b lby = l1)">
                 <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.0.1.1.1.1.0" expl="asserted formula" proved="true">
                 <proof prover="0"><result status="valid" time="0.093433" steps="204"/></proof>
                 </goal>
                 <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.0.1.1.1.1.1" expl="asserted formula" proved="true">
                 <transf name="destruct_rec" proved="true" arg1="h1">
                  <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.0.1.1.1.1.1.0" expl="asserted formula" proved="true">
                  <transf name="assert" proved="true" arg1="(exists ib pb. mapsto b (ib ,pb) dfsnum_parent )">
                   <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.0.1.1.1.1.1.0.0" expl="asserted formula" proved="true">
                   <proof prover="1"><result status="valid" time="0.916301" steps="60697"/></proof>
                   </goal>
                   <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.0.1.1.1.1.1.0.1" expl="asserted formula" proved="true">
                   <transf name="assert" proved="true" arg1="(exists iy py. mapsto y (iy ,py) dfsnum_parent )">
                    <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.0.1.1.1.1.1.0.1.0" expl="asserted formula" proved="true">
                    <proof prover="0" obsolete="true"><result status="timeout" time="120.000000" steps="237843"/></proof>
                    <proof prover="1"><result status="valid" time="0.977724" steps="61421"/></proof>
                    </goal>
                    <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.0.1.1.1.1.1.0.1.1" expl="asserted formula" proved="true">
                    <transf name="destruct_rec" proved="true" arg1="h1">
                     <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.0.1.1.1.1.1.0.1.1.0" expl="asserted formula" proved="true">
                     <transf name="destruct_rec" proved="true" arg1="h2">
                      <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.0.1.1.1.1.1.0.1.1.0.0" expl="asserted formula" proved="true">
                      <transf name="instantiate" proved="true" arg1="lemma1" arg2="dfsnum_parent, b, ib, pb, y, iy, py, lby">
                       <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.0.1.1.1.1.1.0.1.1.0.0.0" expl="asserted formula" proved="true">
                       <transf name="destruct_rec" proved="true" arg1="Hinst">
                        <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.0.1.1.1.1.1.0.1.1.0.0.0.0" expl="destruct premise" proved="true">
                        <proof prover="0"><result status="valid" time="0.049577" steps="60"/></proof>
                        </goal>
                        <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.0.1.1.1.1.1.0.1.1.0.0.0.1" expl="destruct premise" proved="true">
                        <proof prover="0"><result status="valid" time="0.037701" steps="60"/></proof>
                        </goal>
                        <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.0.1.1.1.1.1.0.1.1.0.0.0.2" expl="destruct premise" proved="true">
                        <proof prover="0"><result status="valid" time="0.044954" steps="60"/></proof>
                        </goal>
                        <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.0.1.1.1.1.1.0.1.1.0.0.0.3" expl="destruct premise" proved="true">
                        <proof prover="0"><result status="valid" time="0.045882" steps="60"/></proof>
                        </goal>
                        <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.0.1.1.1.1.1.0.1.1.0.0.0.4" expl="destruct premise" proved="true">
                        <proof prover="0"><result status="valid" time="0.484259" steps="1136"/></proof>
                        </goal>
                        <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.0.1.1.1.1.1.0.1.1.0.0.0.5" expl="destruct premise" proved="true">
                        <proof prover="0"><result status="valid" time="0.120404" steps="281"/></proof>
                        </goal>
                        <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.0.1.1.1.1.1.0.1.1.0.0.0.6" expl="asserted formula" proved="true">
                        <proof prover="0"><result status="valid" time="33.357462" steps="58532"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1" proved="true">
            <transf name="assert" proved="true" arg1="((++&gt;) dfsnum_parent semi_w y)">
             <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.0" expl="asserted formula" proved="true">
             <transf name="inline_goal" proved="true" >
              <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.0.0" expl="asserted formula" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.0.0.0" proved="true">
               <proof prover="0"><result status="valid" time="0.050133" steps="48"/></proof>
               </goal>
               <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.0.0.1" proved="true">
               <proof prover="0"><result status="valid" time="0.042889" steps="48"/></proof>
               </goal>
               <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.0.0.2" proved="true">
               <transf name="case" proved="true" arg1="(y = root)">
                <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.0.0.2.0" expl="true case" proved="true">
                <transf name="subst" proved="true" arg1="y">
                 <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.0.0.2.0.0" expl="true case" proved="true">
                 <transf name="destruct_rec" proved="true" arg1="H1">
                  <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.0.0.2.0.0.0" expl="true case" proved="true">
                  <transf name="instantiate" proved="true" arg1="H1" arg2="root">
                   <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.0.0.2.0.0.0.0" expl="true case" proved="true">
                   <proof prover="0"><result status="valid" time="0.540859" steps="1557"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.0.0.2.1" expl="false case" proved="true">
                <proof prover="0"><result status="valid" time="0.043715" steps="50"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.0.0.3" proved="true">
               <proof prover="0"><result status="valid" time="0.083931" steps="48"/></proof>
               </goal>
               <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.0.0.4" proved="true">
               <proof prover="0"><result status="valid" time="20.450329" steps="45615"/></proof>
               <transf name="exists" proved="true" arg1="l1">
                <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.0.0.4.0" proved="true">
                <proof prover="0"><result status="valid" time="0.097283" steps="250"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.1" proved="true">
             <transf name="instantiate" proved="true" arg1="min_semi_exists" arg2="dfsnum_parent, y">
              <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.1.0" proved="true">
              <transf name="destruct_rec" proved="true" arg1="Hinst">
               <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.1.0.0" expl="destruct premise" proved="true">
               <proof prover="0"><result status="valid" time="0.040776" steps="50"/></proof>
               </goal>
               <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.1.0.1" expl="destruct premise" proved="true">
               <proof prover="0"><result status="valid" time="0.080746" steps="50"/></proof>
               </goal>
               <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.1.0.2" expl="destruct premise" proved="true">
               <proof prover="0"><result status="valid" time="0.501695" steps="1229"/></proof>
               </goal>
               <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.1.0.3" expl="destruct premise" proved="true">
               <proof prover="0"><result status="valid" time="0.058353" steps="57"/></proof>
               </goal>
               <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.1.0.4" proved="true">
               <transf name="assert" proved="true" arg1="((dfsnum @ semi_w) &gt;= (dfsnum @ semi_x))">
                <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.1.0.4.0" expl="asserted formula" proved="true">
                <proof prover="1"><result status="valid" time="0.451410" steps="54203"/></proof>
                </goal>
                <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.1.0.4.1" proved="true">
                <transf name="assert" proved="true" arg1="(t4 dfsnum_parent semi_x w)">
                 <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.1.0.4.1.0" expl="asserted formula" proved="true">
                 <transf name="inline_goal" proved="true" >
                  <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.1.0.4.1.0.0" expl="asserted formula" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.1.0.4.1.0.0.0" proved="true">
                   <proof prover="0"><result status="valid" time="0.090932" steps="205"/></proof>
                   </goal>
                   <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.1.0.4.1.0.0.1" proved="true">
                   <proof prover="0"><result status="valid" time="0.070795" steps="61"/></proof>
                   </goal>
                   <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.1.0.4.1.0.0.2" proved="true">
                   <proof prover="2"><result status="valid" time="3.268944"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="theorem4_b.0.0.0.0.0.1.0.0.0.1.1.1.0.4.1.1" proved="true">
                 <proof prover="0"><result status="valid" time="0.057744" steps="101"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="theorem4_b.0.0.0.0.1" proved="true">
      <transf name="assert" proved="true" arg1="((dfsnum @ semi_w) &lt; (dfsnum @ w))">
       <goal name="theorem4_b.0.0.0.0.1.0" expl="asserted formula" proved="true">
       <proof prover="1"><result status="valid" time="9.505816" steps="317023"/></proof>
       </goal>
       <goal name="theorem4_b.0.0.0.0.1.1" proved="true">
       <transf name="assert" proved="true" arg1="(edge semi_w w)">
        <goal name="theorem4_b.0.0.0.0.1.1.0" expl="asserted formula" proved="true">
        <proof prover="0"><result status="valid" time="0.054161" steps="49"/></proof>
        <proof prover="1"><result status="valid" time="0.114912" steps="31893"/></proof>
        <proof prover="2"><result status="valid" time="0.348729"/></proof>
        </goal>
        <goal name="theorem4_b.0.0.0.0.1.1.1" proved="true">
        <proof prover="0"><result status="valid" time="0.344089" steps="847"/></proof>
        <proof prover="1"><result status="valid" time="0.384774" steps="40000"/></proof>
        <proof prover="2"><result status="valid" time="27.621315"/></proof>
        <transf name="assert" proved="true" arg1="(t4 dfsnum_parent semi_w w)">
         <goal name="theorem4_b.0.0.0.0.1.1.1.0" expl="asserted formula" proved="true">
         <proof prover="0"><result status="valid" time="0.114523" steps="395"/></proof>
         </goal>
         <goal name="theorem4_b.0.0.0.0.1.1.1.1" proved="true">
         <proof prover="0"><result status="valid" time="0.051434" steps="53"/></proof>
         <proof prover="1"><result status="valid" time="0.311762" steps="34596"/></proof>
         <proof prover="2"><result status="valid" time="0.377479"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Theorem4" proved="true">
 <goal name="theorem4" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="theorem4.0" proved="true">
  <transf name="instantiate" proved="true" arg1="min_semi_exists" arg2="dfsnum_parent, w">
   <goal name="theorem4.0.0" proved="true">
   <transf name="destruct_rec" proved="true" arg1="Hinst">
    <goal name="theorem4.0.0.0" expl="destruct premise" proved="true">
    <proof prover="0"><result status="valid" time="0.045542" steps="38"/></proof>
    </goal>
    <goal name="theorem4.0.0.1" expl="destruct premise" proved="true">
    <proof prover="0"><result status="valid" time="0.070106" steps="38"/></proof>
    </goal>
    <goal name="theorem4.0.0.2" expl="destruct premise" proved="true">
    <proof prover="0"><result status="valid" time="0.059321" steps="41"/></proof>
    </goal>
    <goal name="theorem4.0.0.3" expl="destruct premise" proved="true">
    <proof prover="0"><result status="valid" time="0.047405" steps="38"/></proof>
    </goal>
    <goal name="theorem4.0.0.4" proved="true">
    <proof prover="1"><result status="valid" time="0.499939" steps="42585"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cucu" proved="true">
 <goal name="cucu" proved="true">
 <proof prover="0"><result status="valid" time="0.588740" steps="1378"/></proof>
 </goal>
</theory>
<theory name="DFS" proved="true">
 <goal name="dfs&#39;vc" expl="VC for dfs" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="dfs&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.030083" steps="22"/></proof>
  </goal>
  <goal name="dfs&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.048854" steps="40"/></proof>
  </goal>
  <goal name="dfs&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.035554" steps="34"/></proof>
  </goal>
  <goal name="dfs&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.036414" steps="30"/></proof>
  </goal>
  <goal name="dfs&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.030692" steps="30"/></proof>
  </goal>
  <goal name="dfs&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.059840" steps="161"/></proof>
  </goal>
  <goal name="dfs&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.069200" steps="49"/></proof>
  </goal>
  <goal name="dfs&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.039883" steps="46"/></proof>
  </goal>
  <goal name="dfs&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.026443" steps="32"/></proof>
  </goal>
  <goal name="dfs&#39;vc.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.059762" steps="188"/></proof>
  </goal>
  <goal name="dfs&#39;vc.10" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.372814" steps="852"/></proof>
  </goal>
  <goal name="dfs&#39;vc.11" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.690074" steps="1424"/></proof>
  </goal>
  <goal name="dfs&#39;vc.12" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.118219" steps="526"/></proof>
  </goal>
  <goal name="dfs&#39;vc.13" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.772177" steps="1958"/></proof>
  </goal>
  <goal name="dfs&#39;vc.14" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.077241" steps="166"/></proof>
  </goal>
  <goal name="dfs&#39;vc.15" expl="assertion" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="dfs&#39;vc.15.0" expl="assertion" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="dfs&#39;vc.15.0.0" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.055915" steps="46"/></proof>
    </goal>
    <goal name="dfs&#39;vc.15.0.1" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.614859" steps="1581"/></proof>
    </goal>
    <goal name="dfs&#39;vc.15.0.2" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="2.197890" steps="6619"/></proof>
    </goal>
    <goal name="dfs&#39;vc.15.0.3" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.752819" steps="1954"/></proof>
    </goal>
    <goal name="dfs&#39;vc.15.0.4" expl="assertion" proved="true">
    <proof prover="1"><result status="valid" time="70.873843" steps="1156087"/></proof>
    </goal>
    <goal name="dfs&#39;vc.15.0.5" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="1.952179" steps="5090"/></proof>
    </goal>
    <goal name="dfs&#39;vc.15.0.6" expl="assertion" proved="true">
    <transf name="case" proved="true" arg1="(i = sn -1)">
     <goal name="dfs&#39;vc.15.0.6.0" expl="true case (assertion)" proved="true">
     <proof prover="0"><result status="valid" time="2.188633" steps="5729"/></proof>
     </goal>
     <goal name="dfs&#39;vc.15.0.6.1" expl="false case (assertion)" proved="true">
     <transf name="assert" proved="true" arg1="(exists x:vertex, p:vertex. mapsto x (i, p) dfsnum_parent)">
      <goal name="dfs&#39;vc.15.0.6.1.0" expl="asserted formula" proved="true">
      <transf name="unfold" proved="true" arg1="wf_dfsnum_parent" arg2="in" arg3="Requires7">
       <goal name="dfs&#39;vc.15.0.6.1.0.0" expl="asserted formula" proved="true">
       <transf name="destruct_rec" proved="true" arg1="Requires7">
        <goal name="dfs&#39;vc.15.0.6.1.0.0.0" expl="asserted formula" proved="true">
        <transf name="eliminate_let" proved="true" >
         <goal name="dfs&#39;vc.15.0.6.1.0.0.0.0" expl="asserted formula" proved="true">
         <transf name="destruct_rec" proved="true" arg1="Requires7">
          <goal name="dfs&#39;vc.15.0.6.1.0.0.0.0.0" expl="asserted formula" proved="true">
          <transf name="apply" proved="true" arg1="Requires8">
           <goal name="dfs&#39;vc.15.0.6.1.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="0.124784" steps="194"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="dfs&#39;vc.15.0.6.1.1" expl="false case (assertion)" proved="true">
      <proof prover="0"><result status="valid" time="0.132687" steps="190"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="dfs&#39;vc.15.0.7" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.377507" steps="1327"/></proof>
    </goal>
    <goal name="dfs&#39;vc.15.0.8" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.509637" steps="1425"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="dfs&#39;vc.16" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.152466" steps="452"/></proof>
  </goal>
  <goal name="dfs&#39;vc.17" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.089874" steps="314"/></proof>
  </goal>
  <goal name="dfs&#39;vc.18" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.055113" steps="62"/></proof>
  </goal>
  <goal name="dfs&#39;vc.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.057473" steps="58"/></proof>
  </goal>
  <goal name="dfs&#39;vc.20" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.029556" steps="36"/></proof>
  </goal>
  <goal name="dfs&#39;vc.21" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.557424" steps="1570"/></proof>
  </goal>
  <goal name="dfs&#39;vc.22" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.037222" steps="60"/></proof>
  </goal>
  <goal name="dfs&#39;vc.23" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.046673" steps="56"/></proof>
  </goal>
  <goal name="dfs&#39;vc.24" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.055769" steps="58"/></proof>
  </goal>
  <goal name="dfs&#39;vc.25" expl="precondition" proved="true">
  <transf name="case" proved="true" arg1="(w = z)">
   <goal name="dfs&#39;vc.25.0" expl="true case (precondition)" proved="true">
   <proof prover="0"><result status="valid" time="75.312370" steps="282791"/></proof>
   </goal>
   <goal name="dfs&#39;vc.25.1" expl="false case (precondition)" proved="true">
   <transf name="assert" proved="true" arg1="(mapsto v (iv, pv) dfsnum_parent /\ mapsto w (iw, pw) dfsnum_parent)">
    <goal name="dfs&#39;vc.25.1.0" expl="asserted formula" proved="true">
    <proof prover="0"><result status="valid" time="0.545080" steps="1231"/></proof>
    </goal>
    <goal name="dfs&#39;vc.25.1.1" expl="false case (precondition)" proved="true">
    <proof prover="0"><result status="valid" time="1.485849" steps="2654"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="dfs&#39;vc.26" expl="precondition" proved="true">
  <transf name="case" proved="true" arg1="(b = z)">
   <goal name="dfs&#39;vc.26.0" expl="true case (precondition)" proved="true">
   <proof prover="0"><result status="valid" time="0.636421" steps="1715"/></proof>
   </goal>
   <goal name="dfs&#39;vc.26.1" expl="false case (precondition)" proved="true">
   <transf name="assert" proved="true" arg1="(mapsto b (ib, pb) dfsnum_parent /\ mapsto a (ia, pa) dfsnum_parent )">
    <goal name="dfs&#39;vc.26.1.0" expl="asserted formula" proved="true">
    <proof prover="0"><result status="valid" time="0.720638" steps="1982"/></proof>
    </goal>
    <goal name="dfs&#39;vc.26.1.1" expl="false case (precondition)" proved="true">
    <proof prover="0"><result status="valid" time="25.714290" steps="65880"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="dfs&#39;vc.27" expl="precondition" proved="true">
  <transf name="case" proved="true" arg1="(c = z)">
   <goal name="dfs&#39;vc.27.0" expl="true case (precondition)" proved="true">
   <proof prover="0"><result status="valid" time="1.951539" steps="4985"/></proof>
   </goal>
   <goal name="dfs&#39;vc.27.1" expl="false case (precondition)" proved="true">
   <transf name="assert" proved="true" arg1="(mapsto c (ic, pc) dfsnum_parent /\ mapsto a (ia, pa) dfsnum_parent /\ mapsto b (ib, pb) dfsnum_parent)">
    <goal name="dfs&#39;vc.27.1.0" expl="asserted formula" proved="true">
    <proof prover="0"><result status="valid" time="0.900216" steps="2190"/></proof>
    </goal>
    <goal name="dfs&#39;vc.27.1.1" expl="false case (precondition)" proved="true">
    <transf name="assert" proved="true" arg1="((--+-&gt;) dfsnum_parent a lac c)">
     <goal name="dfs&#39;vc.27.1.1.0" expl="asserted formula" proved="true">
     <proof prover="2"><result status="valid" time="28.814794"/></proof>
     </goal>
     <goal name="dfs&#39;vc.27.1.1.1" expl="false case (precondition)" proved="true">
     <proof prover="0"><result status="valid" time="11.987373" steps="20088"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="dfs&#39;vc.28" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.150124" steps="794"/></proof>
  </goal>
  <goal name="dfs&#39;vc.29" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.079819" steps="344"/></proof>
  </goal>
  <goal name="dfs&#39;vc.30" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.056741" steps="44"/></proof>
  </goal>
  <goal name="dfs&#39;vc.31" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.310373" steps="746"/></proof>
  </goal>
  <goal name="dfs&#39;vc.32" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.047075" steps="53"/></proof>
  </goal>
  <goal name="dfs&#39;vc.33" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.532704" steps="1312"/></proof>
  </goal>
  <goal name="dfs&#39;vc.34" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="10.164614" steps="258922"/></proof>
  </goal>
  <goal name="dfs&#39;vc.35" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.045096" steps="62"/></proof>
  </goal>
  <goal name="dfs&#39;vc.36" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.105855" steps="564"/></proof>
  </goal>
  <goal name="dfs&#39;vc.37" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.365096" steps="780"/></proof>
  </goal>
  <goal name="dfs&#39;vc.38" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.487126" steps="4086"/></proof>
  </goal>
  <goal name="dfs&#39;vc.39" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.375256" steps="2541"/></proof>
  </goal>
  <goal name="dfs&#39;vc.40" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.331974" steps="937"/></proof>
  </goal>
  <goal name="dfs&#39;vc.41" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.106085" steps="341"/></proof>
  </goal>
  <goal name="dfs&#39;vc.42" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.270591" steps="776"/></proof>
  </goal>
  <goal name="dfs&#39;vc.43" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.368283" steps="1533"/></proof>
  </goal>
  <goal name="dfs&#39;vc.44" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="2.562942" steps="5680"/></proof>
  </goal>
  <goal name="dfs&#39;vc.45" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="4.108246" steps="8447"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="RevertMap" proved="true">
 <goal name="revert_map&#39;vc" expl="VC for revert_map" proved="true">
 <transf name="split_goal_full" proved="true" >
  <goal name="revert_map&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.045817" steps="141"/></proof>
  </goal>
  <goal name="revert_map&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.093925" steps="497"/></proof>
  </goal>
  <goal name="revert_map&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.053558" steps="232"/></proof>
  </goal>
  <goal name="revert_map&#39;vc.3" expl="postcondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="revert_map&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="revert_map&#39;vc.3.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.346670" steps="846"/></proof>
    </goal>
    <goal name="revert_map&#39;vc.3.0.1" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="(x = x3)">
     <goal name="revert_map&#39;vc.3.0.1.0" expl="true case (postcondition)" proved="true">
     <proof prover="0"><result status="valid" time="0.044647" steps="171"/></proof>
     </goal>
     <goal name="revert_map&#39;vc.3.0.1.1" expl="false case (postcondition)" proved="true">
     <transf name="instantiate" proved="true" arg1="Ensures" arg2="x, ix">
      <goal name="revert_map&#39;vc.3.0.1.1.0" expl="false case (postcondition)" proved="true">
      <proof prover="0"><result status="valid" time="0.268817" steps="928"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Jiting" proved="true">
 <goal name="ancestor_with_lowest_semi&#39;vc" expl="VC for ancestor_with_lowest_semi" proved="true">
 <transf name="split_goal_full" proved="true" >
  <goal name="ancestor_with_lowest_semi&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.398679" steps="46251"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.061089" steps="74"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.848236" steps="3868"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.490162" steps="1671"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.429803" steps="92008"/></proof>
  <transf name="introduce_premises" proved="true" >
   <goal name="ancestor_with_lowest_semi&#39;vc.4.0" expl="precondition" proved="true">
   <transf name="case" proved="true" arg1="(x = u)">
    <goal name="ancestor_with_lowest_semi&#39;vc.4.0.0" expl="true case (precondition)" proved="true">
    <proof prover="0"><result status="valid" time="0.041083" steps="82"/></proof>
    <proof prover="1"><result status="valid" time="0.077737" steps="30943"/></proof>
    <proof prover="2"><result status="valid" time="0.046937"/></proof>
    <transf name="subst_all" proved="true" >
     <goal name="ancestor_with_lowest_semi&#39;vc.4.0.0.0" expl="true case (precondition)" proved="true">
     <transf name="destruct_rec" proved="true" arg1="Requires4">
      <goal name="ancestor_with_lowest_semi&#39;vc.4.0.0.0.0" expl="true case (precondition)" proved="true">
      <proof prover="0"><result status="valid" time="0.093784" steps="124"/></proof>
      </goal>
      <goal name="ancestor_with_lowest_semi&#39;vc.4.0.0.0.1" expl="true case (precondition)" proved="true">
      <proof prover="0"><result status="valid" time="0.065132" steps="124"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="ancestor_with_lowest_semi&#39;vc.4.0.1" expl="false case (precondition)" proved="true">
    <proof prover="1"><result status="valid" time="1.379389" steps="88481"/></proof>
    <transf name="instantiate" proved="true" arg1="Requires3" arg2="x">
     <goal name="ancestor_with_lowest_semi&#39;vc.4.0.1.0" expl="false case (precondition)" proved="true">
     <transf name="destruct_rec" proved="true" arg1="Hinst">
      <goal name="ancestor_with_lowest_semi&#39;vc.4.0.1.0.0" expl="destruct premise" proved="true">
      <proof prover="1"><result status="valid" time="0.131109" steps="30871"/></proof>
      </goal>
      <goal name="ancestor_with_lowest_semi&#39;vc.4.0.1.0.1" expl="destruct premise" proved="true">
      <proof prover="1"><result status="valid" time="1.265630" steps="85868"/></proof>
      <transf name="instantiate" proved="true" arg1="mutual_parent" arg2="dfsnum_parent, u, x, v">
       <goal name="ancestor_with_lowest_semi&#39;vc.4.0.1.0.1.0" expl="destruct premise" proved="true">
       <transf name="destruct_rec" proved="true" arg1="Hinst">
        <goal name="ancestor_with_lowest_semi&#39;vc.4.0.1.0.1.0.0" expl="destruct premise" proved="true">
        <proof prover="1"><result status="valid" time="0.137619" steps="30873"/></proof>
        </goal>
        <goal name="ancestor_with_lowest_semi&#39;vc.4.0.1.0.1.0.1" expl="destruct premise" proved="true">
        <proof prover="1"><result status="valid" time="0.357703" steps="36962"/></proof>
        </goal>
        <goal name="ancestor_with_lowest_semi&#39;vc.4.0.1.0.1.0.2" expl="destruct premise" proved="true">
        <proof prover="1"><result status="valid" time="0.146724" steps="30873"/></proof>
        </goal>
        <goal name="ancestor_with_lowest_semi&#39;vc.4.0.1.0.1.0.3" expl="destruct premise" proved="true">
        <proof prover="1"><result status="valid" time="0.121450" steps="30881"/></proof>
        </goal>
        <goal name="ancestor_with_lowest_semi&#39;vc.4.0.1.0.1.0.4" expl="destruct premise" proved="true">
        <proof prover="1"><result status="valid" time="0.765158" steps="85884"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="ancestor_with_lowest_semi&#39;vc.4.0.1.0.2" expl="destruct premise" proved="true">
      <proof prover="1"><result status="valid" time="0.121880" steps="30873"/></proof>
      </goal>
      <goal name="ancestor_with_lowest_semi&#39;vc.4.0.1.0.3" expl="false case (precondition)" proved="true">
      <proof prover="1"><result status="valid" time="0.247090" steps="37514"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.164433" steps="34421"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.269309" steps="39939"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.225589" steps="41201"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.8" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.631276" steps="49892"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.047856" steps="80"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.10" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.813990" steps="53717"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.11" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.736922" steps="1832"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.12" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="ancestor_with_lowest_semi&#39;vc.12.0" expl="precondition" proved="true">
   <transf name="case" proved="true" arg1="(x = u)">
    <goal name="ancestor_with_lowest_semi&#39;vc.12.0.0" expl="true case (precondition)" proved="true">
    <proof prover="0"><result status="valid" time="0.056514" steps="82"/></proof>
    <proof prover="1"><result status="valid" time="0.110108" steps="30977"/></proof>
    <proof prover="2"><result status="valid" time="0.048209"/></proof>
    </goal>
    <goal name="ancestor_with_lowest_semi&#39;vc.12.0.1" expl="false case (precondition)" proved="true">
    <transf name="instantiate" proved="true" arg1="Requires3" arg2="x">
     <goal name="ancestor_with_lowest_semi&#39;vc.12.0.1.0" expl="false case (precondition)" proved="true">
     <transf name="destruct_rec" proved="true" arg1="Hinst">
      <goal name="ancestor_with_lowest_semi&#39;vc.12.0.1.0.0" expl="destruct premise" proved="true">
      <proof prover="1"><result status="valid" time="0.065712" steps="30889"/></proof>
      </goal>
      <goal name="ancestor_with_lowest_semi&#39;vc.12.0.1.0.1" expl="destruct premise" proved="true">
      <transf name="instantiate" proved="true" arg1="mutual_parent" arg2="dfsnum_parent, u, x, v">
       <goal name="ancestor_with_lowest_semi&#39;vc.12.0.1.0.1.0" expl="destruct premise" proved="true">
       <transf name="destruct_rec" proved="true" arg1="Hinst">
        <goal name="ancestor_with_lowest_semi&#39;vc.12.0.1.0.1.0.0" expl="destruct premise" proved="true">
        <proof prover="1"><result status="valid" time="0.080883" steps="30891"/></proof>
        </goal>
        <goal name="ancestor_with_lowest_semi&#39;vc.12.0.1.0.1.0.1" expl="destruct premise" proved="true">
        <proof prover="1"><result status="valid" time="0.405761" steps="38866"/></proof>
        </goal>
        <goal name="ancestor_with_lowest_semi&#39;vc.12.0.1.0.1.0.2" expl="destruct premise" proved="true">
        <proof prover="1"><result status="valid" time="0.074800" steps="30891"/></proof>
        </goal>
        <goal name="ancestor_with_lowest_semi&#39;vc.12.0.1.0.1.0.3" expl="destruct premise" proved="true">
        <proof prover="1"><result status="valid" time="0.107199" steps="30899"/></proof>
        </goal>
        <goal name="ancestor_with_lowest_semi&#39;vc.12.0.1.0.1.0.4" expl="destruct premise" proved="true">
        <proof prover="1"><result status="valid" time="2.034557" steps="110273"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="ancestor_with_lowest_semi&#39;vc.12.0.1.0.2" expl="destruct premise" proved="true">
      <proof prover="1"><result status="valid" time="0.077880" steps="30891"/></proof>
      </goal>
      <goal name="ancestor_with_lowest_semi&#39;vc.12.0.1.0.3" expl="false case (precondition)" proved="true">
      <proof prover="1"><result status="valid" time="0.241811" steps="37802"/></proof>
      <proof prover="2"><result status="valid" time="0.094944"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.13" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.074260" steps="105"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.14" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.298268" steps="563"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.433364" steps="42078"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.16" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.523468" steps="46232"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.120802" steps="32811"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.478182" steps="45075"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.682603" steps="1667"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.456889" steps="92106"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.21" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.132370" steps="34394"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.22" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.280841" steps="526"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.23" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.290799" steps="40157"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.24" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.623716" steps="49882"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.25" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.136669" steps="32729"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.26" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.841801" steps="53511"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.27" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.717736" steps="1828"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.28" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="ancestor_with_lowest_semi&#39;vc.28.0" expl="precondition" proved="true">
   <transf name="case" proved="true" arg1="(x = u)">
    <goal name="ancestor_with_lowest_semi&#39;vc.28.0.0" expl="true case (precondition)" proved="true">
    <proof prover="1"><result status="valid" time="0.360445" steps="37471"/></proof>
    </goal>
    <goal name="ancestor_with_lowest_semi&#39;vc.28.0.1" expl="false case (precondition)" proved="true">
    <transf name="instantiate" proved="true" arg1="Requires3" arg2="x">
     <goal name="ancestor_with_lowest_semi&#39;vc.28.0.1.0" expl="false case (precondition)" proved="true">
     <transf name="destruct_rec" proved="true" arg1="Hinst">
      <goal name="ancestor_with_lowest_semi&#39;vc.28.0.1.0.0" expl="destruct premise" proved="true">
      <proof prover="1"><result status="valid" time="0.077549" steps="30889"/></proof>
      </goal>
      <goal name="ancestor_with_lowest_semi&#39;vc.28.0.1.0.1" expl="destruct premise" proved="true">
      <transf name="instantiate" proved="true" arg1="mutual_parent" arg2="dfsnum_parent, u, x, v">
       <goal name="ancestor_with_lowest_semi&#39;vc.28.0.1.0.1.0" expl="destruct premise" proved="true">
       <transf name="destruct_rec" proved="true" arg1="Hinst">
        <goal name="ancestor_with_lowest_semi&#39;vc.28.0.1.0.1.0.0" expl="destruct premise" proved="true">
        <proof prover="1"><result status="valid" time="0.070921" steps="30891"/></proof>
        </goal>
        <goal name="ancestor_with_lowest_semi&#39;vc.28.0.1.0.1.0.1" expl="destruct premise" proved="true">
        <proof prover="1"><result status="valid" time="0.408464" steps="38820"/></proof>
        </goal>
        <goal name="ancestor_with_lowest_semi&#39;vc.28.0.1.0.1.0.2" expl="destruct premise" proved="true">
        <proof prover="1"><result status="valid" time="0.074067" steps="30891"/></proof>
        </goal>
        <goal name="ancestor_with_lowest_semi&#39;vc.28.0.1.0.1.0.3" expl="destruct premise" proved="true">
        <proof prover="1"><result status="valid" time="0.067732" steps="30899"/></proof>
        </goal>
        <goal name="ancestor_with_lowest_semi&#39;vc.28.0.1.0.1.0.4" expl="destruct premise" proved="true">
        <proof prover="1"><result status="valid" time="1.570989" steps="116231"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="ancestor_with_lowest_semi&#39;vc.28.0.1.0.2" expl="destruct premise" proved="true">
      <proof prover="1"><result status="valid" time="0.079094" steps="30891"/></proof>
      </goal>
      <goal name="ancestor_with_lowest_semi&#39;vc.28.0.1.0.3" expl="false case (precondition)" proved="true">
      <proof prover="1"><result status="valid" time="0.365522" steps="37782"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.29" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.137054" steps="105"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.30" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.284780" steps="40302"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.31" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.101949" steps="111"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.32" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.318613" steps="3287"/></proof>
  <proof prover="1"><result status="valid" time="0.630901" steps="45340"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.33" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.440612" steps="46586"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.34" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.366774" steps="42081"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.35" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="3.938569" steps="9816"/></proof>
  <proof prover="1"><result status="valid" time="0.523150" steps="44438"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.36" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.001098" steps="2631"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.37" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.093421" steps="111"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.38" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.624095" steps="48386"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.39" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ancestor_with_lowest_semi&#39;vc.39.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures">
    <goal name="ancestor_with_lowest_semi&#39;vc.39.0.0" expl="apply premises" proved="true">
    <transf name="instantiate" proved="true" arg1="mutual_parent" arg2="dfsnum_parent, u, x, v">
     <goal name="ancestor_with_lowest_semi&#39;vc.39.0.0.0" expl="apply premises" proved="true">
     <transf name="destruct_rec" proved="true" arg1="Hinst">
      <goal name="ancestor_with_lowest_semi&#39;vc.39.0.0.0.0" expl="destruct premise" proved="true">
      <proof prover="0"><result status="valid" time="0.040501" steps="72"/></proof>
      <proof prover="1"><result status="valid" time="0.069983" steps="28597"/></proof>
      <proof prover="2"><result status="valid" time="0.042520"/></proof>
      </goal>
      <goal name="ancestor_with_lowest_semi&#39;vc.39.0.0.0.1" expl="destruct premise" proved="true">
      <proof prover="1"><result status="valid" time="0.345598" steps="35756"/></proof>
      <proof prover="2"><result status="valid" time="0.226695"/></proof>
      </goal>
      <goal name="ancestor_with_lowest_semi&#39;vc.39.0.0.0.2" expl="destruct premise" proved="true">
      <proof prover="0"><result status="valid" time="0.067328" steps="72"/></proof>
      <proof prover="1"><result status="valid" time="0.101896" steps="28597"/></proof>
      <proof prover="2"><result status="valid" time="0.039936"/></proof>
      </goal>
      <goal name="ancestor_with_lowest_semi&#39;vc.39.0.0.0.3" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="0.047725" steps="74"/></proof>
      <proof prover="1"><result status="valid" time="0.074835" steps="28605"/></proof>
      <proof prover="2"><result status="valid" time="0.045334"/></proof>
      </goal>
      <goal name="ancestor_with_lowest_semi&#39;vc.39.0.0.0.4" expl="apply premises" proved="true">
      <transf name="instantiate" proved="true" arg1="mutual_parent" arg2="dfsnum_parent, pu, x, v">
       <goal name="ancestor_with_lowest_semi&#39;vc.39.0.0.0.4.0" expl="apply premises" proved="true">
       <transf name="destruct_rec" proved="true" arg1="Hinst">
        <goal name="ancestor_with_lowest_semi&#39;vc.39.0.0.0.4.0.0" expl="destruct premise" proved="true">
        <proof prover="0"><result status="valid" time="0.047123" steps="74"/></proof>
        <proof prover="1"><result status="valid" time="0.075663" steps="28605"/></proof>
        <proof prover="2"><result status="valid" time="0.041514"/></proof>
        </goal>
        <goal name="ancestor_with_lowest_semi&#39;vc.39.0.0.0.4.0.1" expl="destruct premise" proved="true">
        <proof prover="1"><result status="valid" time="5.987415" steps="216894"/></proof>
        <proof prover="2"><result status="valid" time="37.483829"/></proof>
        </goal>
        <goal name="ancestor_with_lowest_semi&#39;vc.39.0.0.0.4.0.2" expl="destruct premise" proved="true">
        <proof prover="0"><result status="valid" time="0.081915" steps="74"/></proof>
        <proof prover="1"><result status="valid" time="0.079411" steps="28605"/></proof>
        <proof prover="2"><result status="valid" time="0.041842"/></proof>
        </goal>
        <goal name="ancestor_with_lowest_semi&#39;vc.39.0.0.0.4.0.3" expl="apply premises" proved="true">
        <transf name="case" proved="true" arg1="(x = pu)">
         <goal name="ancestor_with_lowest_semi&#39;vc.39.0.0.0.4.0.3.0" expl="apply premises (true case)" proved="true">
         <proof prover="0"><result status="valid" time="0.098118" steps="115"/></proof>
         <proof prover="1"><result status="valid" time="0.318570" steps="34717"/></proof>
         <proof prover="2"><result status="valid" time="34.106170"/></proof>
         </goal>
         <goal name="ancestor_with_lowest_semi&#39;vc.39.0.0.0.4.0.3.1" expl="apply premises (false case)" proved="true">
         <transf name="case" proved="true" arg1="(x = u)">
          <goal name="ancestor_with_lowest_semi&#39;vc.39.0.0.0.4.0.3.1.0" expl="apply premises (false case. true case)" proved="true">
          <proof prover="0"><result status="valid" time="0.040332" steps="80"/></proof>
          <proof prover="1"><result status="valid" time="0.162497" steps="29421"/></proof>
          <proof prover="2"><result status="valid" time="0.073851"/></proof>
          </goal>
          <goal name="ancestor_with_lowest_semi&#39;vc.39.0.0.0.4.0.3.1.1" expl="apply premises (false case)" proved="true">
          <transf name="assert" proved="true" arg1="((--+-&gt;) dfsnum_parent pu Nil u)">
           <goal name="ancestor_with_lowest_semi&#39;vc.39.0.0.0.4.0.3.1.1.0" expl="asserted formula" proved="true">
           <proof prover="0"><result status="valid" time="0.241303" steps="338"/></proof>
           <proof prover="1"><result status="valid" time="0.495513" steps="40576"/></proof>
           <proof prover="2"><result status="valid" time="42.114264"/></proof>
           </goal>
           <goal name="ancestor_with_lowest_semi&#39;vc.39.0.0.0.4.0.3.1.1.1" expl="apply premises (false case)" proved="true">
           <transf name="assert" proved="true" arg1="(exists l1 l2. (--+-&gt;) dfsnum_parent pu (l1 ++ Cons x l2) u)">
            <goal name="ancestor_with_lowest_semi&#39;vc.39.0.0.0.4.0.3.1.1.1.0" expl="asserted formula" proved="true">
            <proof prover="2"><result status="valid" time="1.057244"/></proof>
            </goal>
            <goal name="ancestor_with_lowest_semi&#39;vc.39.0.0.0.4.0.3.1.1.1.1" expl="apply premises (false case)" proved="true">
            <proof prover="0"><result status="valid" time="0.276070" steps="433"/></proof>
            <proof prover="1"><result status="valid" time="0.674772" steps="51209"/></proof>
            <proof prover="2"><result status="valid" time="4.699589"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="ancestor_with_lowest_semi&#39;vc.39.0.0.0.4.0.4" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="0.589108" steps="49187"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="ancestor_with_lowest_semi&#39;vc.39.0.1" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="0.043627" steps="72"/></proof>
    <proof prover="1"><result status="valid" time="0.065094" steps="28597"/></proof>
    <proof prover="2"><result status="valid" time="0.042347"/></proof>
    </goal>
    <goal name="ancestor_with_lowest_semi&#39;vc.39.0.2" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="0.050169" steps="85"/></proof>
    <proof prover="1"><result status="valid" time="0.095885" steps="29326"/></proof>
    <proof prover="2"><result status="valid" time="0.045884"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.40" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="10.390627" steps="23859"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.41" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.576578" steps="45844"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.42" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.895766" steps="2560"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.43" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.121608" steps="103"/></proof>
  <proof prover="1"><result status="valid" time="0.355430" steps="42055"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.44" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.725619" steps="59526"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.45" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.047045" steps="2615"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.46" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.126968" steps="110"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.47" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.549809" steps="48447"/></proof>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.48" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ancestor_with_lowest_semi&#39;vc.48.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures">
    <goal name="ancestor_with_lowest_semi&#39;vc.48.0.0" expl="apply premises" proved="true">
    <transf name="instantiate" proved="true" arg1="mutual_parent" arg2="dfsnum_parent, u, x, v">
     <goal name="ancestor_with_lowest_semi&#39;vc.48.0.0.0" expl="apply premises" proved="true">
     <transf name="destruct_rec" proved="true" arg1="Hinst">
      <goal name="ancestor_with_lowest_semi&#39;vc.48.0.0.0.0" expl="destruct premise" proved="true">
      <proof prover="0"><result status="valid" time="0.050826" steps="72"/></proof>
      <proof prover="1"><result status="valid" time="0.108147" steps="28597"/></proof>
      <proof prover="2"><result status="valid" time="0.049322"/></proof>
      </goal>
      <goal name="ancestor_with_lowest_semi&#39;vc.48.0.0.0.1" expl="destruct premise" proved="true">
      <proof prover="1"><result status="valid" time="0.375810" steps="35631"/></proof>
      <proof prover="2"><result status="valid" time="0.157629"/></proof>
      </goal>
      <goal name="ancestor_with_lowest_semi&#39;vc.48.0.0.0.2" expl="destruct premise" proved="true">
      <proof prover="0"><result status="valid" time="0.087493" steps="72"/></proof>
      <proof prover="1"><result status="valid" time="0.078103" steps="28597"/></proof>
      <proof prover="2"><result status="valid" time="0.069611"/></proof>
      </goal>
      <goal name="ancestor_with_lowest_semi&#39;vc.48.0.0.0.3" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="0.044425" steps="74"/></proof>
      <proof prover="1"><result status="valid" time="0.136382" steps="28605"/></proof>
      <proof prover="2"><result status="valid" time="0.070956"/></proof>
      </goal>
      <goal name="ancestor_with_lowest_semi&#39;vc.48.0.0.0.4" expl="apply premises" proved="true">
      <transf name="instantiate" proved="true" arg1="mutual_parent" arg2="dfsnum_parent, pu, x, v">
       <goal name="ancestor_with_lowest_semi&#39;vc.48.0.0.0.4.0" expl="apply premises" proved="true">
       <transf name="destruct_rec" proved="true" arg1="Hinst">
        <goal name="ancestor_with_lowest_semi&#39;vc.48.0.0.0.4.0.0" expl="destruct premise" proved="true">
        <proof prover="0"><result status="valid" time="0.053206" steps="74"/></proof>
        <proof prover="1"><result status="valid" time="0.128512" steps="28605"/></proof>
        <proof prover="2"><result status="valid" time="0.044787"/></proof>
        </goal>
        <goal name="ancestor_with_lowest_semi&#39;vc.48.0.0.0.4.0.1" expl="destruct premise" proved="true">
        <proof prover="1"><result status="valid" time="4.649320" steps="199459"/></proof>
        <proof prover="2"><result status="valid" time="41.226290"/></proof>
        </goal>
        <goal name="ancestor_with_lowest_semi&#39;vc.48.0.0.0.4.0.2" expl="destruct premise" proved="true">
        <proof prover="0"><result status="valid" time="0.092339" steps="74"/></proof>
        <proof prover="1"><result status="valid" time="0.120327" steps="28605"/></proof>
        <proof prover="2"><result status="valid" time="0.059636"/></proof>
        </goal>
        <goal name="ancestor_with_lowest_semi&#39;vc.48.0.0.0.4.0.3" expl="apply premises" proved="true">
        <transf name="case" proved="true" arg1="(x = pu)">
         <goal name="ancestor_with_lowest_semi&#39;vc.48.0.0.0.4.0.3.0" expl="apply premises (true case)" proved="true">
         <proof prover="0"><result status="valid" time="0.123226" steps="115"/></proof>
         <proof prover="1"><result status="valid" time="0.309359" steps="34697"/></proof>
         <proof prover="2"><result status="valid" time="37.126237"/></proof>
         </goal>
         <goal name="ancestor_with_lowest_semi&#39;vc.48.0.0.0.4.0.3.1" expl="apply premises (false case)" proved="true">
         <transf name="case" proved="true" arg1="(x = u)">
          <goal name="ancestor_with_lowest_semi&#39;vc.48.0.0.0.4.0.3.1.0" expl="apply premises (false case. true case)" proved="true">
          <proof prover="0"><result status="valid" time="0.088666" steps="80"/></proof>
          <proof prover="1"><result status="valid" time="0.197871" steps="29419"/></proof>
          <proof prover="2"><result status="valid" time="0.067031"/></proof>
          </goal>
          <goal name="ancestor_with_lowest_semi&#39;vc.48.0.0.0.4.0.3.1.1" expl="apply premises (false case)" proved="true">
          <transf name="assert" proved="true" arg1="((--+-&gt;) dfsnum_parent pu Nil u)">
           <goal name="ancestor_with_lowest_semi&#39;vc.48.0.0.0.4.0.3.1.1.0" expl="asserted formula" proved="true">
           <proof prover="0"><result status="valid" time="0.193604" steps="322"/></proof>
           <proof prover="1"><result status="valid" time="0.464793" steps="40525"/></proof>
           <proof prover="2"><result status="valid" time="39.615501"/></proof>
           </goal>
           <goal name="ancestor_with_lowest_semi&#39;vc.48.0.0.0.4.0.3.1.1.1" expl="apply premises (false case)" proved="true">
           <transf name="assert" proved="true" arg1="(exists l1 l2. (--+-&gt;) dfsnum_parent pu (l1 ++ Cons x l2) u)">
            <goal name="ancestor_with_lowest_semi&#39;vc.48.0.0.0.4.0.3.1.1.1.0" expl="asserted formula" proved="true">
            <proof prover="2"><result status="valid" time="1.169688"/></proof>
            </goal>
            <goal name="ancestor_with_lowest_semi&#39;vc.48.0.0.0.4.0.3.1.1.1.1" expl="apply premises (false case)" proved="true">
            <proof prover="0"><result status="valid" time="0.265467" steps="418"/></proof>
            <proof prover="1"><result status="valid" time="0.638251" steps="51359"/></proof>
            <proof prover="2"><result status="valid" time="1.579878"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="ancestor_with_lowest_semi&#39;vc.48.0.0.0.4.0.4" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="0.564739" steps="49353"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="ancestor_with_lowest_semi&#39;vc.48.0.1" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="0.093891" steps="72"/></proof>
    <proof prover="1"><result status="valid" time="0.101608" steps="28597"/></proof>
    <proof prover="2"><result status="valid" time="0.045012"/></proof>
    </goal>
    <goal name="ancestor_with_lowest_semi&#39;vc.48.0.2" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="0.100242" steps="85"/></proof>
    <proof prover="1"><result status="valid" time="0.120654" steps="29298"/></proof>
    <proof prover="2"><result status="valid" time="0.072342"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ancestor_with_lowest_semi&#39;vc.49" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.113291" steps="96"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="preds_with_lowest_dfsnum&#39;vc" expl="VC for preds_with_lowest_dfsnum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="preds_with_lowest_dfsnum&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.093014" steps="34619"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.221312" steps="39644"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.131744" steps="35432"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.101153" steps="35445"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.097459" steps="67"/></proof>
  <proof prover="1"><result status="valid" time="0.356004" steps="40121"/></proof>
  <proof prover="2"><result status="valid" time="0.470584"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.138298" steps="36436"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.346610" steps="712"/></proof>
  <proof prover="1"><result status="valid" time="0.218406" steps="40354"/></proof>
  <proof prover="2"><result status="valid" time="0.708478"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.538158" steps="52195"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.095788" steps="35970"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.232479" steps="39960"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.10" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.100404" steps="35465"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.11" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.297783" steps="637"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.12" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.567168" steps="53354"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.13" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.129618" steps="36207"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.14" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.356736" steps="40739"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.289723" steps="41338"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.16" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.824810" steps="58855"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.17" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.369207" steps="41774"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.129933" steps="35978"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.090487" steps="35991"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.389901" steps="42493"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.21" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.131017" steps="37045"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.22" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.356982" steps="42714"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.23" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.364933" steps="46924"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.24" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.263547" steps="37264"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.25" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.219006" steps="39062"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.26" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.084460" steps="35400"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.27" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.133875" steps="35413"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.28" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.260355" steps="39414"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.29" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.120910" steps="36402"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.30" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.275722" steps="39961"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.31" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.229110" steps="42157"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.32" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.165899" steps="35938"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.33" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="66.688019" steps="1197371"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.34" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.133342" steps="38077"/></proof>
  </goal>
  <goal name="preds_with_lowest_dfsnum&#39;vc.35" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="theorem4">
   <goal name="preds_with_lowest_dfsnum&#39;vc.35.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="0.201836" steps="37499"/></proof>
   </goal>
   <goal name="preds_with_lowest_dfsnum&#39;vc.35.1" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="0.192044" steps="37499"/></proof>
   </goal>
   <goal name="preds_with_lowest_dfsnum&#39;vc.35.2" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="0.177819" steps="37497"/></proof>
   </goal>
   <goal name="preds_with_lowest_dfsnum&#39;vc.35.3" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="0.205878" steps="37499"/></proof>
   </goal>
   <goal name="preds_with_lowest_dfsnum&#39;vc.35.4" expl="apply premises" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="preds_with_lowest_dfsnum&#39;vc.35.4.0" expl="apply premises" proved="true">
    <transf name="introduce_premises" proved="true" >
     <goal name="preds_with_lowest_dfsnum&#39;vc.35.4.0.0" expl="apply premises" proved="true">
     <transf name="destruct_rec" proved="true" arg1="H">
      <goal name="preds_with_lowest_dfsnum&#39;vc.35.4.0.0.0" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="0.589165"/></proof>
      </goal>
      <goal name="preds_with_lowest_dfsnum&#39;vc.35.4.0.0.1" expl="apply premises" proved="true">
      <transf name="instantiate" proved="true" arg1="Ensures1" arg2="v1">
       <goal name="preds_with_lowest_dfsnum&#39;vc.35.4.0.0.1.0" expl="apply premises" proved="true">
       <transf name="destruct_rec" proved="true" arg1="Hinst">
        <goal name="preds_with_lowest_dfsnum&#39;vc.35.4.0.0.1.0.0" expl="destruct premise" proved="true">
        <proof prover="1"><result status="valid" time="0.131382" steps="37609"/></proof>
        </goal>
        <goal name="preds_with_lowest_dfsnum&#39;vc.35.4.0.0.1.0.1" expl="destruct premise" proved="true">
        <proof prover="1"><result status="valid" time="0.436661" steps="46607"/></proof>
        </goal>
        <goal name="preds_with_lowest_dfsnum&#39;vc.35.4.0.0.1.0.2" expl="apply premises" proved="true">
        <transf name="eliminate_let" proved="true" >
         <goal name="preds_with_lowest_dfsnum&#39;vc.35.4.0.0.1.0.2.0" expl="apply premises" proved="true">
         <transf name="destruct_rec" proved="true" arg1="Hinst">
          <goal name="preds_with_lowest_dfsnum&#39;vc.35.4.0.0.1.0.2.0.0" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="1.189020" steps="79601"/></proof>
          </goal>
          <goal name="preds_with_lowest_dfsnum&#39;vc.35.4.0.0.1.0.2.0.1" expl="apply premises" proved="true">
          <transf name="instantiate" proved="true" arg1="Hinst" arg2="u">
           <goal name="preds_with_lowest_dfsnum&#39;vc.35.4.0.0.1.0.2.0.1.0" expl="apply premises" proved="true">
           <transf name="destruct_rec" proved="true" arg1="Hinst">
            <goal name="preds_with_lowest_dfsnum&#39;vc.35.4.0.0.1.0.2.0.1.0.0" expl="destruct premise" proved="true">
            <proof prover="1"><result status="valid" time="0.519924" steps="56387"/></proof>
            </goal>
            <goal name="preds_with_lowest_dfsnum&#39;vc.35.4.0.0.1.0.2.0.1.0.1" expl="destruct premise" proved="true">
            <proof prover="1"><result status="valid" time="0.100908" steps="41031"/></proof>
            </goal>
            <goal name="preds_with_lowest_dfsnum&#39;vc.35.4.0.0.1.0.2.0.1.0.2" expl="apply premises" proved="true">
            <proof prover="1"><result status="valid" time="6.927151" steps="191503"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="CalcuSemi" proved="true">
 <goal name="calcu_semi&#39;vc" expl="VC for calcu_semi" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="calcu_semi&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.336856" steps="40896"/></proof>
  </goal>
  <goal name="calcu_semi&#39;vc.1" expl="assertion" proved="true">
  <transf name="unfold" proved="true" arg1="super_wf_dfsnum_parent" arg2="in" arg3="H3">
   <goal name="calcu_semi&#39;vc.1.0" expl="assertion" proved="true">
   <transf name="unfold" proved="true" arg1="wf_dfsnum_parent" arg2="in" arg3="H3">
    <goal name="calcu_semi&#39;vc.1.0.0" expl="assertion" proved="true">
    <transf name="destruct_rec" proved="true" arg1="H3">
     <goal name="calcu_semi&#39;vc.1.0.0.0" expl="assertion" proved="true">
     <transf name="eliminate_let" proved="true" >
      <goal name="calcu_semi&#39;vc.1.0.0.0.0" expl="assertion" proved="true">
      <transf name="destruct_rec" proved="true" arg1="H5">
       <goal name="calcu_semi&#39;vc.1.0.0.0.0.0" expl="assertion" proved="true">
       <transf name="instantiate" proved="true" arg1="H6" arg2="i">
        <goal name="calcu_semi&#39;vc.1.0.0.0.0.0.0" expl="assertion" proved="true">
        <transf name="destruct_rec" proved="true" arg1="Hinst">
         <goal name="calcu_semi&#39;vc.1.0.0.0.0.0.0.0" expl="destruct premise" proved="true">
         <proof prover="0"><result status="valid" time="0.061672" steps="40"/></proof>
         </goal>
         <goal name="calcu_semi&#39;vc.1.0.0.0.0.0.0.1" expl="assertion" proved="true">
         <proof prover="2"><result status="valid" time="0.709569"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="calcu_semi&#39;vc.2" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.226211" steps="258"/></proof>
  <proof prover="1"><result status="valid" time="0.225403" steps="35234"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="calcu_semi&#39;vc.2.0" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.260600" steps="35234"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="calcu_semi&#39;vc.3" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.216276" steps="35179"/></proof>
  </goal>
  <goal name="calcu_semi&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.165848" steps="31619"/></proof>
  </goal>
  <goal name="calcu_semi&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.176987" steps="432"/></proof>
  <proof prover="1"><result status="valid" time="0.254539" steps="36015"/></proof>
  </goal>
  <goal name="calcu_semi&#39;vc.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.159381" steps="34728"/></proof>
  </goal>
  <goal name="calcu_semi&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.239250" steps="34761"/></proof>
  </goal>
  <goal name="calcu_semi&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.084528" steps="197"/></proof>
  <proof prover="1"><result status="valid" time="0.236563" steps="38176"/></proof>
  </goal>
  <goal name="calcu_semi&#39;vc.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.246953" steps="36001"/></proof>
  </goal>
  <goal name="calcu_semi&#39;vc.10" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.353093" steps="44669"/></proof>
  </goal>
  <goal name="calcu_semi&#39;vc.11" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="2.214254" steps="4846"/></proof>
  </goal>
  <goal name="calcu_semi&#39;vc.12" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.056188" steps="52"/></proof>
  </goal>
  <goal name="calcu_semi&#39;vc.13" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.139336" steps="32920"/></proof>
  </goal>
  <goal name="calcu_semi&#39;vc.14" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.059615" steps="52"/></proof>
  <transf name="case" proved="true" arg1="(x = n)">
   <goal name="calcu_semi&#39;vc.14.0" expl="true case (precondition)" proved="true">
   <proof prover="1"><result status="valid" time="0.219425" steps="33565"/></proof>
   </goal>
   <goal name="calcu_semi&#39;vc.14.1" expl="false case (precondition)" proved="true">
   <proof prover="0"><result status="valid" time="0.062490" steps="54"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="calcu_semi&#39;vc.15" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.399184" steps="1079"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="calcu_semi&#39;vc.15.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.334018" steps="1079"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="calcu_semi&#39;vc.16" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.119338" steps="546"/></proof>
  </goal>
  <goal name="calcu_semi&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.733725" steps="2299"/></proof>
  </goal>
  <goal name="calcu_semi&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.817351" steps="61272"/></proof>
  </goal>
  <goal name="calcu_semi&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="8.458953" steps="16831"/></proof>
  <proof prover="1"><result status="valid" time="1.071062" steps="68418"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="CalcuIdom" proved="true">
 <goal name="calcu_idom&#39;vc" expl="VC for calcu_idom" proved="true">
 <transf name="split_goal_full" proved="true" >
  <goal name="calcu_idom&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.367810" steps="43212"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.1" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="calcu_idom&#39;vc.1.0" expl="assertion" proved="true">
   <transf name="assert" proved="true" arg1="(mem i vertex_mp)">
    <goal name="calcu_idom&#39;vc.1.0.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="75.441532"/></proof>
    </goal>
    <goal name="calcu_idom&#39;vc.1.0.1" expl="assertion" proved="true">
    <proof prover="1"><result status="valid" time="0.312146" steps="36067"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="calcu_idom&#39;vc.2" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.201937" steps="36361"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.3" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.322577" steps="42302"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.220164" steps="36854"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.169739" steps="37893"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.6" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="calcu_idom&#39;vc.6.0" expl="precondition" proved="true">
   <transf name="exists" proved="true" arg1="i">
    <goal name="calcu_idom&#39;vc.6.0.0" proved="true">
    <transf name="exists" proved="true" arg1="p">
     <goal name="calcu_idom&#39;vc.6.0.0.0" proved="true">
     <transf name="assert" proved="true" arg1="(exists i_semi_n p_semi_n. mapsto semi_n (i_semi_n, p_semi_n) dfsnum_parent)">
      <goal name="calcu_idom&#39;vc.6.0.0.0.0" expl="asserted formula" proved="true">
      <proof prover="1"><result status="valid" time="30.809078" steps="422451"/></proof>
      </goal>
      <goal name="calcu_idom&#39;vc.6.0.0.0.1" proved="true">
      <proof prover="0"><result status="valid" time="1.564831" steps="2954"/></proof>
      <proof prover="1"><result status="valid" time="12.699933" steps="353416"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="calcu_idom&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.931913" steps="69894"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.156663" steps="35803"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.486404" steps="48058"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.10" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.373346" steps="40673"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.11" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.977355" steps="71401"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.12" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="calcu_idom&#39;vc.12.0" expl="assertion" proved="true">
   <transf name="assert" proved="true" arg1="(exists idom_y. idom_y ~&gt; o3)">
    <goal name="calcu_idom&#39;vc.12.0.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="0.823455"/></proof>
    </goal>
    <goal name="calcu_idom&#39;vc.12.0.1" expl="assertion" proved="true">
    <transf name="destruct_rec" proved="true" arg1="h">
     <goal name="calcu_idom&#39;vc.12.0.1.0" expl="assertion" proved="true">
     <transf name="instantiate" proved="true" arg1="corollary1" arg2="dfsnum_parent, n, semi_n, o3, semi_y, idom_y">
      <goal name="calcu_idom&#39;vc.12.0.1.0.0" expl="assertion" proved="true">
      <transf name="destruct_rec" proved="true" arg1="Hinst">
       <goal name="calcu_idom&#39;vc.12.0.1.0.0.0" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.090065" steps="34152"/></proof>
       </goal>
       <goal name="calcu_idom&#39;vc.12.0.1.0.0.1" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.082355" steps="34152"/></proof>
       </goal>
       <goal name="calcu_idom&#39;vc.12.0.1.0.0.2" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.378434" steps="41504"/></proof>
       </goal>
       <goal name="calcu_idom&#39;vc.12.0.1.0.0.3" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.407668" steps="40700"/></proof>
       </goal>
       <goal name="calcu_idom&#39;vc.12.0.1.0.0.4" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.374701" steps="39941"/></proof>
       </goal>
       <goal name="calcu_idom&#39;vc.12.0.1.0.0.5" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.093012" steps="34152"/></proof>
       </goal>
       <goal name="calcu_idom&#39;vc.12.0.1.0.0.6" expl="destruct premise" proved="true">
       <proof prover="0"><result status="valid" time="9.857704" steps="16282"/></proof>
       </goal>
       <goal name="calcu_idom&#39;vc.12.0.1.0.0.7" expl="assertion" proved="true">
       <proof prover="1"><result status="valid" time="32.091177" steps="923489"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="calcu_idom&#39;vc.13" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="39.843881" steps="111319"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.14" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.251045" steps="36672"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.249247" steps="36615"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.229926" steps="36725"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.242727" steps="37176"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.245499" steps="37292"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.684615" steps="1753"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.263322" steps="42512"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.21" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="calcu_idom&#39;vc.21.0" expl="assertion" proved="true">
   <transf name="instantiate" proved="true" arg1="corollary1" arg2="dfsnum_parent, n, semi_n, o3, semi_y, idom_n">
    <goal name="calcu_idom&#39;vc.21.0.0" expl="assertion" proved="true">
    <transf name="destruct_rec" proved="true" arg1="Hinst">
     <goal name="calcu_idom&#39;vc.21.0.0.0" expl="destruct premise" proved="true">
     <proof prover="1"><result status="valid" time="0.078937" steps="34154"/></proof>
     </goal>
     <goal name="calcu_idom&#39;vc.21.0.0.1" expl="destruct premise" proved="true">
     <proof prover="1"><result status="valid" time="0.085421" steps="34154"/></proof>
     </goal>
     <goal name="calcu_idom&#39;vc.21.0.0.2" expl="destruct premise" proved="true">
     <proof prover="1"><result status="valid" time="0.272958" steps="41328"/></proof>
     </goal>
     <goal name="calcu_idom&#39;vc.21.0.0.3" expl="destruct premise" proved="true">
     <proof prover="1"><result status="valid" time="0.395810" steps="40773"/></proof>
     </goal>
     <goal name="calcu_idom&#39;vc.21.0.0.4" expl="destruct premise" proved="true">
     <proof prover="1"><result status="valid" time="0.386507" steps="40471"/></proof>
     </goal>
     <goal name="calcu_idom&#39;vc.21.0.0.5" expl="destruct premise" proved="true">
     <proof prover="1"><result status="valid" time="0.294390" steps="39316"/></proof>
     </goal>
     <goal name="calcu_idom&#39;vc.21.0.0.6" expl="destruct premise" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="calcu_idom&#39;vc.21.0.0.6.0" expl="destruct premise" proved="true">
      <transf name="instantiate" proved="true" arg1="mutual_parent" arg2="dfsnum_parent, semi_n, o1, n">
       <goal name="calcu_idom&#39;vc.21.0.0.6.0.0" expl="destruct premise" proved="true">
       <transf name="destruct_rec" proved="true" arg1="Hinst">
        <goal name="calcu_idom&#39;vc.21.0.0.6.0.0.0" expl="destruct premise" proved="true">
        <proof prover="1"><result status="valid" time="0.277273" steps="39083"/></proof>
        </goal>
        <goal name="calcu_idom&#39;vc.21.0.0.6.0.0.1" expl="destruct premise" proved="true">
        <proof prover="1"><result status="valid" time="7.437027" steps="210273"/></proof>
        </goal>
        <goal name="calcu_idom&#39;vc.21.0.0.6.0.0.2" expl="destruct premise" proved="true">
        <proof prover="1"><result status="valid" time="0.124998" steps="34154"/></proof>
        </goal>
        <goal name="calcu_idom&#39;vc.21.0.0.6.0.0.3" expl="destruct premise" proved="true">
        <proof prover="1"><result status="valid" time="0.257787" steps="39293"/></proof>
        </goal>
        <goal name="calcu_idom&#39;vc.21.0.0.6.0.0.4" expl="destruct premise" proved="true">
        <proof prover="1"><result status="valid" time="0.547448" steps="49914"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="calcu_idom&#39;vc.21.0.0.6.1" expl="destruct premise" proved="true">
      <proof prover="0"><result status="valid" time="0.056061" steps="62"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="calcu_idom&#39;vc.21.0.0.7" expl="assertion" proved="true">
     <proof prover="1"><result status="valid" time="2.848277" steps="144391"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="calcu_idom&#39;vc.22" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="calcu_idom&#39;vc.22.0" expl="assertion" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="calcu_idom&#39;vc.22.0.0" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="4.921937" steps="10458"/></proof>
    </goal>
    <goal name="calcu_idom&#39;vc.22.0.1" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.319662" steps="848"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="calcu_idom&#39;vc.23" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.281297" steps="36862"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.24" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.192372" steps="36802"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.25" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.223469" steps="36952"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.26" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.185193" steps="37417"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.27" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.254557" steps="37461"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.28" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.655911" steps="1735"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.29" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.416440" steps="2047"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.30" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.391416" steps="41443"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.31" expl="assertion" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="calcu_idom&#39;vc.31.0" expl="assertion" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="calcu_idom&#39;vc.31.0.0" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.197827" steps="260"/></proof>
    </goal>
    <goal name="calcu_idom&#39;vc.31.0.1" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.182175" steps="260"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="calcu_idom&#39;vc.32" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.140747" steps="36951"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.33" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.285592" steps="36891"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.34" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.275224" steps="37041"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.35" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.161005" steps="37506"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.36" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.187001" steps="37550"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.37" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.206173" steps="316"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.38" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.230018" steps="401"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.39" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.722013" steps="1749"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.40" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.638725" steps="57365"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.41" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.517523" steps="100314"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.42" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.178746" steps="37588"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.43" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.165662" steps="96577"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.44" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.203673" steps="37845"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.45" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.678904" steps="1729"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.46" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.701094" steps="1946"/></proof>
  <proof prover="1"><result status="valid" time="0.722292" steps="59215"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.47" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.393974" steps="102343"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.48" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.148758" steps="107"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.49" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.114743" steps="2354"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.50" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.246094" steps="38210"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.51" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.392007" steps="42851"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.52" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.203811" steps="312"/></proof>
  <proof prover="1"><result status="valid" time="0.380989" steps="42858"/></proof>
  <proof prover="2"><result status="valid" time="0.325643"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.53" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.384111" steps="43337"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.54" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.138795" steps="109"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.55" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.199325" steps="312"/></proof>
  </goal>
  <goal name="calcu_idom&#39;vc.56" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.237962" steps="38185"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="LengauerTarjan" proved="true">
 <goal name="lengauer_tarjan&#39;vc" expl="VC for lengauer_tarjan" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="lengauer_tarjan&#39;vc.0" expl="assertion" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="lengauer_tarjan&#39;vc.0.0" expl="assertion" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="lengauer_tarjan&#39;vc.0.0.0" expl="assertion" proved="true">
    <proof prover="1"><result status="valid" time="12.282556" steps="282097"/></proof>
    </goal>
    <goal name="lengauer_tarjan&#39;vc.0.0.1" expl="assertion" proved="true">
    <proof prover="1"><result status="valid" time="2.094584" steps="106022"/></proof>
    </goal>
    <goal name="lengauer_tarjan&#39;vc.0.0.2" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.391052" steps="974"/></proof>
    </goal>
    <goal name="lengauer_tarjan&#39;vc.0.0.3" expl="assertion" proved="true">
    <proof prover="1"><result status="valid" time="0.335096" steps="43657"/></proof>
    </goal>
    <goal name="lengauer_tarjan&#39;vc.0.0.4" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.176292" steps="550"/></proof>
    </goal>
    <goal name="lengauer_tarjan&#39;vc.0.0.5" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.371508" steps="1209"/></proof>
    </goal>
    <goal name="lengauer_tarjan&#39;vc.0.0.6" expl="assertion" proved="true">
    <transf name="exists" proved="true" arg1="root">
     <goal name="lengauer_tarjan&#39;vc.0.0.6.0" proved="true">
     <proof prover="0"><result status="valid" time="0.298174" steps="765"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="lengauer_tarjan&#39;vc.0.0.7" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.217186" steps="773"/></proof>
    </goal>
    <goal name="lengauer_tarjan&#39;vc.0.0.8" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.433184" steps="1262"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="lengauer_tarjan&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.139171" steps="32936"/></proof>
  </goal>
  <goal name="lengauer_tarjan&#39;vc.2" expl="precondition" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="lengauer_tarjan&#39;vc.2.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="lengauer_tarjan&#39;vc.2.0.0" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="0.143520" steps="32935"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="lengauer_tarjan&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.138070" steps="32942"/></proof>
  </goal>
  <goal name="lengauer_tarjan&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.122204" steps="657"/></proof>
  <proof prover="1"><result status="timeout" time="120.000000" steps="1978909"/></proof>
  </goal>
  <goal name="lengauer_tarjan&#39;vc.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.242290" steps="39010"/></proof>
  </goal>
  <goal name="lengauer_tarjan&#39;vc.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.301822" steps="39373"/></proof>
  </goal>
  <goal name="lengauer_tarjan&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.307065" steps="42596"/></proof>
  </goal>
  <goal name="lengauer_tarjan&#39;vc.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.099449" steps="72385"/></proof>
  </goal>
  <goal name="lengauer_tarjan&#39;vc.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.425911" steps="50811"/></proof>
  </goal>
  <goal name="lengauer_tarjan&#39;vc.10" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.589215" steps="53813"/></proof>
  </goal>
  <goal name="lengauer_tarjan&#39;vc.11" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="2.284794" steps="6993"/></proof>
  <proof prover="1"><result status="valid" time="0.307632" steps="40125"/></proof>
  </goal>
  <goal name="lengauer_tarjan&#39;vc.12" expl="assertion" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="lengauer_tarjan&#39;vc.12.0" expl="assertion" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="lengauer_tarjan&#39;vc.12.0.0" expl="assertion" proved="true">
    <transf name="case" proved="true" arg1="(y = root )">
     <goal name="lengauer_tarjan&#39;vc.12.0.0.0" expl="true case (assertion)" proved="true">
     <proof prover="0"><result status="valid" time="0.156505" steps="502"/></proof>
     </goal>
     <goal name="lengauer_tarjan&#39;vc.12.0.0.1" expl="false case (assertion)" proved="true">
     <transf name="assert" proved="true" arg1="(forall n. forall y p. path root p y -&gt; length p = n -&gt; y &lt;&gt; root -&gt; mem y dfsnum_parent)">
      <goal name="lengauer_tarjan&#39;vc.12.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="intros_n" proved="true" arg1="1">
       <goal name="lengauer_tarjan&#39;vc.12.0.0.1.0.0" expl="asserted formula" proved="true">
       <transf name="induction" proved="true" arg1="n">
        <goal name="lengauer_tarjan&#39;vc.12.0.0.1.0.0.0" expl="base case (asserted formula)" proved="true">
        <proof prover="0"><result status="valid" time="0.124422" steps="276"/></proof>
        </goal>
        <goal name="lengauer_tarjan&#39;vc.12.0.0.1.0.0.1" expl="recursive case (asserted formula)" proved="true">
        <transf name="induction_pr" proved="true" >
         <goal name="lengauer_tarjan&#39;vc.12.0.0.1.0.0.1.0" proved="true">
         <proof prover="1"><result status="valid" time="0.243333" steps="37032"/></proof>
         </goal>
         <goal name="lengauer_tarjan&#39;vc.12.0.0.1.0.0.1.1" proved="true">
         <proof prover="1"><result status="valid" time="0.509664" steps="55150"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="lengauer_tarjan&#39;vc.12.0.0.1.1" expl="false case (assertion)" proved="true">
      <proof prover="1"><result status="valid" time="0.192636" steps="37060"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="lengauer_tarjan&#39;vc.13" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.152517" steps="35927"/></proof>
  </goal>
  <goal name="lengauer_tarjan&#39;vc.14" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.350412" steps="44454"/></proof>
  </goal>
  <goal name="lengauer_tarjan&#39;vc.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.212995" steps="46202"/></proof>
  </goal>
  <goal name="lengauer_tarjan&#39;vc.16" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.604585" steps="2071"/></proof>
  <proof prover="1"><result status="valid" time="1.516334" steps="94933"/></proof>
  </goal>
  <goal name="lengauer_tarjan&#39;vc.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.144488" steps="36677"/></proof>
  </goal>
  <goal name="lengauer_tarjan&#39;vc.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.394945" steps="45401"/></proof>
  </goal>
  <goal name="lengauer_tarjan&#39;vc.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.225521" steps="37743"/></proof>
  </goal>
  <goal name="lengauer_tarjan&#39;vc.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.216124" steps="37803"/></proof>
  </goal>
  <goal name="lengauer_tarjan&#39;vc.21" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.421907" steps="46700"/></proof>
  </goal>
  <goal name="lengauer_tarjan&#39;vc.22" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="9.535185" steps="380875"/></proof>
  </goal>
  <goal name="lengauer_tarjan&#39;vc.23" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.459208" steps="46916"/></proof>
  </goal>
  <goal name="lengauer_tarjan&#39;vc.24" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.118221" steps="78009"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
